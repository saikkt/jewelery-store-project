{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Utilities/models/products/filter-sort-model/global-product-details.model.ts","./src/app/Utilities/models/products/filter-sort-model/product-filter.model.ts","./src/app/Utilities/models/products/filter-sort-model/product-sort.model.ts","./src/app/Utilities/models/products/orders/charge-request.mode.ts","./src/app/Utilities/models/users/address.model.ts","./src/app/Utilities/models/users/customer-register.model.ts","./src/app/Utilities/models/users/customer.model.ts","./src/app/Utilities/models/users/guest.model.ts","./src/app/Utilities/services/error/error-handler.service.ts","./src/app/Utilities/services/global/global-models.service.ts","./src/app/Utilities/services/landing-page/header.service.ts","./src/app/Utilities/services/landing-page/landing-page.service.ts","./src/app/Utilities/services/notfications/notification.service.ts","./src/app/Utilities/services/products/orders/check-out.service.ts","./src/app/Utilities/services/products/orders/product-kart.service.ts","./src/app/Utilities/services/products/orders/wish-list.service.ts","./src/app/Utilities/services/products/product-search.service.ts","./src/app/Utilities/services/products/product-util.service.ts","./src/app/Utilities/services/products/product-wishlist.service.ts","./src/app/Utilities/services/products/product.service.ts","./src/app/Utilities/services/ui-loader/ui-loader.service.ts","./src/app/Utilities/services/users/address.service.ts","./src/app/Utilities/services/users/login.service.ts","./src/app/Utilities/services/users/logout.service.ts","./src/app/Utilities/services/users/user.service.ts","./src/app/Utilities/services/validation/validation.service.ts","./src/app/account-block/account-block.component.ts","./src/app/account-block/account-block.component.html","./src/app/account-block/edit-address/edit-address.component.ts","./src/app/account-block/edit-address/edit-address.component.html","./src/app/account-block/edit-personal-details/edit-personal-details.component.ts","./src/app/account-block/edit-personal-details/edit-personal-details.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/check-out/check-out.component.ts","./src/app/check-out/check-out.component.html","./src/app/check-out/stripe-block/guest-details-block/guest-details-block.component.ts","./src/app/check-out/stripe-block/guest-details-block/guest-details-block.component.html","./src/app/check-out/stripe-block/stripe-block.component.ts","./src/app/check-out/stripe-block/stripe-block.component.html","./src/app/check-out/stripe-block/user-address-block/user-address-block.component.ts","./src/app/check-out/stripe-block/user-address-block/user-address-block.component.html","./src/app/check-out/summary-block/summary-block.component.ts","./src/app/check-out/summary-block/summary-block.component.html","./src/app/contact-block/contact-block.component.ts","./src/app/contact-block/contact-block.component.html","./src/app/headers/bottom-header/bottom-header.component.ts","./src/app/headers/bottom-header/bottom-header.component.html","./src/app/headers/headers.component.ts","./src/app/headers/headers.component.html","./src/app/headers/top-header/top-header.component.ts","./src/app/headers/top-header/top-header.component.html","./src/app/home-blocks/best-selling-block/best-selling-block.component.ts","./src/app/home-blocks/best-selling-block/best-selling-block.component.html","./src/app/home-blocks/carousel-block/carousel-block.component.ts","./src/app/home-blocks/carousel-block/carousel-block.component.html","./src/app/home-blocks/home-blocks.component.ts","./src/app/home-blocks/home-blocks.component.html","./src/app/home-blocks/new-arrivals-block/new-arrivals-block.component.ts","./src/app/home-blocks/new-arrivals-block/new-arrivals-block.component.html","./src/app/home-blocks/popular-collection-block/popular-collection-block.component.ts","./src/app/home-blocks/popular-collection-block/popular-collection-block.component.html","./src/app/notification-block/notification-block.component.ts","./src/app/notification-block/notification-block.component.html","./src/app/product-blocks/items-block/items-block.component.ts","./src/app/product-blocks/items-block/items-block.component.html","./src/app/product-blocks/items-block/product-item/product-item.component.ts","./src/app/product-blocks/items-block/product-item/product-item.component.html","./src/app/product-blocks/product-blocks.component.ts","./src/app/product-blocks/product-blocks.component.html","./src/app/product-blocks/sort-filter-block/sort-filter-block.component.ts","./src/app/product-blocks/sort-filter-block/sort-filter-block.component.html","./src/app/product-kart/product-kart.component.ts","./src/app/product-kart/product-kart.component.html","./src/app/wishlist-block/wishlist-block.component.ts","./src/app/wishlist-block/wishlist-block.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ProductFilter } from './product-filter.model';\r\nimport { ProductSort } from './product-sort.model';\r\n\r\nexport class GlobalProductDetails {\r\n    constructor(\r\n        public facets: any,\r\n        public sortBy: ProductSort[]\r\n    ) {}  \r\n}","export class ProductFilter {\r\n    constructor(\r\n        public id: number, \r\n        public name: string,\r\n        public enabled: boolean,\r\n        public count: number,\r\n        public min_price: number,\r\n        public max_price: number\r\n    ){}\r\n}","export class ProductSort {\r\n    constructor(\r\n        public id: number, \r\n        public name: string,\r\n        public enabled: boolean,\r\n        public count: number\r\n    ) {}\r\n}\r\n","import { Guest } from '../../users/guest.model';\r\n\r\nexport class ChargeRequest {\r\n    constructor(\r\n        public description: string,\r\n        public amount: number,\r\n        public Currency: string,\r\n        public stripeEmail: string,\r\n        public stripeToken: string,\r\n        public addressID: number,\r\n        public guestModel: Guest\r\n    ){}\r\n}","export class Address {\r\n\r\n    constructor(\r\n        public addressID: number,\r\n        public customerID: number,\r\n        public street: string,\r\n        public apartmentNumber: string,\r\n        public city: string,\r\n        public state: string,\r\n        public country: string,\r\n        public zipCode: string,\r\n        public defaultBilling: boolean,\r\n        public defaultShipping: boolean,\r\n        public version: string\r\n    ) {}\r\n\r\n}","export class CustomerRegister {\r\n    constructor(\r\n        public customerID: number,\r\n        public customerFirstName: string,\r\n        public customerLastName: string,\r\n        public phone: string,\r\n        public emailAddress: string,\r\n        public isGuest: boolean,\r\n        public userName: string,\r\n        public password: string,\r\n        public repassword: string,\r\n        public version: number,\r\n    ){}\r\n}","export class Customer {\r\n    constructor(\r\n        public customerID: number,\r\n        public customerFirstName: string,\r\n        public customerLastName: string,\r\n        public phone: string,\r\n        public emailAddress: string,\r\n        public isGuest: string\r\n    ) {}\r\n}","export class Guest {\r\n    constructor(\r\n        public guestID: number,\r\n        public firstName: string,\r\n        public lastName: string,\r\n        public emailAddress: string,\r\n        public streetAddress: string,\r\n        public apartmentNumber: string,\r\n        public city: string,\r\n        public state: string,\r\n        public country: string,\r\n        public zipCode: string,\r\n        public version: number\r\n    ){}\r\n}","import { Injectable } from '@angular/core';\r\nimport { UILoaderService } from '../ui-loader/ui-loader.service';\r\nimport { NotificationService } from '../notfications/notification.service';\r\n\r\n@Injectable()\r\nexport class ErrorService {\r\n\r\n    constructor(\r\n        private uiLoaderService: UILoaderService, \r\n        private notifService: NotificationService\r\n    ) {}\r\n\r\n    logError(errMsg: string, error: any) {\r\n        console.log('error --> ', errMsg, error)\r\n        this.uiLoaderService.loaderErrorObservable.next(true);\r\n        this.notifService.pushNotification(this.notifService.NOTIF_DANGER, errMsg)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Category } from 'src/app/Utilities/models/global-models/category.model';\r\nimport { Section } from 'src/app/Utilities/models/global-models/section.model';\r\nimport { SubCategory } from 'src/app/Utilities/models/global-models/sub-category.model';\r\nimport { Collection } from 'src/app/Utilities/models/global-models/collection.model';\r\nimport { Discount } from 'src/app/Utilities/models/global-models/discount.model';\r\nimport { Material } from 'src/app/Utilities/models/global-models/material.model';\r\nimport { MetalPurity } from 'src/app/Utilities/models/global-models/metal-purity.model';\r\nimport { LandingPage } from '../../models/landing-page/landing-page.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class GlobalModelsService {\r\n\r\n    categories: Category[] = []\r\n    subCategory: SubCategory[] =[]\r\n    collections: Collection[] = []\r\n    discounts: Discount[] = []\r\n    materials: Material[] = []\r\n    metalPurities: MetalPurity[] = []\r\n    sections: Section[] = []\r\n\r\n    globalModelsLoaded = false\r\n    globalModelsLoadedObservable = new Subject<boolean>();\r\n\r\n    constructor(\r\n\r\n    ){}\r\n\r\n    \r\n    assignGlobalModels(landingPage: LandingPage) {\r\n        this.categories = landingPage.globalCategoryList\r\n        this.collections = landingPage.globalCollectionList\r\n        this.sections = landingPage.globalSectionList\r\n        this.subCategory = landingPage.globalSubCategory\r\n        this.materials = landingPage.globalMaterialList\r\n        this.metalPurities = landingPage.globalMetalPurityList\r\n        this.discounts = landingPage.globalDiscountList\r\n\r\n        if(this.categories == null || this.categories.length == 0)\r\n            throw new Error('Categories are null')\r\n\r\n        if(this.sections == null || this.categories.length == 0)\r\n            throw new Error('Sections are null')\r\n\r\n        if(this.subCategory == null || this.categories.length == 0)\r\n            throw new Error('sub categories are null')\r\n\r\n        this.globalModelsLoaded = true\r\n        this.globalModelsLoadedObservable.next(this.globalModelsLoaded)\r\n\r\n        console.log('All Global Lists ===> ', this.categories, this.subCategory, this.sections, this.collections, this.metalPurities, this.materials, this.discounts)\r\n\r\n    }\r\n\r\n    getCategoryByID(categoryID: number): Category {\r\n        let category = null\r\n        this.categories.forEach(\r\n            c => {\r\n                if(c.categoryID == categoryID) category = c\r\n            }\r\n        )\r\n        return category;\r\n    }\r\n\r\n    getSubCategoryByID(subCategoryID: number): SubCategory {\r\n        let subCategory = null\r\n        this.subCategory.forEach(\r\n            sc => {\r\n                if(sc.subCategoryID == subCategoryID) subCategory = sc\r\n            }\r\n        )\r\n        return subCategory;\r\n    }\r\n\r\n    getCollectionByID(collectionID: number): Collection {\r\n        let collection = null\r\n        this.collections.forEach(\r\n            c => {\r\n                if(c.CollectionID == collectionID) collection = c\r\n            }\r\n        )\r\n        return collection\r\n    }\r\n\r\n    getDiscountByID(discountID: number): Discount {\r\n        let discount = null\r\n        this.discounts.forEach(\r\n            d => {\r\n                if(d.discountID == discountID) discount = d\r\n            }\r\n        )\r\n        return discount;\r\n    }\r\n\r\n    getMaterialByID(materialID: number): Material {\r\n        let material = null\r\n        this.materials.forEach(\r\n            m => {\r\n                if(m.materialID == materialID) material = m\r\n            }\r\n        )\r\n        return material\r\n    }\r\n\r\n    getMetalPurityByID(metalPurityID: number): MetalPurity {\r\n        let metalPurity = null\r\n        this.metalPurities.forEach(\r\n            m => {\r\n                if(m.metalPurityID == metalPurityID) metalPurity = m\r\n            }\r\n        )\r\n        return metalPurity;\r\n    }\r\n\r\n    getSectionByID(sectionID: number): Section {\r\n        let section = null\r\n        this.sections.forEach(\r\n            s => {\r\n                if(s.sectionID == sectionID) section = s\r\n            }\r\n        )\r\n        return section;\r\n    }\r\n\r\n    getCategoryNamesAsList(): string[] {\r\n        let categoryNames = []\r\n        this.categories.forEach(\r\n            c => categoryNames.push(c.categoryName)\r\n        )\r\n        return categoryNames\r\n    }\r\n\r\n    getSubCategoryNamesAsList(): string[] {\r\n        let subCategoryNames = []\r\n        this.subCategory.forEach(\r\n            sc => subCategoryNames.push(sc.subCategoryName)\r\n        )\r\n        return subCategoryNames;\r\n    }\r\n\r\n    getCollectionNamesAsList(): string[] {\r\n        let collectionNames = []\r\n        this.collections.forEach(\r\n            c => collectionNames.push(c.collectionName)\r\n        )\r\n        return collectionNames;\r\n    }\r\n\r\n    getDiscountPercentsAsList(): string[] {\r\n        let discountList = []\r\n        this.discounts.forEach(\r\n            d => discountList.push(d.discountType)\r\n        )\r\n        return discountList\r\n    }\r\n\r\n    getMaterialNamesAsList(): string[] {\r\n        let materialNames = []\r\n        this.materials.forEach(\r\n            m => materialNames.push(m.materialType)\r\n        )\r\n        return materialNames\r\n    }\r\n\r\n    getMetalPurtiesAsList(): string[] {\r\n        let metalPurityNames = []\r\n        this.metalPurities.forEach(\r\n            m => metalPurityNames.push(m.purity)\r\n        )\r\n        return metalPurityNames;\r\n    }\r\n\r\n    getSectionNamesAsList(): string[] {\r\n        let sectionName = []\r\n        this.sections.forEach(\r\n            s => sectionName.push(s.sectionName)\r\n        )\r\n        return sectionName;\r\n    }\r\n\r\n    getSubCategoriesBasedOnCategoryName(categoryName: string): string[] {\r\n        let subCategories = []\r\n        this.subCategory.forEach(\r\n            s => {\r\n                let c = this.getCategoryByID(s.categoryID)\r\n                if(c.categoryName === categoryName)\r\n                    subCategories.push(s.subCategoryName)\r\n            }\r\n        )\r\n        return subCategories;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { Collection } from '../../models/global-models/collection.model';\r\nimport { Category } from '../../models/global-models/category.model';\r\nimport { SubCategory } from '../../models/global-models/sub-category.model';\r\nimport { LandingPage } from '../../models/landing-page/landing-page.model';\r\nimport { Section } from '../../models/global-models/section.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HeaderService {\r\n\r\n    collections: Collection[] = []\r\n\r\n    womens = new Map<Category, SubCategory[]>();\r\n    mens = new Map<Category, SubCategory[]>();\r\n    kids = new Map<Category, SubCategory[]>();\r\n\r\n    \r\n    headersLoaded = new Subject<boolean>();\r\n\r\n    constructor(private http: HttpClient, private errorService: ErrorService) {}\r\n\r\n    assignHeaders(landingPage: LandingPage) {\r\n        let headers = landingPage.navBar\r\n        console.log('Navbar -->> ', headers)\r\n        \r\n        if(headers == null)\r\n            throw new Error('header object should not be null');\r\n        \r\n        Object.keys(headers).forEach(\r\n            (key) => {\r\n                var section: Section = JSON.parse(key);\r\n                if( section.sectionName.toLowerCase() === 'womens') {\r\n                    this.womens = this.getObjectForMap(headers, key);\r\n                    console.log('Women headers --> ', this.womens)\r\n                }\r\n                else if( section.sectionName.toLowerCase() === 'mens') {\r\n                    this.mens = this.getObjectForMap(headers, key)\r\n                    console.log('Mens headers --> ', this.mens)\r\n                } \r\n                else  if( section.sectionName.toLowerCase() === 'kids') {\r\n                    this.kids = this.getObjectForMap(headers, key)\r\n                    console.log('Kids headers --> ', this.kids)\r\n                }\r\n            }\r\n        )\r\n\r\n        this.collections = landingPage.globalCollectionList\r\n\r\n        \r\n        this.headersLoaded.next(true);\r\n    }\r\n\r\n    getObjectForMap(headers, key) {\r\n        var localMap = new Map<Category, SubCategory[]>();\r\n\r\n        var localHeader = headers[key]\r\n\r\n        if(localHeader == null)\r\n            throw new Error('header object should not be null');\r\n\r\n        Object.keys(headers[key]).forEach(\r\n            (catKey) => {\r\n                var category: Category = JSON.parse(catKey);\r\n                localMap.set(category, headers[key][catKey])\r\n            }\r\n        )\r\n        return localMap\r\n    }\r\n\r\n    getWomensHeaders() {\r\n        return this.womens;\r\n    }\r\n\r\n    getMensHeaders() {\r\n        return this.mens;\r\n    }\r\n\r\n    getKidsHeaders() {\r\n        return this.kids;\r\n    }\r\n\r\n    getCollectionsHeaders() {\r\n        return this.collections.slice();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HeaderService } from './header.service';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { GlobalModelsService } from '../global/global-models.service';\r\nimport { LandingPage } from '../../models/landing-page/landing-page.model';\r\n\r\n@Injectable()\r\nexport class LandingPageService {\r\n\r\n    LANDING_URL = '/landing-page'\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private headerService: HeaderService,\r\n        private globalService: GlobalModelsService,\r\n        private errorService: ErrorService\r\n    ) {}\r\n\r\n    landingPage: LandingPage = null;\r\n\r\n    landingPageLoaded = new Subject<boolean>();\r\n\r\n    fetchAllInfo() {\r\n        let check = true\r\n        this.http.get(this.LANDING_URL).subscribe(\r\n            (response: LandingPage) => {\r\n                console.log('Landing Page response ===> ', response);\r\n                this.landingPage = response;\r\n                try {\r\n                    this.globalService.assignGlobalModels(this.landingPage)\r\n                    this.headerService.assignHeaders(this.landingPage)\r\n                    this.landingPageLoaded.next(true)\r\n                } catch(err) {\r\n                    this.landingPageLoaded.next(false)\r\n                    this.errorService.logError('Error while assigning global models or headers', err)\r\n                }\r\n            },\r\n            error => {\r\n                this.landingPageLoaded.next(false)\r\n                this.errorService.logError('Error while loading landing page', error)\r\n            }\r\n        )\r\n    }\r\n\r\n    getLandingPage() {\r\n        return this.landingPage;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n    notifId = 0;\r\n\r\n    NOTIF_INFO = 'NOTIF-INFO'\r\n    NOTIF_SUCCESS = 'NOTIF_SUCCESS'\r\n    NOTIF_WARNING = 'NOTIF_WARNING'\r\n    NOTIF_DANGER = 'NOTIF_DANGER'\r\n\r\n    /**\r\n     * [id, type, message] --> only use this observable for notifications\r\n     */\r\n    notificationObservable = new Subject<string[]>();\r\n\r\n    // These are for internal calls\r\n    removeNotificationObservable = new Subject<string>();\r\n    notificationReArrangeObservable = new Subject<boolean>();\r\n\r\n    getNewId() {\r\n        return '' + this.notifId++;\r\n    }\r\n\r\n    decrementNotificationCount() {\r\n      if(this.notifId > 0)\r\n        this.notifId--;\r\n      return this.notifId;\r\n    }\r\n\r\n    pushNotification(type: string, message: string) {\r\n      this.notificationObservable.next( [ this.getNewId(), type, message ] )\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../../error/error-handler.service';\r\nimport { NotificationService } from '../../notfications/notification.service';\r\nimport { ChargeRequest } from 'src/app/Utilities/models/products/orders/charge-request.mode';\r\nimport { Checkout } from 'src/app/Utilities/models/products/orders/check-out.model';\r\n\r\n@Injectable()\r\nexport class CheckOutService {\r\n    \r\n    PYMT_API = 'payments/'\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService\r\n    ){}\r\n\r\n    checkOut: Checkout;\r\n\r\n    checkOutObservable = new Subject<boolean>();\r\n    paymentSuccessObservable = new Subject<boolean>();\r\n\r\n    performCheckout() {\r\n        this.http.get(this.PYMT_API + 'checkout').subscribe(\r\n            (checkOut: Checkout) => {\r\n                this.checkOut = checkOut\r\n                this.checkOutObservable.next(true)\r\n            },\r\n            error => {\r\n                this.checkOutObservable.next(false)\r\n                this.errorService.logError('Error while checkout ', error)\r\n            }\r\n        )\r\n    }\r\n\r\n    getCheckOutDetails() {\r\n        return this.checkOut\r\n    }\r\n    \r\n    chargeCustomer(chargeRequest: ChargeRequest) {\r\n        console.log('checkout request ===> ', chargeRequest)\r\n        this.http.post(this.PYMT_API + 'charge', chargeRequest).subscribe(\r\n            (response: Response) => {\r\n                console.log('checkout response ==>', response)\r\n                this.paymentSuccessObservable.next(true)\r\n                this.pushPaymentNotification(true, 'Payment successfull !!!');\r\n            },\r\n            error => {\r\n                this.paymentSuccessObservable.next(false)\r\n                this.pushPaymentNotification(false, 'Payment Failed !!!');\r\n                this.errorService.logError('Error while payment ', error)\r\n            }\r\n        )\r\n    }\r\n\r\n    pushPaymentNotification(status: boolean, msg: string) {\r\n        this.notifService.pushNotification(\r\n            status ? this.notifService.NOTIF_SUCCESS : this.notifService.NOTIF_WARNING,\r\n            msg\r\n        )\r\n    }\r\n  \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ProductKart } from 'src/app/Utilities/models/products/orders/product-kart.model';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../../error/error-handler.service';\r\nimport { NotificationService } from '../../notfications/notification.service';\r\nimport { ProductService } from '../product.service';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\n\r\n@Injectable()\r\nexport class ProductKartService {\r\n\r\n    KART_API = 'cart/'\r\n\r\n    kartProducts: ProductKart[] = [];\r\n    kartCountLoadedObserver = new Subject<number>();\r\n\r\n    totalKartAmount = 0;\r\n\r\n    kartCount = 0\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private productService: ProductService,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService\r\n    ) {}\r\n\r\n    fetchUserKart() {\r\n        this.http.get(this.KART_API + 'get-cart/').subscribe(\r\n            (localKartProducts: ProductKart[]) => {\r\n                this.setPreViewForKartProducts(localKartProducts)\r\n            },\r\n            error => {\r\n                this.kartHandleError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    setPreViewForKartProducts(localKartProducts: ProductKart[]) {\r\n        this.totalKartAmount = 0;\r\n        if(localKartProducts != null)\r\n            this.kartProducts = localKartProducts\r\n        else\r\n            this.kartProducts = []\r\n\r\n        this.kartProducts.forEach(\r\n            pk => this.setPreViewValues(pk)\r\n        )\r\n        \r\n        this.kartCount = this.kartProducts.length\r\n        console.log('Kart Products ---> ', this.kartProducts)\r\n        this.kartCountLoadedObserver.next(this.kartCount)\r\n    }\r\n\r\n    setPreViewValues(pk: ProductKart) {\r\n        // Set the product data first, avoid discount related issues\r\n        this.productService.setPreViewValues(pk.product)\r\n\r\n        if(pk.quantity > pk.product.inStockQuantity) {\r\n            pk.quantity = pk.product.inStockQuantity\r\n            pk.product.cartQuantity = pk.product.inStockQuantity\r\n        } else if (pk.quantity < 0) {\r\n            pk.quantity = 1\r\n            pk.product.cartQuantity = 1\r\n        }\r\n\r\n        pk.product.cartQuantity = pk.quantity\r\n        let amount = this.getTotalAmount(pk.product.discountedPrice, pk.quantity)\r\n        this.totalKartAmount += amount\r\n        pk.product.totalAmount = amount\r\n    }\r\n\r\n    getTotalAmount(discountedPrice: number, quantity: number): number {\r\n        let finalAmount = 0;\r\n\r\n        finalAmount = Math.round((discountedPrice * quantity) * 100) / 100;\r\n    \r\n        return finalAmount;\r\n    }\r\n\r\n    getKartProducts(): ProductKart[] {\r\n        if(this.kartProducts == null)\r\n            this.kartProducts = []\r\n\r\n        return this.kartProducts.slice();\r\n    }\r\n\r\n    getTotalKartAmount() {\r\n        console.log('Total kart Amount --> ', this.totalKartAmount)\r\n        return Math.round(this.totalKartAmount * 100) / 100;\r\n    }\r\n\r\n    addToKart(productId: string, cartQty: number, type: string) {\r\n        let localProdId = +productId;\r\n\r\n        this.http.post(this.KART_API + 'add-to-cart/'+ localProdId + '/' + cartQty, {}).subscribe(\r\n            (localKartProducts: ProductKart[]) => {\r\n                this.setPreViewForKartProducts(localKartProducts)\r\n                this.pushAddNotification('new')\r\n            },\r\n            error => {\r\n                this.kartHandleError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    pushAddNotification(type: string) {\r\n        let msg = ''\r\n\r\n        if(type === 'new')\r\n            msg = 'Item Added to the Cart Successfully'\r\n        else if(type === 'old')\r\n            msg = 'Qunatity increased on item Successfully'\r\n\r\n        if(msg !== '')\r\n            this.notifService.pushNotification(this.notifService.NOTIF_SUCCESS, msg)\r\n    }\r\n\r\n    deleteKartItems(productId: string, quantity: number) {\r\n        let localApi = ''\r\n\r\n        if(productId == null && quantity == 0)\r\n            localApi = 'empty-cart/'\r\n        else if(productId != null && quantity == 0)\r\n            localApi = 'delete-cart-item/' + productId\r\n        else if(productId != null && quantity > 0)\r\n            localApi = 'decrease-cart-item/' + productId + \"/\" + quantity\r\n\r\n        this.http.delete(this.KART_API + localApi).subscribe (\r\n            (localKartProducts: ProductKart[]) => {\r\n                this.setPreViewForKartProducts(localKartProducts)\r\n                this.pushDeletNotification(localApi);\r\n            },\r\n            error => {\r\n                this.kartHandleError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    pushDeletNotification(localApi: string) {\r\n        let msg = ''\r\n        if(localApi.startsWith('empty-cart'))\r\n            msg = 'Successfully removed all items from cart...!!'\r\n        else if(localApi.startsWith('delete-cart-item'))\r\n            msg = 'Successfully removed item from cart...!!'\r\n        else if(localApi.startsWith('decrease-cart-item'))\r\n            msg = 'Successfully decreased quantity of cart item...!!'\r\n\r\n        if(msg !== '')\r\n            this.notifService.pushNotification(this.notifService.NOTIF_WARNING, msg)\r\n    }\r\n\r\n    updateKartProducts(kartProducts: ProductKart[]) {\r\n        return this.http.put(this.KART_API + 'updateCart', kartProducts)\r\n    }\r\n\r\n    kartHandleError(error) {\r\n        this.kartProducts = []\r\n        this.kartCountLoadedObserver.next(this.kartCount)\r\n        this.errorService.logError('Error while loading all cart items ', error)\r\n    }\r\n\r\n    logoutHandler() {\r\n        this.kartProducts = []\r\n        this.kartCount = 0\r\n        this.totalKartAmount = 0\r\n        this.kartCountLoadedObserver.next(0)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { WishList } from 'src/app/Utilities/models/products/orders/wish-list.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorService } from '../../error/error-handler.service';\r\nimport { Subject } from 'rxjs';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { ProductService } from '../product.service';\r\nimport { ProductUtilService } from '../product-util.service';\r\nimport { NotificationService } from '../../notfications/notification.service';\r\n\r\n@Injectable()\r\nexport class WishListService {\r\n\r\n    WISHLIST_API = 'wishlist/'\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private productUtilService: ProductUtilService,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService\r\n    ){}\r\n\r\n    wishList: WishList;\r\n    wishListLoaded = false\r\n    wishListLoadedObservable = new Subject<boolean>()\r\n\r\n    fetchUserWishList() {\r\n        this.http.get(this.WISHLIST_API + 'getByLoggedUser').subscribe(\r\n            (localWishList: WishList) => {\r\n                this.successResponse(localWishList, false, '')\r\n            },\r\n            error => {\r\n                this.errorResponse(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    getWishList() {\r\n        return this.wishList\r\n    }\r\n\r\n    updateServerWishList(product: Product) {\r\n        if(!product.isWishListed) {\r\n            this.http.post(this.WISHLIST_API + 'postWishListItem/' + product.productID, '').subscribe(\r\n                (localWishList: WishList) => {\r\n                    this.successResponse(localWishList, true, 'Item successfully added to wishlist')\r\n                },\r\n                error => {\r\n                    this.errorResponse(error)\r\n                }\r\n            )\r\n        } else {\r\n            this.notifService.pushNotification(this.notifService.NOTIF_INFO, 'Item already in wishlist')\r\n        }\r\n\r\n    }\r\n\r\n    isProductWishListed(product: Product): boolean {\r\n        if(this.wishList != null && this.wishList.wishListProducts.length > 0) {\r\n            for(let i = 0; i < this.wishList.wishListProducts.length; i++) {\r\n                if(this.wishList.wishListProducts[i].productID === product.productID) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deleteProductFromWishList(productId: number) {\r\n      this.http.delete(this.WISHLIST_API + 'deleteWishListItem/' + productId).subscribe(\r\n        (localWishList: WishList) => {\r\n            this.successResponse(localWishList, true, 'Item successfully deleted from wishlist')\r\n        },\r\n        error => {\r\n            this.errorResponse(error)\r\n        }\r\n      )\r\n    }\r\n\r\n    deleteAllItems() {\r\n      this.http.delete(this.WISHLIST_API + 'deleteWishList').subscribe(\r\n          (wishListDeleted: boolean) => {\r\n              this.wishListLoaded = false\r\n              this.wishListLoadedObservable.next(false)\r\n              this.notifService.pushNotification(this.notifService.NOTIF_WARNING, 'Wishlist removed !!!')\r\n          },\r\n          error => {\r\n              this.errorResponse(error)\r\n          }\r\n      )\r\n    }\r\n    \r\n    errorResponse(error) {\r\n        this.wishListLoaded = false\r\n        this.wishListLoadedObservable.next(this.wishListLoaded)\r\n        this.errorService.logError('Error while loading wishlist ', error)\r\n    }\r\n\r\n    successResponse(localWishList: WishList, check: boolean, message: string) {\r\n        if(localWishList !== null && localWishList.wishListProducts !== null && localWishList.wishListProducts.length > 0 ) {\r\n            this.wishList = localWishList\r\n            console.log(\"WishList items ---> \", localWishList);\r\n            \r\n            this.wishList.wishListProducts.forEach(\r\n                p => { \r\n                    this.productUtilService.setPreViewValues(p)\r\n                    p.isWishListed = true\r\n                }\r\n            )\r\n\r\n            if(check)\r\n                this.notifService.pushNotification(this.notifService.NOTIF_SUCCESS, message)\r\n            this.wishListLoaded = true\r\n            this.wishListLoadedObservable.next(this.wishListLoaded)\r\n        } else {\r\n            if(check)\r\n                this.notifService.pushNotification(this.notifService.NOTIF_WARNING, 'Operation failed on wishlist')\r\n            this.wishListLoaded = false\r\n            this.wishListLoadedObservable.next(this.wishListLoaded)\r\n        }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProductFilter } from '../../models/products/filter-sort-model/product-filter.model';\r\nimport { ProductSort } from '../../models/products/filter-sort-model/product-sort.model';\r\nimport { GlobalProductDetails } from '../../models/products/filter-sort-model/global-product-details.model';\r\nimport { Product } from '../../models/products/product.model';\r\nimport { ProductService } from './product.service';\r\nimport { GlobalModelsService } from '../global/global-models.service';\r\n\r\n@Injectable()\r\nexport class ProductSearchService {\r\n    \r\n    constructor(\r\n        private productService: ProductService\r\n    ){}\r\n\r\n    searchForCriteria(section: string, categoryType: string, catergorySubType: string) {\r\n        \r\n        let globalProductDetails = this.prepareGlobalProductDetails(\r\n            section, \r\n            categoryType, \r\n            catergorySubType, \r\n            'new listed'\r\n        );\r\n\r\n        this.productService.fetchProductsBasedOnFilter(globalProductDetails);\r\n    }\r\n    \r\n    searchForKeyword(query: string) {\r\n        this.productService.fetchProductsBasedOnKeyword(query);\r\n    }\r\n\r\n    sortProducts(allProducts: Product[], sortCriteria: string): Product[] {\r\n        return allProducts.sort(\r\n            (product1: Product, product2: Product) => {\r\n                if(sortCriteria === 'Newly Listed')\r\n                    return (product1.updateDate > product2.updateDate) ? -1 : 1;\r\n                else if(sortCriteria === 'Price - High to Low')\r\n                    return (product1.price > product2.price) ? -1 : 1;\r\n                else if(sortCriteria === 'Price - Low to High')\r\n                    return (product1.price < product2.price) ? -1 : 1;\r\n                else if('Discount')\r\n                    return (product1.discount > product2.discount) ? -1 : 1;\r\n                \r\n                return 0;\r\n            }\r\n        )\r\n    }\r\n\r\n    prepareGlobalProductDetails(section: string, categoryName: string, subCategoryName: string, sortBy: string) {\r\n        var filters = {};\r\n\r\n        var priceFilter = [new ProductFilter(0, '', true, 0, 0, 10000)];\r\n        filters['price-filter'] = priceFilter;\r\n\r\n        if(categoryName != null && categoryName.length > 0) {\r\n            var categoryFilter = [new ProductFilter(0, categoryName, true, 0, 0, 0)];\r\n            filters['category-filter'] = categoryFilter;\r\n        }\r\n\r\n        if(subCategoryName != null && subCategoryName.length > 0) {\r\n            var subCategoryFilter = [new ProductFilter(0, subCategoryName, true, 0, 0, 0)];\r\n            filters['sub-category-filter'] = subCategoryFilter;\r\n        }\r\n\r\n        if(section != null && section.length > 0) {\r\n            var sectionFilter = [new ProductFilter(0, section, true, 0, 0, 0)];\r\n            filters['gender'] = sectionFilter;\r\n        }\r\n\r\n        var sort = [new ProductSort(0, sortBy.toLowerCase(), true, 0)]\r\n        var globalProduct = new GlobalProductDetails(filters, sort);\r\n\r\n        return globalProduct;\r\n    }\r\n\r\n    prepareGlobalProductDetailsForFilter(\r\n        selectedFilters: Map<string, string[]>,\r\n        selectedSort: string,\r\n        priceMin: string,\r\n        priceMax: string\r\n    ) {\r\n        var filters = {};\r\n\r\n        var priceFilter = [new ProductFilter(0, '', true, 0, +priceMin, +priceMax)];\r\n        filters['price-filter'] = priceFilter;\r\n\r\n        selectedFilters.forEach(\r\n            (filterValue: string[], filterKey: string) => {\r\n                switch (filterKey) {\r\n                    case 'Categories':\r\n                        var categoryFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                categoryFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['category-filter'] = categoryFilter;\r\n                        break;\r\n                    case 'Sub Categories':\r\n                        var subCategoryFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                subCategoryFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['sub-category-filter'] = subCategoryFilter;\r\n                        break;\r\n                    case 'Materials':\r\n                        var materialFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                materialFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['materials'] = materialFilter;\r\n                        break;\r\n                    case 'Section':\r\n                        var sectionFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                sectionFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['gender'] = sectionFilter;\r\n                        break;\r\n                    case 'Metal Purity':\r\n                        var purityFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                purityFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['materials_purity'] = purityFilter;\r\n                        break;\r\n                    case 'Offers':\r\n                        var offersFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                offersFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['discount'] = offersFilter;\r\n                        break;\r\n                    default:\r\n                        filters['category-filter'] = [];\r\n                        filters['Materials'] = [];\r\n                        filters['gender'] = [];\r\n                        filters['materials_purity'] = [];\r\n                        filters['offers'] = [];\r\n                        break;\r\n                }\r\n            }\r\n        )\r\n\r\n        var sort = []\r\n        switch (selectedSort) {\r\n            case 'Discount':\r\n                sort.push(new ProductSort(0, 'discount', true, 0));\r\n                break;\r\n            case 'Price - High to Low':\r\n                sort.push(new ProductSort(0, 'price high to low', true, 0));\r\n                break;\r\n            case 'Price - Low to High':\r\n                sort.push(new ProductSort(0, 'price low to high', true, 0));\r\n                break;\r\n            case 'Newly Listed':\r\n                sort.push(new ProductSort(0, 'new listed', true, 0));\r\n                break;\r\n            default:\r\n                sort.push(new ProductSort(0, 'new listed', true, 0));\r\n                break;\r\n        }\r\n        var globalProduct = new GlobalProductDetails(filters, sort);\r\n\r\n        return globalProduct;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Product } from '../../models/products/product.model';\r\nimport { GlobalModelsService } from '../global/global-models.service';\r\nimport { WishListService } from './orders/wish-list.service';\r\n\r\n@Injectable()\r\nexport class ProductUtilService {\r\n\r\n    constructor(\r\n        private globalModalsService: GlobalModelsService\r\n    ){}\r\n\r\n    setPreViewValues(p: Product) {\r\n        p.cartQuantity = p.inStockQuantity > 0 ? 1 : 0;\r\n        p.totalAmount = p.price;\r\n\r\n        let category = this.globalModalsService.getCategoryByID(p.categoryID)\r\n        p.categoryName = category !== null ? category.categoryName : ''\r\n\r\n        let subCategory = this.globalModalsService.getSubCategoryByID(p.subCategoryID)\r\n        p.subCategoryName = subCategory !== null ? subCategory.subCategoryName : ''\r\n\r\n        let section = this.globalModalsService.getSectionByID(p.sectionID)\r\n        p.sectionName = section !== null ? section.sectionName : ''\r\n\r\n        let collection = this.globalModalsService.getCollectionByID(p.collectionID)\r\n        p.collectionName = collection !== null ? collection.collectionName : ''\r\n\r\n        let materials = this.globalModalsService.getMaterialByID(p.materialID)\r\n        p.materialName = materials !== null ? materials.materialType : 'Change it!!'\r\n\r\n        let metalPurity = this.globalModalsService.getMetalPurityByID(p.metalPurityID)\r\n        p.metalPurityName = metalPurity !== null ? metalPurity.purity : 'Change it!!'\r\n\r\n        let discount = this.globalModalsService.getDiscountByID(p.discountID)\r\n        p.discount = discount !== null ? discount.percentage : 0\r\n\r\n        p.discountedPrice = this.getDiscountPrice(p.price, p.discount)\r\n\r\n    }\r\n\r\n    getDiscountPrice(price: number, discount: number): number {\r\n        let discountedPrice = price\r\n\r\n        if (discount !== 0) {\r\n            discountedPrice = price * (discount / 100)\r\n            discountedPrice = price - discountedPrice;\r\n        }\r\n        \r\n        discountedPrice = Math.round(discountedPrice * 100) / 100;\r\n\r\n        return discountedPrice;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ProductWishListService {\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { GlobalProductDetails } from 'src/app/Utilities/models/products/filter-sort-model/global-product-details.model';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { Product } from '../../models/products/product.model';\r\nimport { ProductUtilService } from './product-util.service';\r\nimport { WishListService } from './orders/wish-list.service';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    PRODUCTS_URL = 'products/';\r\n\r\n    constructor(\r\n        private http: HttpClient, \r\n        private errorService: ErrorService,\r\n        private productUtilService: ProductUtilService,\r\n        private wishListService: WishListService\r\n    ) {}\r\n\r\n    productsPage = 0;\r\n    productsForPage = 100;\r\n\r\n    allProducts: Product[] = [];\r\n    allProductsObserver = new Subject<boolean>();\r\n    sortCurrentProductsObserver = new Subject<string>();\r\n\r\n    fetchProductsBasedOnFilter(globalProductDetails: GlobalProductDetails) {\r\n        console.log('request', globalProductDetails)\r\n        this.http.post(this.PRODUCTS_URL + 'getAllProductsByFilters/' + this.productsPage + '/' + this.productsForPage, globalProductDetails).subscribe(\r\n            (response) => {\r\n                console.log('response', response)\r\n                const localProducts = response['results'];\r\n                this.onSuccess(localProducts)\r\n            },\r\n            error => {\r\n                this.onError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    fetchProductsBasedOnKeyword(query: string) {\r\n        console.log('request product query ---> ', query)\r\n        this.http.get(this.PRODUCTS_URL + 'searchProductByKeyWord/' + query).subscribe(\r\n            (localProducts) => {\r\n                console.log('query products ===> ', localProducts)\r\n                this.onSuccess(localProducts)\r\n            },\r\n            error => {\r\n                this.onError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    onSuccess(localProducts) {\r\n        console.log('localProducts', localProducts)\r\n        this.allProducts = localProducts;\r\n\r\n        if(this.allProducts == null)\r\n            this.allProducts = []\r\n        // Set product cart quantity as 1\r\n        this.allProducts.forEach(\r\n            p => this.setPreViewValues(p)\r\n        )\r\n        this.allProductsObserver.next(true);\r\n        console.log('final products ===> ', this.allProducts)\r\n    }\r\n\r\n    setPreViewValues(p: Product) {\r\n        this.productUtilService.setPreViewValues(p)\r\n        p.isWishListed = this.wishListService.isProductWishListed(p)\r\n    }\r\n    \r\n    getAllProducts() { \r\n\r\n        if(this.allProducts == null)\r\n            this.allProducts = []\r\n\r\n        return this.allProducts.slice();\r\n    }\r\n\r\n    onError(error) {\r\n        this.allProducts = [];\r\n        this.allProductsObserver.next(false);\r\n        this.errorService.logError('Error occured while pulling filtered products ', error)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UILoaderService {\r\n\r\n    // Increment here when you add a new loader screen for effective use\r\n    totalLoaders = 3;\r\n\r\n    apiLoadingScreen = 'API-LOADER-SCREEN'\r\n    routeLoadingScreen = 'ROUTE-LOADER-SCREEN'\r\n    loginLoaderScreen = 'LOGIN-LOADER-SCREEN'\r\n\r\n    /**\r\n     * [loadername, boolean]\r\n     * Pick loader name from above screen variables\r\n     * Send true or false to stop or start the loader screen\r\n     */\r\n    loaderObservable = new Subject<any[]>();\r\n\r\n    loaderErrorObservable = new Subject<boolean>();\r\n\r\n    constructor() {}\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { Customer } from '../../models/users/customer.model';\r\nimport { Address } from '../../models/users/address.model';\r\nimport { NotificationService } from '../notfications/notification.service';\r\n\r\n@Injectable()\r\nexport class AddressService {\r\n    \r\n    ADDR_URL = 'addresses/'\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private http: HttpClient,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService\r\n    ) { }\r\n\r\n    customerDetails: Customer;\r\n\r\n    userAddresses: Address[] = [];\r\n    addressLoadedObserver = new Subject<boolean>();\r\n\r\n\r\n    fetchUserAddress() {\r\n        if(this.userService.customerLoggedIn) {\r\n\r\n            this.customerDetails = this.userService.getCustomerDetails();\r\n            this.http.get(this.ADDR_URL + this.customerDetails.customerID).subscribe(\r\n                (addresses: Address[]) => {\r\n                    this.userAddresses = addresses;\r\n                    console.log('User Addresses --> ', this.userAddresses)\r\n                    this.addressLoadedObserver.next(true)\r\n                },\r\n                error => {\r\n                    this.addressLoadedObserver.next(false);\r\n                    this.errorService.logError('error occured loading customer addresses ', error);\r\n                }\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    getUserAddresses() {\r\n        let localAddr = JSON.parse(JSON.stringify(this.userAddresses));\r\n        return localAddr;\r\n    }\r\n\r\n    \r\n    saveAddress(address: Address) {\r\n        var msg = 'Address updated failed !!'\r\n        var type = this.notifService.NOTIF_WARNING\r\n        this.http.post(this.ADDR_URL, address).subscribe(\r\n            (address: Address) => {\r\n                if(address != null) {\r\n                    this.fetchUserAddress()\r\n                    msg = 'Address update success !!'\r\n                    type = this.notifService.NOTIF_SUCCESS\r\n                }\r\n\r\n                this.notifService.pushNotification(type, msg)\r\n            },\r\n            error => {\r\n                this.errorService.logError('error occured loading customer addresses ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { Customer } from '../../models/users/customer.model';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n  LOGIN_API = 'login';\r\n\r\n  constructor(private http: HttpClient, \r\n    private userService: UserService,\r\n    private errorService: ErrorService) { }\r\n\r\n  authTokenLogin(username: string, password: string) {\r\n\r\n    this.http.post(this.LOGIN_API, {'userName': username, 'password': password}, {responseType: 'text'}).subscribe(\r\n      (response: string) => {\r\n        console.log('user loggedin his token - ', response)\r\n        localStorage.setItem('token', response);\r\n        this.userService.fetchLogginCustomer();\r\n      },\r\n      error => {\r\n        this.errorService.logError('Please enter valid credentials', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  sessionBasedlogin(username: string, password: string) {\r\n    var formData = new FormData()\r\n    formData.append('password', password)\r\n    formData.append('username', username)\r\n\r\n    const headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'multipart/form-data');\r\n    headers.append('Accept', 'application/json');\r\n\r\n    this.http.post(this.LOGIN_API, formData, {headers: headers}).subscribe(\r\n      (customer: Customer) => {\r\n        console.log('user loggedin - ', customer)\r\n        this.userService.setLoggedInCustomer(customer, 'login')\r\n      },\r\n      error => {\r\n        this.errorService.logError('error occured while loggin in ', error);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { ProductKartService } from '../products/orders/product-kart.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { NotificationService } from '../notfications/notification.service';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class LogoutService {\r\n\r\n    constructor(        \r\n        private http: HttpClient,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService,\r\n        private userService: UserService,\r\n        private kartService: ProductKartService\r\n    ) {}\r\n    \r\n    logoutUser() {\r\n        this.http.get(this.userService.BASE_CUSTOMER_API + 'logout').subscribe(\r\n            (custId: number) => {\r\n                this.logoutHandler()\r\n            },\r\n            error => {\r\n                this.logoutHandler()\r\n                this.errorService.logError('Error while logout', error)\r\n            }\r\n        )\r\n    }\r\n\r\n    logoutHandler() {\r\n        let msg = 'You\\'re logged out successfully !!!'\r\n        console.log(msg)\r\n        localStorage.removeItem('token');\r\n        this.informAllServices()\r\n        this.notifService.pushNotification(this.notifService.NOTIF_INFO, msg)\r\n    }\r\n\r\n    informAllServices() {\r\n        this.kartService.logoutHandler()\r\n        this.userService.logoutHandler()\r\n    }\r\n\r\n} ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { NotificationService } from '../notfications/notification.service';\r\nimport { Customer } from '../../models/users/customer.model';\r\nimport { CustomerRegister } from '../../models/users/customer-register.model';\r\nimport { ProductKartService } from '../products/orders/product-kart.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { WishListService } from '../products/orders/wish-list.service';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    BASE_CUSTOMER_API = 'customers/';\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService,\r\n        private kartService: ProductKartService,\r\n        private wishListService: WishListService\r\n    ) {}\r\n\r\n    customer: Customer;\r\n\r\n    customerLoggedInObserver = new Subject<boolean>();\r\n    customerRegisteredObserver = new Subject<boolean>();\r\n\r\n    customerLoggedIn = false;\r\n\r\n    \r\n    registerUser(customerRegister: CustomerRegister) {\r\n        this.http.post(this.BASE_CUSTOMER_API + \"registerCustomer\", customerRegister).subscribe(\r\n            (customer: Customer) => {\r\n                console.log('Registered ===> ', this.customer)\r\n                this.customerRegisteredObserver.next(true)\r\n                this.notifService.pushNotification(\r\n                    this.notifService.NOTIF_SUCCESS, 'User create successfully'\r\n                )\r\n            },\r\n            error => {\r\n                this.customerRegisteredObserver.next(false)\r\n                this.errorService.logError('error occured loading customer ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n    fetchLogginCustomer() {\r\n        this.http.get(this.BASE_CUSTOMER_API + 'login').pipe(\r\n            finalize(\r\n               () => {\r\n                   console.log('I\\'ll be fired always')\r\n                    this.kartService.fetchUserKart();\r\n               }\r\n            )\r\n        ).subscribe(\r\n            (localCustomer: Customer) => {\r\n                console.log('customer Object received - ', localCustomer)\r\n                this.setLoggedInCustomer(localCustomer, 'login')\r\n            },\r\n            error => {\r\n                console.log('error occured loading customer ', error)\r\n                this.errorService.logError('error occured loading customer ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n    checkCustomerLogin() {\r\n        console.log(\"checking if customer already logged in\");\r\n\r\n        this.http.get(this.BASE_CUSTOMER_API + 'login/reload')\r\n        .pipe(\r\n            finalize(\r\n               () => {\r\n                   console.log('I\\'ll be fired always')\r\n                    this.kartService.fetchUserKart();\r\n               }\r\n            )\r\n        )\r\n        .subscribe(\r\n            (localCustomer: Customer) => {\r\n                console.log('customer Object received - ', localCustomer)\r\n                this.setLoggedInCustomer(localCustomer, 'reload')\r\n            },\r\n            error => {\r\n                console.log('error occured loading customer ', error)\r\n                // this.errorService.logError('error occured loading customer ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n    setLoggedInCustomer(localCustomer: Customer, type: string) {\r\n        this.customer = localCustomer;\r\n        this.customerLoggedIn = true;\r\n        this.customerLoggedInObserver.next(this.customerLoggedIn);\r\n        let userName = this.customer.customerLastName + ' ' + this.customer.customerFirstName\r\n        this.pushLoginNotification(userName, type)\r\n        this.wishListService.fetchUserWishList();\r\n    }\r\n\r\n    pushLoginNotification(user: string, type: string) {\r\n        let msg = ''\r\n        let notif = ''\r\n        if(user !== null && type === 'login') {\r\n            msg = 'Welcome ' + user + ', you\\'re logged in !!!'\r\n            notif = this.notifService.NOTIF_SUCCESS\r\n        }\r\n        else if (user !== null && type === 'reload') {\r\n            msg = 'Welcome back ' + user + ' !!!'\r\n            notif = this.notifService.NOTIF_INFO\r\n        }\r\n        else {\r\n            msg = 'Welcome User !!!'\r\n        }\r\n        \r\n        this.notifService.pushNotification(notif, msg)\r\n    }\r\n\r\n    getCustomerDetails() : Customer {\r\n        let localCust = JSON.parse(JSON.stringify(this.customer));\r\n        return localCust;\r\n    }\r\n\r\n    changeUserDetails(customer: Customer) {\r\n        this.http.put(this.BASE_CUSTOMER_API + 'updateCustomer', customer).subscribe(\r\n            (localCustomer: Customer) => {\r\n                this.customer = localCustomer\r\n                this.notifService.pushNotification(\r\n                    this.notifService.NOTIF_SUCCESS, 'User details updated successfully'\r\n                )\r\n                this.customerLoggedInObserver.next(true)\r\n            },\r\n            error => {\r\n                this.errorService.logError('error occured updating customer ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n    changeUserPassword(customerID: number, oldPassword: string, newPassword: string) {\r\n        let passModel = {customerID: customerID, oldPassword: oldPassword, newPassword: newPassword, status: ''}\r\n        console.log('Password update request ===> ', passModel)\r\n\r\n        this.http.put(this.BASE_CUSTOMER_API + 'updateUserPersonal', passModel).subscribe(\r\n            (response) => {\r\n                this.pushPasswordNotification(response['status'])\r\n            },\r\n            error => {\r\n                this.errorService.logError('error occured updating password ', error);\r\n            }\r\n        )\r\n    }\r\n    \r\n    pushPasswordNotification(message: string) {\r\n        let type = ''\r\n        if(message.toLowerCase().includes('failed') || message.toLowerCase().includes('incorrect'))\r\n            type = this.notifService.NOTIF_WARNING\r\n        else\r\n            type = this.notifService.NOTIF_SUCCESS\r\n        \r\n        this.notifService.pushNotification(type, message)\r\n    }\r\n\r\n    logoutHandler() {\r\n        this.customerLoggedIn = false;\r\n        this.customerLoggedInObserver.next(false)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ValidationService {\r\n\r\n    TEXT_REGEX = /^[a-z\\sA-Z]+$/\r\n    USER_REGEX = /^[a-zA-Z0-9.!#$%&;’*+/=?^_`{|}~-]+$/\r\n    EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&;’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n    PASS_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\r\n    NUM_REGEX = /^[0-9]+$/\r\n    PHN_REGEX = /^[0-9]{10}$/\r\n    ADDR_REGEX = /^[a-zA-Z0-9\\s.:-]+$/\r\n\r\n    validateText(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.TEXT_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validateUserName(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n        return false\r\n    \r\n        var matches = value.trim().match(this.USER_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validateEmail(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.EMAIL_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validateNumber(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.NUM_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validatePhone(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.PHN_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validatePassword(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.PASS_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validateAddress(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        var matches = value.trim().match(this.ADDR_REGEX)\r\n        console.log('Regex details ---> ', value, matches)\r\n\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../Utilities/services/users/user.service';\r\nimport { Customer } from '../Utilities/models/users/customer.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account-block',\r\n  templateUrl: './account-block.component.html',\r\n  styleUrls: ['./account-block.component.css']\r\n})\r\nexport class AccountBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  customerLoggedIn: boolean = false;\r\n  customer: Customer\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.customer == null) {\r\n      this.customer = new Customer(0, '', '', '', '', '')\r\n    }\r\n\r\n    if(this.userService.customerLoggedIn) {\r\n      this.customer = this.userService.getCustomerDetails()\r\n      this.customerLoggedIn = true;\r\n    }\r\n    \r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (userLoggedIn) => {\r\n        if(userLoggedIn) {\r\n          this.customer = this.userService.getCustomerDetails()\r\n        } else {\r\n          this.router.navigate(['/', 'home'])\r\n        }\r\n        this.customerLoggedIn = userLoggedIn\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"container untouchable\">\r\n    <div class=\"account-container\">\r\n        <div class=\"row justify-content-md-center\">\r\n            <div class=\"col-md-3 sticky-user-det animate wow rollIn\">\r\n                <div class=\"user-nav\">\r\n                    <div class=\"user-det\">\r\n                        <div class=\"user-img\">\r\n                            <span>S</span>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"user-info\">\r\n                            <h4 class=\"name-info\">{{customer.customerLastName}} {{customer.customerFirstName}}</h4>\r\n                            <span class=\"email-info\">{{customer.emailAddress}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"user-nav-links\">\r\n                        <div class=\"nav-item\" mdbWavesEffect>\r\n                            <span>My Orders</span>\r\n                        </div>\r\n                        <div class=\"nav-item\" [routerLink]=\"['edit', 'address']\" mdbWavesEffect>\r\n                            <span>Change Address</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-7 dyn-user-det\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, Renderer2 } from '@angular/core';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\nimport { CollapseComponent } from 'angular-bootstrap-md';\r\nimport { AddressService } from 'src/app/Utilities/services/users/address.service';\r\nimport { Address } from 'src/app/Utilities/models/users/address.model';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Customer } from 'src/app/Utilities/models/users/customer.model';\r\n\r\n@Component({\r\n  selector: 'app-edit-address',\r\n  templateUrl: './edit-address.component.html',\r\n  styleUrls: ['./edit-address.component.css']\r\n})\r\nexport class EditAddressComponent implements OnInit {\r\n\r\n  @ViewChild('addressForm') addressFrom: CollapseComponent;\r\n\r\n  fieldMax = 255\r\n  fieldMin = 5\r\n\r\n  showingCollapse = -1;\r\n  userViewAddresses: Address[] = [];\r\n  userEditAddresses: Address[] = [];\r\n  addressLoaded = false;\r\n\r\n  editAddress: Address;\r\n  customerLoggedIn: boolean = false;\r\n  customerID: number = 0\r\n\r\n  errorMsg = ''\r\n  errorField = ''\r\n\r\n  constructor(\r\n    private validationService: ValidationService,\r\n    private addressService: AddressService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.userService.customerLoggedIn) {\r\n      this.customerLoggedIn = true\r\n      this.customerID = this.userService.getCustomerDetails().customerID\r\n      this.editAddress = new Address(0 , this.customerID, ' ', ' ', ' ', ' ', ' ', ' ', false, false, ' ');\r\n    }\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (userLoggedIn) => {\r\n        if(userLoggedIn) {\r\n          this.addressService.fetchUserAddress();\r\n          this.customerID = this.userService.getCustomerDetails().customerID\r\n          this.editAddress = new Address(0 , this.customerID, ' ', ' ', ' ', ' ', ' ', ' ', false, false, ' ');\r\n        }\r\n        this.customerLoggedIn = userLoggedIn\r\n      }\r\n    )\r\n\r\n    this.addressService.addressLoadedObserver.subscribe(\r\n      (addressLoaded: boolean) => {\r\n        if(addressLoaded)\r\n          this.userViewAddresses = this.addressService.getUserAddresses()\r\n          this.userEditAddresses = this.addressService.getUserAddresses()\r\n        \r\n        if(this.userViewAddresses == null || this.userEditAddresses == null) {\r\n          this.userViewAddresses = []\r\n          this.userEditAddresses = []\r\n        }\r\n        this.addressLoaded = addressLoaded;\r\n      }\r\n    )\r\n\r\n    this.addressService.fetchUserAddress();\r\n\r\n  }\r\n\r\n  setAndEditAddress(id: number) {\r\n    console.log('Address edit --> ', id, this.showingCollapse)\r\n    this.errorField = ''\r\n    this.errorMsg = ''\r\n\r\n    if(id == this.showingCollapse) {\r\n      this.addressFrom.hide()\r\n      this.showingCollapse = -1\r\n    } else if(id == 0) {\r\n      this.editAddress = new Address(0 , this.customerID, ' ', ' ', ' ', ' ', ' ', ' ', false, false, ' ');\r\n      this.addressFrom.show()\r\n      this.showingCollapse = id\r\n    } else if(this.showingCollapse == -1) {\r\n      this.editAddress = this.userEditAddresses[id-1];\r\n      this.addressFrom.show()\r\n      this.showingCollapse = id\r\n    } else {\r\n      this.editAddress = this.userEditAddresses[id-1];\r\n      this.addressFrom.show()\r\n      this.showingCollapse = id\r\n    }\r\n  }\r\n\r\n  validateAndUpdate() {\r\n    let check = false\r\n\r\n    check = this.validateAddressFields()\r\n    console.log('Address validation ---> ', check, this.editAddress)\r\n\r\n    if(check)\r\n      this.addressService.saveAddress(this.editAddress);\r\n\r\n  }\r\n\r\n  validateAddressFields() {\r\n    this.errorMsg = 'Please follow address policy'\r\n    if(!this.validationService.validateAddress(this.editAddress.apartmentNumber, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'APN'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.street, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'STR'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.city, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'CTY'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.state, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'STA'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.country, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'CTR'\r\n      return false;\r\n    }\r\n    \r\n    if(!this.validationService.validateAddress(this.editAddress.zipCode, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'ZIP'\r\n      return false;\r\n    }\r\n\r\n    this.errorField = ''\r\n    this.errorMsg = ''\r\n    return true;\r\n  }\r\n\r\n}\r\n","<div class=\"addr-cont untouchable animate wow fadeInRightBig\">\r\n    <div class=\"bac-ret\" [routerLink]=\"['/', 'ui-account', 'edit']\">\r\n        <mdb-icon fas icon=\"angle-double-left\" class=\"back-arrows\"></mdb-icon>\r\n        <span class=\"back-span\">\r\n             Back\r\n        </span>\r\n    </div>\r\n    <div class=\"addr-blk\">\r\n        <div class=\"addr-hdr\" *ngIf=\"customerLoggedIn\">\r\n            <span class=\"addr-lbl\">Edit Address:</span>\r\n            <button class=\"btn j-btn j-btn-allow new-addr-btn\" (click)=\"setAndEditAddress(0)\" mdbWavesEffect>Add New Address</button>\r\n        </div>\r\n        <div class=\"old-addr-blk\">\r\n            <div class=\"addr-det-old\">\r\n                <div class=\"addr-list-item animate wow slideInUp\" data-wow-delay=\".8s\" [class.addr-list-item-edit]=\"this.showingCollapse == (i+1)\" (click)=\"setAndEditAddress(i+1)\" *ngFor=\"let address of userViewAddresses; let i=index\" mdbWavesEffect>\r\n                    <span class=\"addr-list-head\">{{address.apartmentNumber}}, {{address.street}}</span>\r\n                    <mdb-icon class=\"addr-edit-icon addr-edit-open\" *ngIf=\"showingCollapse != (i+1)\" fas icon=\"plus\"></mdb-icon>\r\n                    <mdb-icon class=\"addr-edit-icon addr-edit-close\" *ngIf=\"showingCollapse == (i+1)\" fas icon=\"minus\"></mdb-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"addr-body\" mdbCollapse #addressForm=\"bs-collapse\" *ngIf=\"customerLoggedIn\">\r\n            <div class=\"row\">\r\n                <form (submit)=\"validateAndUpdate()\">\r\n                    <div class=\"col-md-12 addr-row error-msg-row\" *ngIf=\"errorMsg\">\r\n                        <span class=\"error-msg \">{{errorMsg}}</span>\r\n                    </div>\r\n                    <div class=\" col-md-12 addr-row \">\r\n                        <span class=\"comma-wrng \">*Don't use comma(,) in the address fields</span>\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">Apartment</label>\r\n                        <input type=\"text\" name=\"apartmentNumber\" [(ngModel)]=\"editAddress.apartmentNumber \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'APN'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">Street</label>\r\n                        <input type=\"text\" name=\"street\" [(ngModel)]=\"editAddress.street \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'STR'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">City</label>\r\n                        <input type=\"text\" name=\"city\" [(ngModel)]=\"editAddress.city \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'CTY'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">State</label>\r\n                        <input type=\"text\" name=\"state\" [(ngModel)]=\"editAddress.state \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'STA'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">Country</label>\r\n                        <input type=\"text\" name=\"country\" [(ngModel)]=\"editAddress.country \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'CTR'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">Zip Code / Postal Code</label>\r\n                        <input type=\"text\" name=\"zipCode\" [(ngModel)]=\"editAddress.zipCode \" maxlength=\"6 \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'ZIP'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-3 addr-row add-check-box-row \">\r\n                        <label class=\"addr-check-box-lbl \">Default Shipping</label>\r\n                        <input type=\"checkbox\" [(ngModel)]=\"editAddress.defaultShipping \" name=\"defaultShipping \" class=\"form-control addr-check-box \" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-3 addr-row add-check-box-row \">\r\n                        <label class=\"addr-check-box-lbl \">Default Billing</label>\r\n                        <input type=\"checkbox\" [(ngModel)]=\"editAddress.defaultBilling \" name=\"defaultBilling \" class=\"form-control addr-check-box \" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row text-right update-addr-blk \">\r\n                        <button type=\"submit\" class=\"btn j-btn j-btn-allow update-addr-btn \" mdbWavesEffect>Change Address</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"addr-policy\">\r\n                <div>\r\n                    <span class=\"policy-head\">Password Policy</span>\r\n                </div>\r\n                <div class=\"addr-policy-body\">\r\n                    <ul class=\"policy-ul\">\r\n                        <li>Address fields should contain only <pre>. : -</pre> as special characters</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Customer } from 'src/app/Utilities/models/users/customer.model';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\nimport { UILoaderService } from 'src/app/Utilities/services/ui-loader/ui-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-personal-details',\r\n  templateUrl: './edit-personal-details.component.html',\r\n  styleUrls: ['./edit-personal-details.component.css']\r\n})\r\nexport class EditPersonalDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private validationService: ValidationService,\r\n    private uiLoaderService: UILoaderService\r\n  ) { }\r\n\r\n  fieldMax = 255\r\n  fieldMin = 5\r\n\r\n  bkpCustomer: Customer;\r\n\r\n  password: {oldPassword: string, newPassword: string, rePassword: string}\r\n\r\n  customerDetails: Customer;\r\n  userLoggedIn = false\r\n\r\n  customerDetailsError = ''\r\n  customerErrorField = ''\r\n  passwordError = ''\r\n  passwordErrorField = ''\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.password = {oldPassword: '', newPassword: '', rePassword: ''}\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localUserStatus) => {\r\n        if(localUserStatus) {\r\n          // UI loader stopped for customer details update\r\n          this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, false])\r\n\r\n          this.bkpCustomer = this.userService.getCustomerDetails()\r\n          this.customerDetails = this.userService.getCustomerDetails()\r\n          this.userLoggedIn = localUserStatus\r\n        }\r\n      }\r\n    )\r\n\r\n    this.userLoggedIn = this.userService.customerLoggedIn\r\n\r\n    if(this.userLoggedIn)\r\n      this.customerDetails = this.userService.getCustomerDetails()\r\n  }\r\n\r\n  validateAndUpdateDetails() {\r\n\r\n    if(!this.checkValidity(this.customerDetails.customerFirstName, 'firstname')) {\r\n        this.customerDetailsError = 'Please provide only alphabet character in firstname field'\r\n        this.customerErrorField = 'CFN'\r\n        return false\r\n    }\r\n\r\n    if(!this.checkValidity(this.customerDetails.customerLastName, 'lastname')) {\r\n        this.customerDetailsError = 'Please provide only alphabet character in lastname field'\r\n        this.customerErrorField = 'CLN'\r\n        return false\r\n    }\r\n\r\n    if(!this.checkValidity(this.customerDetails.emailAddress, 'email')) {\r\n        this.customerDetailsError = 'Please provide valid email id'\r\n        this.customerErrorField = 'EML'\r\n        return false\r\n    }\r\n\r\n    if(!this.checkValidity(this.customerDetails.phone, 'phone')) {\r\n        this.customerDetailsError = 'Please provide only 10 digit phone number'\r\n        this.customerErrorField = 'PHN'\r\n        return false\r\n    }\r\n\r\n    // UI loader started for customer details update\r\n    this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true])\r\n    console.log('Request Customer ===> ', this.customerDetails)\r\n    this.userService.changeUserDetails(this.customerDetails)\r\n\r\n    this.customerDetailsError = ''\r\n    this.customerErrorField = ''\r\n    return true;\r\n  }\r\n\r\n  checkValidity(value: string, type: string) {\r\n    let check = false;\r\n    switch(type) {\r\n      case 'firstname':\r\n        check = this.validationService.validateText(value, this.fieldMax, this.fieldMin)\r\n        break\r\n      case 'lastname':\r\n        check =  this.validationService.validateText(value, this.fieldMax, this.fieldMin)\r\n        break\r\n      case 'email':\r\n        check = this.validationService.validateEmail(value, this.fieldMax, this.fieldMin)\r\n        break\r\n      case 'phone':\r\n        check = this.validationService.validatePhone(value, this.fieldMax, this.fieldMin)\r\n        break\r\n      default:\r\n        check = false;\r\n        break\r\n    }\r\n    return check;\r\n  }\r\n\r\n  checkPasswordChanged() {\r\n    if(this.password.newPassword === this.password.rePassword) {\r\n      if(this.validationService.validatePassword(this.password.oldPassword, 30, 8)) {\r\n        if(this.validationService.validatePassword(this.password.newPassword, 30, 0)) {\r\n          this.userService.changeUserPassword(this.customerDetails.customerID, this.password.oldPassword, this.password.newPassword)\r\n          this.password = {oldPassword: '', newPassword: '', rePassword: ''}\r\n          this.passwordError = ''\r\n          this.passwordErrorField = ''\r\n          return true;\r\n        }\r\n        else {\r\n          this.passwordError = 'New password should match below policy'\r\n          this.passwordErrorField = 'NPS'\r\n          return false;\r\n        }\r\n      } else {\r\n        this.passwordError = 'Old password should match below policy'\r\n        this.passwordErrorField = 'OPS'\r\n        return false;\r\n      }\r\n    } else {\r\n      this.passwordError = 'New Password doesn\\'t match'\r\n      this.passwordErrorField = 'RPS'\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"user-edit-det untouchable animate wow fadeInRightBig\" *ngIf=\"userLoggedIn\">\r\n    <div class=\"user-main-info\">\r\n        <span class=\"info-head\">Personal Details:</span>\r\n        <br>\r\n        <mdb-icon class=\"error-icon\" *ngIf=\"customerDetailsError\" fas icon=\"exclamation-triangle\"></mdb-icon>\r\n        <span class=\"error-msg\" *ngIf=\"customerDetailsError\">{{customerDetailsError}}</span>\r\n        <div class=\"row edit-det-row\">\r\n            <form (submit)=\"validateAndUpdateDetails()\">\r\n                <div class=\"col-md-6 user-first-name det-row\">\r\n                    <label>First Name:</label>\r\n                    <input type=\"text\" name=\"customerFirstName\" [(ngModel)]=\"customerDetails.customerFirstName\" class=\"form-control form-control user-input\" [class.user-input-error]=\"customerErrorField === 'CFN'\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-last-name det-row\">\r\n                    <label>Last Name:</label>\r\n                    <input type=\"text\" name=\"customerLastName\" [(ngModel)]=\"customerDetails.customerLastName\" class=\"form-control user-input\" [class.user-input-error]=\"customerErrorField === 'CLN'\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-email det-row\">\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" name=\"emailAddress\" [(ngModel)]=\"customerDetails.emailAddress\" class=\"form-control user-input\" [class.user-input-error]=\"customerErrorField === 'EML'\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-phn det-row\">\r\n                    <label>Phone:</label>\r\n                    <input type=\"tel\" name=\"phone\" [(ngModel)]=\"customerDetails.phone\" class=\"form-control user-input\" maxlength=\"10\" [class.user-input-error]=\"customerErrorField === 'PHN'\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-12 text-right update-blk\">\r\n                    <button type=\"submit\" class=\"btn j-btn j-btn-allow\" mdbWavesEffect>Update</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div class=\"user-per-info\">\r\n        <span class=\"info-head\">Change Password:</span>\r\n        <br>\r\n        <mdb-icon class=\"error-icon\" *ngIf=\"passwordError\" fas icon=\"exclamation-triangle\"></mdb-icon>\r\n        <span class=\"error-msg\" *ngIf=\"passwordError\">{{passwordError}}</span>\r\n        <div class=\"row edit-det-row\">\r\n            <form (submit)=\"checkPasswordChanged()\">\r\n                <div class=\"col-md-6 user-phn det-row\">\r\n                    <label>Old Password:</label>\r\n                    <input type=\"password\" name=\"oldPassword\" [(ngModel)]=\"password.oldPassword\" class=\"form-control user-input pass-input\" [class.user-input-error]=\"passwordErrorField === 'OPS'\" minlength=\"8\" maxlength=\"25\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-pass det-row\">\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" name=\"newPassword\" [(ngModel)]=\"password.newPassword\" class=\"form-control user-input pass-input\" [class.user-input-error]=\"passwordErrorField === 'NPS'\" minlength=\"8\" maxlength=\"25\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-re-pass det-row\">\r\n                    <label>Re-Enter Password:</label>\r\n                    <input type=\"password\" name=\"rePassword\" [(ngModel)]=\"password.rePassword\" class=\"form-control user-input pass-input\" [class.user-input-error]=\"passwordErrorField === 'RPS'\" minlength=\"8\" maxlength=\"25\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 det-row text-right pass-blk\">\r\n                    <button type=\"submit\" class=\"btn j-btn j-btn-allow\" mdbWavesEffect>Change Password</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div class=\"pass-details\">\r\n        <div>\r\n            <span class=\"info-head\">Password Policy</span>\r\n        </div>\r\n        <div class=\"pass-body\">\r\n            <ul class=\"pass-ul\">\r\n                <li> Your password must be between 8 and 25 characters. </li>\r\n                <li> Your password must contain at least one uppercase, or capital, letter (ex: A, B, etc.) </li>\r\n                <li> Your password must contain at least one lowercase letter. </li>\r\n                <li> Your password must contain at least one number digit (ex: 0, 1, 2, 3, etc.) </li>\r\n                <li> Your password must contain at least one special character <pre>Example: !, @, #, $, %, ^, &, * </pre> mainly the special characters are located on the top row of the keyboard on the same line as the numbers 0 through 9. </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeBlocksComponent } from './home-blocks/home-blocks.component';\r\nimport { ProductBlocksComponent } from './product-blocks/product-blocks.component';\r\nimport { ItemsBlockComponent } from './product-blocks/items-block/items-block.component';\r\nimport { ProductKartComponent } from './product-kart/product-kart.component';\r\nimport { AccountBlockComponent } from './account-block/account-block.component';\r\nimport { EditPersonalDetailsComponent } from './account-block/edit-personal-details/edit-personal-details.component';\r\nimport { EditAddressComponent } from './account-block/edit-address/edit-address.component';\r\nimport { CheckOutComponent } from './check-out/check-out.component';\r\nimport { WishlistBlockComponent } from './wishlist-block/wishlist-block.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', pathMatch: 'full', redirectTo: 'home'\r\n  },\r\n  {\r\n    path: 'home', component: HomeBlocksComponent\r\n  },\r\n  {\r\n    path: 'ui-products', component: ProductBlocksComponent, children: [\r\n      {\r\n        path: 'search', component: ItemsBlockComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'ui-kart', component: ProductKartComponent\r\n  },\r\n  {\r\n    path: 'ui-account', component: AccountBlockComponent, children: [\r\n      {\r\n        path: 'edit/address', component: EditAddressComponent\r\n      },\r\n      {\r\n        path: 'edit', component: EditPersonalDetailsComponent\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'ui-checkout', component: CheckOutComponent\r\n  },\r\n  {\r\n    path: 'ui-wishlist', component: WishlistBlockComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})], //, {useHash: true}\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, AfterViewInit, Renderer2 } from '@angular/core';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { UILoaderService } from './Utilities/services/ui-loader/ui-loader.service';\r\nimport { Router, RouterEvent, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { NotificationService } from './Utilities/services/notfications/notification.service';\r\nimport { LandingPageService } from './Utilities/services/landing-page/landing-page.service';\r\nimport { UserService } from './Utilities/services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  routeUILoaderType = 'three-strings';\r\n  apiUILoaderType = 'square-jelly-box';\r\n  loginUILoaderType = 'wandering-cubes'\r\n  uiLoaderColor = 'rgb(230, 200, 110)'\r\n\r\n  showNotification = [];\r\n  notificationType = '';\r\n  notificationMessage = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private landingPageService: LandingPageService,\r\n    private ngxService: NgxUiLoaderService,\r\n    public uiLoaderService: UILoaderService, \r\n    private notifService: NotificationService,\r\n    private renderer: Renderer2,\r\n    private userService: UserService\r\n  ) {\r\n    this.router.events.subscribe((e: RouterEvent) => {\r\n      window.scrollTo(0, 0)\r\n      this.navigationInterceptor(e);\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngxService.startLoader(this.uiLoaderService.routeLoadingScreen);\r\n\r\n    this.setTheObservables();\r\n  }\r\n\r\n\r\n  setTheObservables() {\r\n    \r\n    // Loads all Global Models\r\n    this.userService.checkCustomerLogin();\r\n    this.landingPageService.fetchAllInfo();\r\n\r\n    // Below Observable controls display and stopping of Loader UI\r\n    this.uiLoaderService.loaderObservable.subscribe(\r\n      (loader: string[]) => {\r\n        console.log('Ui Loader status --> ', loader)\r\n        if (loader[1]) {\r\n          window.scrollTo(0, 0)\r\n          // To stop user scroll while UI loader is playing\r\n          this.renderer.setStyle(document.documentElement, 'overflow', 'hidden')\r\n          this.ngxService.startLoader(loader[0]);\r\n        } else {\r\n          this.ngxService.stopLoader(loader[0]);\r\n          // To stop user scroll while UI loader is playing\r\n          setTimeout(() => {\r\n            this.renderer.setStyle(document.documentElement, 'overflow', 'auto')\r\n          }, 1000);\r\n        }\r\n      }\r\n    )\r\n\r\n    // Below Observable stops all the Loader UI's\r\n    this.uiLoaderService.loaderErrorObservable.subscribe(\r\n      (disable) => {\r\n        this.ngxService.stopAllLoader(this.uiLoaderService.routeLoadingScreen)\r\n        this.ngxService.stopAllLoader(this.uiLoaderService.apiLoadingScreen)\r\n        this.ngxService.stopAllLoader(this.uiLoaderService.loginLoaderScreen)\r\n        // To stop user scroll while UI loader is playing\r\n        setTimeout(() => {\r\n          this.renderer.setStyle(document.documentElement, 'overflow', 'auto')\r\n        }, 1000);\r\n      }\r\n    )\r\n\r\n    //Below Observable generates notification\r\n    this.notifService.notificationObservable.subscribe(\r\n      (notifDetails: string[]) => {\r\n        this.notificationType = notifDetails[1]\r\n        this.notificationMessage = notifDetails[2]\r\n        this.showNotification.push(notifDetails);\r\n        console.log('Elements in notif list --> ', this.showNotification);\r\n\r\n        setTimeout(() => {\r\n          this.notifService.removeNotificationObservable.next(notifDetails[0]);\r\n        }, 9300);\r\n\r\n        setTimeout(() => {\r\n          this.showNotification.splice(0, 1);\r\n          console.log('removed last item --> ', this.showNotification)\r\n          this.arrangeNotificationItems();\r\n        }, 10000);\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  // Not using now...!!!\r\n  checkAnyLoaderRunning(loaderName: string) {\r\n    if (this.ngxService.hasRunningTask(true, this.ngxService.getLoader(loaderName).loaderId))\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  removeNotification(notifId: string) {\r\n    this.notifService.removeNotificationObservable.next(notifId);\r\n    setTimeout(() => {\r\n      const index = this.showNotification.findIndex(x => x[0] === notifId);\r\n      console.log('deleted notification element index --> ', index);\r\n      if (index > -1) {\r\n        console.log('deleted notification element --> ', this.showNotification.splice(index, 1));\r\n        console.log('notification list --> ', this.showNotification);\r\n        this.arrangeNotificationItems();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n  arrangeNotificationItems() {\r\n    var count  = 0;\r\n    this.showNotification.forEach(\r\n      el => {\r\n        el[0] = count++;\r\n      }\r\n    )\r\n    console.log('Element after rearranging ', this.showNotification)\r\n    this.notifService.decrementNotificationCount();\r\n\r\n    setTimeout(() => {\r\n      this.notifService.notificationReArrangeObservable.next(true);\r\n    }, 500);\r\n  }\r\n\r\n  // Shows and hides the loading spinner during RouterEvent changes\r\n  navigationInterceptor(event: RouterEvent): void {\r\n    if (event instanceof NavigationStart) {\r\n      if (!event.url.startsWith('/ui-products/'))\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.routeLoadingScreen, true])\r\n    }\r\n    if (event instanceof NavigationEnd) {\r\n      this.uiLoaderService.loaderObservable.next([this.uiLoaderService.routeLoadingScreen, false])\r\n    }\r\n\r\n    // Set loading state to false in both of the below events to hide the spinner in case a request fails\r\n    if (event instanceof NavigationCancel) {\r\n      this.uiLoaderService.loaderObservable.next([this.uiLoaderService.routeLoadingScreen, false])\r\n    }\r\n    if (event instanceof NavigationError) {\r\n      this.uiLoaderService.loaderObservable.next([this.uiLoaderService.routeLoadingScreen, false])\r\n    }\r\n  }\r\n}\r\n","<!-- Toolbar -->\r\n<app-headers></app-headers>\r\n\r\n<app-notification-block *ngFor=\"let item of showNotification\" (click)='removeNotification(item[0])' [notifId]=\"item[0]\" [notifType]=\"item[1]\" [notifMsg]=\"item[2]\"></app-notification-block>\r\n\r\n<div class=\"home-blocks untouchable\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n<ngx-ui-loader class=\"loadin-screen route-loading-screen\" [loaderId]='uiLoaderService.routeLoadingScreen' [fgsType]='routeUILoaderType' [fgsColor]='uiLoaderColor' [pbColor]='uiLoaderColor'></ngx-ui-loader>\r\n<ngx-ui-loader class=\"loadin-screen api-loading-screen\" [loaderId]='uiLoaderService.apiLoadingScreen' [fgsType]='apiUILoaderType' [fgsColor]='uiLoaderColor' [pbColor]='uiLoaderColor'></ngx-ui-loader>\r\n<ngx-ui-loader class=\"loadin-screen login-loader-screen\" [loaderId]='uiLoaderService.loginLoaderScreen' [fgsType]='loginUILoaderType' [fgsColor]='uiLoaderColor' [pbColor]='uiLoaderColor'></ngx-ui-loader>\r\n<!-- Footer -->\r\n<app-contact-block></app-contact-block>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { NgxUiLoaderModule } from 'ngx-ui-loader';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeadersComponent } from './headers/headers.component';\r\nimport { TopHeaderComponent } from './headers/top-header/top-header.component';\r\nimport { BottomHeaderComponent } from './headers/bottom-header/bottom-header.component';\r\nimport { HomeBlocksComponent } from './home-blocks/home-blocks.component';\r\nimport { CarouselBlockComponent } from './home-blocks/carousel-block/carousel-block.component';\r\nimport { PopularCollectionBlockComponent } from './home-blocks/popular-collection-block/popular-collection-block.component';\r\nimport { NewArrivalsBlockComponent } from './home-blocks/new-arrivals-block/new-arrivals-block.component';\r\nimport { BestSellingBlockComponent } from './home-blocks/best-selling-block/best-selling-block.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ProductBlocksComponent } from './product-blocks/product-blocks.component';\r\nimport { ContactBlockComponent } from './contact-block/contact-block.component';\r\nimport { SortFilterBlockComponent } from './product-blocks/sort-filter-block/sort-filter-block.component';\r\nimport { ItemsBlockComponent } from './product-blocks/items-block/items-block.component';\r\n\r\nimport { ProductService } from './Utilities/services/products/product.service';\r\nimport { ProductItemComponent } from './product-blocks/items-block/product-item/product-item.component';\r\nimport { LoginService } from './Utilities/services/users/login.service';\r\nimport { UserService } from './Utilities/services/users/user.service';\r\nimport { AuthHelpers } from './interceptors/auth-helpers.interceptor';\r\nimport { UILoaderService } from './Utilities/services/ui-loader/ui-loader.service';\r\nimport { ErrorService } from './Utilities/services/error/error-handler.service';\r\nimport { NotificationBlockComponent } from './notification-block/notification-block.component';\r\nimport { NotificationService } from './Utilities/services/notfications/notification.service';\r\nimport { ProductKartService } from './Utilities/services/products/orders/product-kart.service';\r\nimport { ProductKartComponent } from './product-kart/product-kart.component';\r\nimport { AccountBlockComponent } from './account-block/account-block.component';\r\nimport { EditPersonalDetailsComponent } from './account-block/edit-personal-details/edit-personal-details.component';\r\nimport { EditAddressComponent } from './account-block/edit-address/edit-address.component';\r\nimport { ValidationService } from './Utilities/services/validation/validation.service';\r\nimport { AddressService } from './Utilities/services/users/address.service';\r\nimport { LandingPageService } from './Utilities/services/landing-page/landing-page.service';\r\nimport { HeaderService } from './Utilities/services/landing-page/header.service';\r\nimport { GlobalModelsService } from './Utilities/services/global/global-models.service';\r\nimport { ProductWishListService } from './Utilities/services/products/product-wishlist.service';\r\nimport { CheckOutComponent } from './check-out/check-out.component';\r\nimport { StripeBlockComponent } from './check-out/stripe-block/stripe-block.component';\r\nimport { SummaryBlockComponent } from './check-out/summary-block/summary-block.component';\r\nimport { UserAddressBlockComponent } from './check-out/stripe-block/user-address-block/user-address-block.component';\r\nimport { GuestDetailsBlockComponent } from './check-out/stripe-block/guest-details-block/guest-details-block.component';\r\nimport { CheckOutService } from './Utilities/services/products/orders/check-out.service';\r\nimport { LogoutService } from './Utilities/services/users/logout.service';\r\nimport { ProductSearchService } from './Utilities/services/products/product-search.service';\r\nimport { WishlistBlockComponent } from './wishlist-block/wishlist-block.component';\r\nimport { WishListService } from './Utilities/services/products/orders/wish-list.service';\r\nimport { ProductUtilService } from './Utilities/services/products/product-util.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeadersComponent,\r\n    TopHeaderComponent,\r\n    BottomHeaderComponent,\r\n    HomeBlocksComponent,\r\n    CarouselBlockComponent,\r\n    PopularCollectionBlockComponent,\r\n    NewArrivalsBlockComponent,\r\n    BestSellingBlockComponent,\r\n    ContactBlockComponent,\r\n    ProductBlocksComponent,\r\n    SortFilterBlockComponent,\r\n    ItemsBlockComponent,\r\n    ProductItemComponent,\r\n    NotificationBlockComponent,\r\n    ProductKartComponent,\r\n    AccountBlockComponent,\r\n    EditPersonalDetailsComponent,\r\n    EditAddressComponent,\r\n    CheckOutComponent,\r\n    StripeBlockComponent,\r\n    SummaryBlockComponent,\r\n    UserAddressBlockComponent,\r\n    GuestDetailsBlockComponent,\r\n    WishlistBlockComponent\r\n  ],\r\n  imports: [\r\n    NgxUiLoaderModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MDBBootstrapModule.forRoot()\r\n  ],\r\n  providers: [\r\n    // {provide: HTTP_INTERCEPTORS, useClass: AuthHelpers, multi: true}, \r\n    LandingPageService,\r\n    GlobalModelsService,\r\n    HeaderService,\r\n    NotificationService,\r\n    ErrorService,\r\n    UILoaderService,\r\n    ValidationService,\r\n    LoginService, \r\n    UserService,\r\n    AddressService,\r\n    ProductService,\r\n    ProductUtilService,\r\n    ProductSearchService,\r\n    ProductKartService,\r\n    WishListService,\r\n    ProductWishListService,\r\n    CheckOutService,\r\n    LogoutService\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../Utilities/services/users/user.service';\r\nimport { CheckOutService } from '../Utilities/services/products/orders/check-out.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-check-out',\r\n  templateUrl: './check-out.component.html',\r\n  styleUrls: ['./check-out.component.css']\r\n})\r\nexport class CheckOutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private checkOutService: CheckOutService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  totalAmount = 0\r\n  stripePublicKey = ''\r\n  currency = ''\r\n  checkOutCompleted = false;\r\n\r\n  customerLoggedIn: boolean\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.customerLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (userLoggedIn: boolean) => {\r\n        this.customerLoggedIn = userLoggedIn\r\n\r\n        if(!userLoggedIn) {\r\n          this.router.navigate(['/', 'home'])\r\n        }\r\n\r\n      }\r\n    )\r\n\r\n    this.checkOutService.checkOutObservable.subscribe(\r\n      (checkOutDone) => {\r\n        if(checkOutDone) {\r\n          let checkOut = this.checkOutService.getCheckOutDetails()\r\n          this.totalAmount = checkOut.amount\r\n          this.stripePublicKey = checkOut.stripePublicKey\r\n          this.currency = checkOut.currency\r\n        }\r\n        this.checkOutCompleted = checkOutDone\r\n      }\r\n    )\r\n\r\n    this.checkOutService.performCheckout();\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid stripe-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 summary-block\">\r\n            <app-summary-block [totalCheckoutAmount]=\"totalAmount\"></app-summary-block>\r\n        </div>\r\n        <div class=\"col-md-7 stripe-block\">\r\n            <app-stripe-block *ngIf=\"checkOutCompleted\" [totalAmount]=\"totalAmount\" [currency]=\"currency\" [stripePublicKey]=\"stripePublicKey\"></app-stripe-block>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Guest } from 'src/app/Utilities/models/users/guest.model';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-guest-details-block',\r\n  templateUrl: './guest-details-block.component.html',\r\n  styleUrls: ['./guest-details-block.component.css']\r\n})\r\nexport class GuestDetailsBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private validationService: ValidationService\r\n  ) { }\r\n\r\n  @Output() guestModelEmitter = new EventEmitter<Guest>();\r\n  @Output() paymentReadyEmitter = new EventEmitter<boolean>();\r\n\r\n  editGuest: Guest\r\n  isEditable = true\r\n\r\n  errorMsg = ''\r\n  errorField =''\r\n\r\n  ngOnInit(): void {\r\n    this.editGuest = new Guest(0, '', '', '', '', '', '', '', '', '', 0)\r\n  }\r\n\r\n  validateAndProceed() {\r\n    this.errorMsg = 'Please follow the input field policy'\r\n    if(!this.validationService.validateText(this.editGuest.firstName, 120, 1)) {\r\n      this.errorField = 'firstName'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateText(this.editGuest.lastName, 120, 5)) {\r\n      this.errorField = 'lastName'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateEmail(this.editGuest.emailAddress, 255, 5)) {\r\n      this.errorField = 'emailAddress'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.streetAddress, 255, 1)) {\r\n      this.errorField = 'streetAddress'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.apartmentNumber, 10, 0)) {\r\n      this.errorField = 'apartmentNumber'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.city, 25, 1)) {\r\n      this.errorField = 'city'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.state, 30, 1)) {\r\n      this.errorField = 'state'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.country, 20, 1)) {\r\n      this.errorField = 'country'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.zipCode, 5, 0)) {\r\n      this.errorField = 'zipCode'\r\n      return false\r\n    }\r\n\r\n    this.guestModelEmitter.emit(this.editGuest)\r\n    this.paymentReadyEmitter.emit(true)\r\n    this.isEditable = false\r\n\r\n    this.errorMsg = ''\r\n    this.errorField = ''\r\n    return true;\r\n  }\r\n\r\n  makeEditable() {\r\n    this.isEditable = true;\r\n    this.paymentReadyEmitter.emit(false)\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid guest-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 guest-col\">\r\n            <div class=\"guest-det-blk\">\r\n                <fieldset class=\"field-set\">\r\n                    <legend>Please provide your shipping and payment details below</legend>\r\n                    <div class=\"edit-btn\" *ngIf=\"!isEditable\" (click)=\"makeEditable()\">\r\n                        <mdb-icon fas icon=\"edit\"></mdb-icon>\r\n                    </div>\r\n                    <div class=\"inpt-policy\">\r\n                        <div>\r\n                            <span class=\"policy-head\">Input Field Policy:</span>\r\n                        </div>\r\n                        <div class=\"inpt-policy-body\">\r\n                            <ul class=\"policy-ul\">\r\n                                <li>Name field should contain only alphabets</li>\r\n                                <li>Email should be valid</li>\r\n                                <li>Address fields should contain only <pre>. : -</pre> as special characters</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <span class=\"error-msg\">{{errorMsg}}</span>\r\n                    <form class=\"guest-form\" (submit)=\"validateAndProceed()\">\r\n                        <table class=\"table\">\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">First Name:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'firstName'\" name=\"firstName\" [(ngModel)]=\"editGuest.firstName\" placeholder=\"Rick\" [disabled]='!isEditable' maxlength='120' minlength='5'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Last Name:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'lastName'\" name=\"lastName\" [(ngModel)]=\"editGuest.lastName\" placeholder=\"Grimes\" [disabled]='!isEditable' maxlength='120' minlength='5'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Email:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'emailAddress'\" name=\"emailAddress\" [(ngModel)]=\"editGuest.emailAddress\" placeholder=\"rick.grimes@gmail.com\" [disabled]='!isEditable' maxlength='255' minlength='5'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Apartment:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'apartmentNumber'\" name=\"apartmentNumber\" [(ngModel)]=\"editGuest.apartmentNumber\" placeholder=\"221B\" [disabled]='!isEditable' maxlength='10' minlength='0'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Street:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'streetAddress'\" name=\"streetAddress\" [(ngModel)]=\"editGuest.streetAddress\" placeholder=\"Baker Street\" [disabled]='!isEditable' maxlength='255' minlength='1'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">City:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'city'\" name=\"city\" [(ngModel)]=\"editGuest.city\" placeholder=\"London\" [disabled]='!isEditable' maxlength='25' minlength='1'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">State:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'state'\" name=\"state\" [(ngModel)]=\"editGuest.state\" placeholder=\"Marylebone\" [disabled]='!isEditable' maxlength='30' minlength='1'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Country:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'country'\" name=\"country\" [(ngModel)]=\"editGuest.country\" placeholder=\"United Kingdom\" [disabled]='!isEditable' maxlength='20' minlength='1'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Zip Code:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'zipCode'\" name=\"zipCode\" [(ngModel)]=\"editGuest.zipCode\" placeholder=\"NW16XE\" [disabled]='!isEditable' maxlength='5' minlength='0'>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                        <div class=\"col-md-12 save-guest-blk\">\r\n                            <span class=\"save-info\">*Save before proceeding for payment</span>\r\n                            <button type=\"submit\" class=\"btn j-btn j-btn-allow save-guest-btn\" mdbWavesEffect>Save</button>\r\n                        </div>\r\n                    </form>\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { Guest } from 'src/app/Utilities/models/users/guest.model';\r\nimport { CheckOutService } from 'src/app/Utilities/services/products/orders/check-out.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Customer } from 'src/app/Utilities/models/users/customer.model';\r\nimport { ChargeRequest } from 'src/app/Utilities/models/products/orders/charge-request.mode';\r\n\r\ndeclare var Stripe: stripe.StripeStatic;\r\n\r\n@Component({\r\n  selector: 'app-stripe-block',\r\n  templateUrl: './stripe-block.component.html',\r\n  styleUrls: ['./stripe-block.component.css']\r\n})\r\nexport class StripeBlockComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(\r\n    private checkOutService: CheckOutService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  @Input() totalAmount = 0\r\n  @Input() currency = 'USD'\r\n  @Input() stripePublicKey = ''\r\n\r\n  userLoggedIn = false;\r\n\r\n  customerDetails: Customer\r\n\r\n  userAddressID = 0;\r\n  guest: Guest;\r\n  paymentReady = false;\r\n\r\n  @ViewChild('cardElement') cardElement: ElementRef;\r\n\r\n  stripe: stripe.Stripe;\r\n  card;\r\n  \r\n  cardErrors;\r\n\r\n  loading = false;\r\n  confirmation;\r\n\r\n  ngOnInit(): void {\r\n    this.userLoggedIn = this.userService.customerLoggedIn\r\n\r\n    if(this.userLoggedIn) {\r\n      this.customerDetails = this.userService.getCustomerDetails()\r\n    }\r\n\r\n    this.userService.customerLoggedInObserver.subscribe (\r\n      (localUserLoggedIn) => {\r\n        this.userLoggedIn = localUserLoggedIn\r\n\r\n        if(this.userLoggedIn)\r\n          this.customerDetails = this.userService.getCustomerDetails()\r\n      }\r\n    )\r\n\r\n  }\r\n    \r\n  ngAfterViewInit(): void {\r\n    console.log(this.cardElement)\r\n  \r\n    this.stripe = Stripe(this.stripePublicKey);\r\n    const elements = this.stripe.elements();\r\n    this.card = elements.create('card');\r\n\r\n    this.card.mount(this.cardElement.nativeElement);\r\n\r\n    this.card.addEventListener('change', ({ error }) => {\r\n        this.cardErrors = error && error.message;\r\n    });\r\n\r\n  }\r\n\r\n  async handleForm(e) {\r\n    e.preventDefault();\r\n\r\n    if(this.paymentReady) {\r\n\r\n      let email = ''\r\n      if(this.guest != null && !this.userLoggedIn) {\r\n        email = this.guest.emailAddress\r\n      } else {\r\n        email = this.customerDetails.emailAddress\r\n      }\r\n\r\n      const { token, error } = await this.stripe.createToken(\r\n        this.card,\r\n        {\r\n          name: email,\r\n          currency: this.currency\r\n        }\r\n      );\r\n  \r\n      if (error) {\r\n        this.cardErrors = error.message;\r\n      } else {\r\n        console.log('Token response ==> ', token)\r\n        let chargeRequest = new ChargeRequest('' , this.totalAmount ,'' ,'' ,'' , 0, null)\r\n        if(this.userLoggedIn)\r\n          chargeRequest = new ChargeRequest('', this.totalAmount, '', email, token.id, this.userAddressID, null)\r\n        else\r\n          chargeRequest = new ChargeRequest('', this.totalAmount, '', email, token.id, 0, this.guest)\r\n\r\n          this.checkOutService.chargeCustomer(chargeRequest)\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  readyPayment(paymentStatus: boolean) {\r\n    this.paymentReady = paymentStatus\r\n    console.log('payment status ====> ',  this.paymentReady)\r\n  }\r\n\r\n  getGuest(guestDetails: Guest) {\r\n    this.guest = guestDetails\r\n  }\r\n\r\n  getUserAddressID(addressID: number) {\r\n    this.userAddressID = addressID\r\n    console.log('Address ID ====> ', this.userAddressID)\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid stripe-cntr untouchable\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 check-out-header\">\r\n            <div class=\"head-label\">\r\n                <h2>Checkout</h2>\r\n            </div>\r\n            <hr class=\"check-out-hr hr-1\">\r\n        </div>\r\n        <div class=\"col-md-12 check-out-body\">\r\n            <app-user-address-block *ngIf=\"userLoggedIn\" (paymentReadyEmitter)=\"readyPayment($event)\" (addressIDEmitter)=\"getUserAddressID($event)\"></app-user-address-block>\r\n            <app-guest-details-block *ngIf=\"!userLoggedIn\" (paymentReadyEmitter)=\"readyPayment($event)\" (guestModelEmitter)=\"getGuest($event)\"></app-guest-details-block>\r\n        </div>\r\n        <div class=\"col-md-12 stripe-blk\">\r\n            <form class=\"form\" (submit)=\"handleForm($event)\">\r\n\r\n                <label class=\"card-lbl\" for=\"card-element\">Use Credit or debit card</label>\r\n                <!-- Used to display Element errors. -->\r\n                <p class=\"card-error-msg\">{{ cardErrors }}</p>\r\n                <div class=\"stripe-card-blk\" #cardElement>\r\n                    <!-- A Stripe Element will be inserted here. -->\r\n                </div>\r\n\r\n                <button class=\"btn j-btn card-button\" [class.j-btn-allow]=\"paymentReady\" mdbWavesEffect>Pay ${{ 1000 / 100 }}.00</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit, Renderer2, Output, EventEmitter } from '@angular/core';\r\nimport { Address } from 'src/app/Utilities/models/users/address.model';\r\nimport { AddressService } from 'src/app/Utilities/services/users/address.service';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-address-block',\r\n  templateUrl: './user-address-block.component.html',\r\n  styleUrls: ['./user-address-block.component.css']\r\n})\r\nexport class UserAddressBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private addressService: AddressService,\r\n    private userService: UserService,\r\n    private validationService: ValidationService\r\n  ) { }\r\n\r\n  fieldMax = 255\r\n  fieldMin = 5\r\n\r\n  @Output() addressIDEmitter = new EventEmitter<number>();\r\n  @Output() paymentReadyEmitter = new EventEmitter<boolean>();\r\n\r\n  legend = 'Click to add new address..!!!'\r\n\r\n  editAddress: Address;\r\n  errorMsg = ''\r\n  errorField = ''\r\n\r\n  userAddresses: Address[] = []\r\n  checkedAddrID = 0\r\n\r\n  addrFormOpen = false;\r\n\r\n  ngOnInit(): void {\r\n    let customer = this.userService.getCustomerDetails()\r\n    this.editAddress = new Address(0, customer.customerID, '', '', '', '', '', '', false, false, '')\r\n\r\n    this.addressService.addressLoadedObserver.subscribe(\r\n      (localAddressesLoaded) => {\r\n        if(localAddressesLoaded)\r\n          this.userAddresses = this.addressService.getUserAddresses()\r\n          \r\n        if(this.userAddresses != null && this.userAddresses.length > 0) {\r\n          this.emitNewAddressID(this.userAddresses[0], 0)\r\n        }\r\n      }\r\n    )\r\n\r\n    this.addressService.fetchUserAddress()\r\n\r\n  }\r\n\r\n  \r\n  openCloseNewAddressForm() {\r\n    let addrFrom = document.getElementById('entire-form-id')\r\n    let addrFieldSet = document.getElementById('field-set-1')\r\n\r\n    if(!this.addrFormOpen) {\r\n      this.renderer.addClass(addrFrom, 'entire-form-open')\r\n      this.renderer.addClass(addrFieldSet, 'field-set-border')\r\n    }\r\n    else {\r\n      this.renderer.removeClass(addrFrom, 'entire-form-open')\r\n      this.renderer.removeClass(addrFieldSet, 'field-set-border')\r\n    }\r\n\r\n    this.addrFormOpen = !this.addrFormOpen\r\n  }\r\n\r\n  emitNewAddressID(addr: Address, index: number) {\r\n    this.checkedAddrID = index\r\n    this.addressIDEmitter.emit(addr.addressID)\r\n    this.paymentReadyEmitter.emit(true)\r\n  }\r\n\r\n  addNewAddress() {\r\n    let check = this.validateAddressFields()\r\n    console.log('User address check ==> ', check)\r\n    if(check) {\r\n      this.addressService.saveAddress(this.editAddress);\r\n      this.openCloseNewAddressForm()\r\n      this.legend = 'Select the new address above'\r\n    }\r\n  }\r\n  \r\n  validateAddressFields() {\r\n    this.errorMsg = 'Please follow input field policy'\r\n    if(!this.validationService.validateAddress(this.editAddress.apartmentNumber, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'APN'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.street, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'STR'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.city, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'CTY'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.state, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'STA'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.country, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'CTR'\r\n      return false;\r\n    }\r\n    \r\n    if(!this.validationService.validateAddress(this.editAddress.zipCode, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'ZIP'\r\n      return false;\r\n    }\r\n\r\n    this.errorField = ''\r\n    this.errorMsg = ''\r\n    return true;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"col-md-12 addr-blk\">\r\n    <div class=\"user-addr\">\r\n        <div class=\"check-out-hdr\">\r\n            <span class=\"info-head\">Choose address and proceed to payment</span>\r\n        </div>\r\n        <div class=\"prev-addr\">\r\n            <!-- Default unchecked -->\r\n            <div class=\"custom-control custom-radio addr-radio\" *ngFor=\"let addr of userAddresses; let i = index\" mdbWavesEffect (click)=\"emitNewAddressID(addr, i)\">\r\n                <input type=\"radio\" class=\"custom-control-input addr-radio-input\" [id]=\"'defaultUnchecked' + addr.addressID\" name=\"defaultExampleRadios\" [checked]=\"i == checkedAddrID\" mdbInput>\r\n                <label class=\"custom-control-label addr-radio-label\" [for]=\"'defaultUnchecked' + addr.addressID\">{{addr.apartmentNumber}}, {{addr.street}}</label>\r\n            </div>\r\n        </div>\r\n        <fieldset id=\"field-set-1\" class=\"field-set\">\r\n            <legend (click)=\"openCloseNewAddressForm()\" mdbWavesEffect>{{legend}}</legend>\r\n            <div id=\"entire-form-id\" class=\"entire-form\">\r\n                <div class=\"addr-policy\">\r\n                    <div>\r\n                        <span class=\"policy-head\">Input Field Policy</span>\r\n                    </div>\r\n                    <div class=\"addr-policy-body\">\r\n                        <ul class=\"policy-ul\">\r\n                            <li>Address fields should contain only <pre>. : -</pre> as special characters</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"error-msg\">\r\n                    <span>{{errorMsg}}</span>\r\n                </div>\r\n                <form (submit)=\"addNewAddress()\" class=\"form\" id=\"new-addr-form\">\r\n                    <table class=\"user-form-table\">\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>Apartment</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.apartmentNumber\" [class.error-input]=\"errorField === 'APN'\" type=\"text\" name=\"apartment\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>Street</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.street\" [class.error-input]=\"errorField === 'STR'\" type=\"text\" name=\"Street\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>City</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.city\" [class.error-input]=\"errorField === 'CTY'\" type=\"text\" name=\"City\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>State</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.state\" [class.error-input]=\"errorField === 'STA'\" type=\"text\" name=\"State\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>Country</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.country\" [class.error-input]=\"errorField === 'CTR'\" type=\"text\" name=\"Country\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>Zip Code/ Postal Code</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.zipCode\" [class.error-input]=\"errorField === 'ZIP'\" type=\"text\" name=\"zipCode\">\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <div class=\"save-addr-btn\">\r\n                        <button class=\"btn j-btn j-btn-allow save-btn\" type=\"submit\" mdbWavesEffect>Add New Address</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ProductKart } from 'src/app/Utilities/models/products/orders/product-kart.model';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\n\r\n@Component({\r\n  selector: 'app-summary-block',\r\n  templateUrl: './summary-block.component.html',\r\n  styleUrls: ['./summary-block.component.css']\r\n})\r\nexport class SummaryBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private kartService: ProductKartService\r\n  ) { }\r\n\r\n  kartProducts: ProductKart[] = []\r\n\r\n  @Input() totalCheckoutAmount: number = 0\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.kartService.kartCountLoadedObserver.subscribe(\r\n      (kartCount: number) => {\r\n        if(kartCount > 0)\r\n          this.kartProducts = this.kartService.getKartProducts()\r\n        else\r\n          this.kartProducts = []\r\n      }\r\n    )\r\n\r\n    this.kartService.fetchUserKart();\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid summary-container untouchable wow animate slideInLeft\" data-wow-duration=\"1s\" data-wow-delay=\"0.6s\">\r\n    <div class=\"co-pr\">\r\n        <div class=\"co-pr-head\">\r\n            <span class=\"info-head\">Summary: </span>\r\n            <p class=\"issue-head\">*something's odd, edit\r\n                <a [routerLink]=\"['/', 'ui-kart']\">here!!!</a>\r\n            </p>\r\n        </div>\r\n        <div class=\"co-pr-items\">\r\n            <div class=\"row co-pr-items\">\r\n                <div class=\"col-md-12 co-pr-item\" *ngFor=\"let cItem of kartProducts\">\r\n                    <div class=\"pr-item\">\r\n                        <div class=\"pr-item-vis-img\">\r\n                            <img class=\"pr-img\" [src]=\"cItem.product.imagePath\">\r\n                        </div>\r\n                        <div class=\"pr-item-vis-name\">\r\n                            <span class=\"pr-name\">{{cItem.product.productName}}</span>\r\n                        </div>\r\n                        <div class=\"pr-item-vis-price\">\r\n                            <span class=\"pr-price pr-dis\">${{cItem.product.discountedPrice}}</span>\r\n                            <span class=\"pr-price pr-mul\">x</span>\r\n                            <span class=\"pr-price pr-qty\">{{cItem.quantity}}</span>\r\n                            <span class=\"pr-price pr-eq\">=</span>\r\n                            <span class=\"pr-price pr-tot\">${{cItem.quantity * cItem.product.discountedPrice}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"amt-cont\">\r\n            <div class=\"f-sub\">\r\n                <table class=\"sub-table\">\r\n                    <tr class=\"sub-total\">\r\n                        <td class=\"sub-label\">Subtotal</td>\r\n                        <td class=\"sub-value\">${{totalCheckoutAmount}}/-</td>\r\n                    </tr>\r\n                    <tr class=\"sub-ship\">\r\n                        <td class=\"sub-label\">Shipping</td>\r\n                        <td class=\"sub-value free-val\">free</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n            <hr>\r\n            <div class=\"f-amt\">\r\n                <table class=\"f-table\">\r\n                    <tr class=\"f-tr\">\r\n                        <td class=\"f-label\">Total</td>\r\n                        <td class=\"f-value\">${{totalCheckoutAmount}}/-</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-block',\r\n  templateUrl: './contact-block.component.html',\r\n  styleUrls: ['./contact-block.component.css']\r\n})\r\nexport class ContactBlockComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid contact-container\">\r\n    <!-- Footer -->\r\n    <footer class=\"page-footer font-small mdb-color pt-4\">\r\n\r\n        <!-- Footer Links -->\r\n        <div class=\"container text-center text-md-left\">\r\n\r\n            <!-- Footer links -->\r\n            <div class=\"row text-center text-md-left mt-3 pb-3\">\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-3 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                    <h6 class=\"text-uppercase mb-4 font-weight-bold company-header\">JEWELERY</h6>\r\n                    <p>\r\n                        Here we sell exactly what you need...!!!\r\n                    </p>\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n                <hr class=\"w-100 clearfix d-md-none\">\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mt-3\">\r\n                    <h6 class=\"text-uppercase mb-4 font-weight-bold\">OVERVIEW</h6>\r\n                    <p>\r\n                        <a href=\"\">About Us</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"\">Contact Us</a>\r\n                    </p>\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n                <hr class=\"w-100 clearfix d-md-none\">\r\n\r\n                <div class=\"col-md-3 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                    <h6 class=\"text-uppercase mb-4 font-weight-bold\">CUSTOMER DELIGHT</h6>\r\n                    <p>\r\n                        <a href=\"#!\">Return, Exchange & Shipping Policy</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"#!\">FAQs</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"#!\">Track Your Order</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"#!\">Terms & Conditions and Privacy Policy</a>\r\n                    </p>\r\n                </div>\r\n\r\n                <!-- Grid column -->\r\n                <hr class=\"w-100 clearfix d-md-none\">\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                    <h6 class=\"text-uppercase mb-4 font-weight-bold\">GET IN TOUCH</h6>\r\n\r\n                    <p>\r\n                        <mdb-icon fas icon=\"phone\" class=\"mr-3\"></mdb-icon>\r\n                        <a href=\"tel:+1-303-499-7111\" class=\"tel\">+1 (303) 499-7111</a>\r\n                    </p>\r\n                    <hr class=\"add-div\">\r\n                    <p>\r\n                        <mdb-icon fas icon=\"envelope\" class=\"mr-3\"></mdb-icon>\r\n                        <a href=\"mailto:info@example.com\" class=\"email\">info@example.com</a>\r\n                    </p>\r\n                    <hr class=\"add-div\">\r\n                    <p>\r\n                        <mdb-icon fas icon=\"home\" class=\"mr-3\"></mdb-icon> New York, NY 10012, US\r\n                    </p>\r\n                    <hr class=\"add-div\">\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n            </div>\r\n            <!-- Footer links -->\r\n\r\n            <hr class=\"contact-div\">\r\n\r\n            <!-- Grid row -->\r\n            <div class=\"row d-flex align-items-center\">\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-7 col-lg-8\">\r\n\r\n                    <!--Copyright-->\r\n                    <p class=\"text-center text-md-left\">© 2020 Copyright:\r\n                        <a href=\"\">\r\n                            <strong>Jwellery</strong>\r\n                        </a>\r\n                    </p>\r\n\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-5 col-lg-4 ml-lg-0\">\r\n\r\n                    <!-- Social buttons -->\r\n                    <div class=\"text-center text-md-right\">\r\n                        <ul class=\"list-unstyled list-inline\">\r\n                            <li class=\"list-inline-item\">\r\n                                <a mdbBtn floating=\"true\" size=\"sm\" class=\"rgba-white-slight mx-1\" mdbWavesEffect>\r\n                                    <mdb-icon fab icon=\"facebook\"></mdb-icon>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"list-inline-item\">\r\n                                <a mdbBtn floating=\"true\" size=\"sm\" class=\"rgba-white-slight mx-1\" mdbWavesEffect>\r\n                                    <mdb-icon fab icon=\"twitter\"></mdb-icon>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"list-inline-item\">\r\n                                <a mdbBtn floating=\"true\" size=\"sm\" class=\"rgba-white-slight mx-1\" mdbWavesEffect>\r\n                                    <mdb-icon fab fab icon=\"instagram\"></mdb-icon>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-12 contact-dev-div\">\r\n                    <p class=\"text-center contact-dev-p\">\r\n                        Like what you see,\r\n                        <a class=\"mail-el\" href=\"mailto:info@example.com\">Give feedback to Developers..!!</a>\r\n                    </p>\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n            </div>\r\n            <!-- Grid row -->\r\n\r\n        </div>\r\n        <!-- Footer Links -->\r\n\r\n    </footer>\r\n    <!-- Footer -->\r\n</div>","import { Component, OnInit, Renderer2, Input } from '@angular/core';\r\nimport { Category } from 'src/app/Utilities/models/global-models/category.model';\r\nimport { SubCategory } from 'src/app/Utilities/models/global-models/sub-category.model';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\nimport { Collection } from 'src/app/Utilities/models/global-models/collection.model';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/Utilities/services/products/product.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\n\r\n@Component({\r\n  selector: 'app-bottom-header',\r\n  templateUrl: './bottom-header.component.html',\r\n  styleUrls: ['./bottom-header.component.css']\r\n})\r\nexport class BottomHeaderComponent implements OnInit {\r\n\r\n  \r\n  searchTerm: string = '';\r\n\r\n  activeHeader = 'home';\r\n  hoveredHeader = 'home';\r\n\r\n  bagCount = '00';\r\n  wishlistCount = '00';\r\n\r\n  productSearchActive = false;\r\n\r\n  @Input() womens = new Map<Category, SubCategory[]>();\r\n  @Input() mens = new Map<Category, SubCategory[]>();\r\n  @Input() kids = new Map<Category, SubCategory[]>();\r\n\r\n  @Input() womensLoaded: boolean;\r\n  @Input() mensLoaded: boolean;\r\n  @Input() kidsLoaded: boolean;\r\n  \r\n  @Input() collections: Collection[]\r\n\r\n  @Input() collectionsLoaded: boolean;\r\n\r\n  toolTipHtml = ''\r\n\r\n  navbar: {head: string, load: boolean, data: Map<Category, SubCategory[]>}[] = [];\r\n  isUserLoggedIn = false;\r\n\r\n  constructor(\r\n    private render: Renderer2,\r\n    private productService: ProductService,\r\n    private productKartService: ProductKartService,\r\n    private userService: UserService,\r\n    private wishListService: WishListService,\r\n    private router: Router\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isUserLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localCustomerLoggedIn) => this.isUserLoggedIn = localCustomerLoggedIn\r\n    )\r\n    \r\n    this.navbar.push(\r\n      {head: 'womens', load: this.womensLoaded, data: this.womens},\r\n      {head: 'mens', load: this.mensLoaded, data: this.mens},\r\n      {head: 'kids', load: this.kidsLoaded, data: this.kids}\r\n    )\r\n    \r\n    console.log('Local navbar ====> ', this.navbar)\r\n\r\n    this.productService.allProductsObserver.subscribe(\r\n      () => this.searchTerm = ''\r\n    )\r\n\r\n    if(this.productKartService.kartCount > 0) {\r\n      this.setKartCount(this.productKartService.kartCount)\r\n    }\r\n\r\n    if(this.wishListService.wishListLoaded) {\r\n      let localWishListCount = this.wishListService.getWishList().wishListProducts.length\r\n      this.setWishListCount(localWishListCount)\r\n    }\r\n\r\n    this.productKartService.kartCountLoadedObserver.subscribe (\r\n      (kartCount: number) => {\r\n        this.setKartCount(this.productKartService.kartCount)\r\n      }\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded) {\r\n          let localWishListCount = this.wishListService.getWishList().wishListProducts.length\r\n          this.setWishListCount(localWishListCount)\r\n        } else {\r\n          this.wishlistCount = '00'\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  setKartCount(localKartCount: number) {\r\n    if(localKartCount < 10)\r\n      this.bagCount = '0' + localKartCount.toString();\r\n    else if(localKartCount >= 10)\r\n      this.bagCount = localKartCount.toString()\r\n    else\r\n      this.bagCount = '00'\r\n  }\r\n\r\n  setWishListCount(wishListCount: number) {\r\n    if(wishListCount < 10)\r\n      this.wishlistCount = '0' + wishListCount.toString()\r\n    else\r\n      this.wishlistCount = wishListCount.toString()\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Please, DO NOT TOUCH THE BELOW METHOD !!!\r\n   * \r\n   * If user hover on one of the navbar's, then\r\n   * 1. Check if its not home, only perform operation on others\r\n   * 2. check if the hovered nav item has data to open\r\n   * 3. Then perform entire page operation for Womens, other for others \r\n   * \r\n   * @param status \r\n   */\r\n  setHovered(type: string, status: boolean) {\r\n    this.activeHeader = type\r\n    if(type !== 'home') {\r\n      const angleDown = document.getElementById(type + '-angle-down')\r\n      const optionstab = document.getElementById(type);\r\n\r\n      if(status) {\r\n        this.hoveredHeader = type;\r\n        this.render.setStyle(angleDown, 'transform', 'rotate(90deg)')\r\n      }\r\n      else {\r\n        this.hoveredHeader = ''\r\n        this.render.removeStyle(angleDown, 'transform',)\r\n      }\r\n\r\n      this.render.removeStyle(optionstab, 'height');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Please, DO NOT TOUCH THE BELOW METHOD !!!\r\n   * \r\n   * If user hover on one of the navbar's, then\r\n   * 1. Check if its not home, only perform operation on others\r\n   * 2. check if the hovered nav item has data to open\r\n   * 3. Check if the data is already open, perfrom differently when open & closed\r\n   * 4. Then perform entire page operation for Womens, other for others \r\n   * \r\n   * @param status \r\n   */\r\n  openOrCloseOptions(type: string) {\r\n    this.activeHeader = type\r\n    if(type !== 'home') {\r\n      const optionstab = document.getElementById(type);\r\n      const angleDown = document.getElementById(type + '-angle-down')\r\n      if(type !== 'collections') {\r\n        if(type === this.hoveredHeader) {\r\n          this.render.setStyle(optionstab, \"height\", '0px');\r\n          this.render.removeStyle(angleDown, 'transform',)\r\n          this.hoveredHeader = ''\r\n        } else {\r\n          this.render.setStyle(optionstab, \"height\", '320px');\r\n          this.render.setStyle(angleDown, 'transform', 'rotate(90deg)')\r\n          this.hoveredHeader = type\r\n        }\r\n      } else {\r\n        if(type === this.hoveredHeader) {\r\n          this.render.setStyle(optionstab, \"height\", '0px');\r\n          this.render.removeStyle(angleDown, 'transform',)\r\n          this.hoveredHeader = ''\r\n        } else {\r\n          this.render.setStyle(optionstab, \"height\", '200px');\r\n          this.render.setStyle(angleDown, 'transform', 'rotate(90deg)')\r\n          this.hoveredHeader = 'collections'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  changeSearchBoxColor(status: boolean) {\r\n    this.productSearchActive = status;\r\n  }\r\n\r\n  searchProducts() {\r\n    if(this.searchTerm != null && this.searchTerm.length >= 4) {\r\n      this.router.navigate(['/', 'ui-products', 'search'], {queryParams: {query: this.searchTerm}})\r\n    }\r\n  }\r\n\r\n  setTooltip(message: string) {\r\n    this.toolTipHtml = message\r\n  }\r\n\r\n}\r\n","<div class=\"container bottom-header-container untouchable\">\r\n    <div class=\"row\">\r\n        <!-- <div class=\"col-md-3 logo-contianer\">\r\n            <img id=\"logo\" src=\"assets/logo.png\">\r\n        </div> -->\r\n        <div class=\"col-md-12 header-items\">\r\n            <div class=\"row\">\r\n                <!--Navbar-->\r\n                <mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark bottom-header-color\" class=\"bottom-header-mdb\" [containerInside]=\"false\" mdbStickyHeader>\r\n\r\n                    <a class=\"navbar-brand\" [routerLink]=\"['home']\"><img id=\"logo\" src=\"assets/logo.png\"></a>\r\n                    <!-- Collapsible content -->\r\n                    <links>\r\n\r\n                        <!-- Links -->\r\n                        <ul class=\"navbar-nav mr-3\">\r\n                            <li class=\"nav-item nav-bar-item\">\r\n                                <a class=\"nav-link var-colors waves-light\" [routerLink]=\"['home']\" (mouseover)=\"setHovered('home', true)\" (mouseleave)=\"setHovered('home', false)\" mdbWavesEffect>\r\n                                    HOME\r\n                                    <span [class.ul-active]=\"activeHeader=='home'\" class=\"underline\"></span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item nav-bar-item\" *ngFor=\"let navBarItem of navbar\">\r\n                                <a class=\"nav-link var-colors waves-light\" (click)=\"openOrCloseOptions(navBarItem.head)\" (mouseover)=\"setHovered(navBarItem.head, true)\" (mouseleave)=\"setHovered(navBarItem.head, false)\" mdbWavesEffect> {{navBarItem.head | uppercase}}\r\n                                    <mdb-icon fas icon=\"angle-right\" class=\"angle-icon\" [id]=\"navBarItem.head + '-angle-down'\"></mdb-icon>\r\n                                    <span [class.ul-active]=\"activeHeader==navBarItem.head\" class=\"underline\"></span>\r\n                                </a>\r\n                                <div class=\"dropdown-content mega-dropdown-menu\" *ngIf=\"navBarItem.load\" [id]=\"navBarItem.head\">\r\n                                    <div class=\"row mega_list\">\r\n                                        <div class=\"column\" *ngFor=\" let item of navBarItem.data | keyvalue\">\r\n                                            <h3 class=\"col-header\" [routerLink]=\"['ui-products', 'search']\" [queryParams]=\"{'section': navBarItem.head, 'categoryType': item.key.categoryName}\">\r\n                                                {{item.key.categoryName}}\r\n                                            </h3>\r\n                                            <hr class=\"options-head-div\">\r\n                                            <a class=\"option-items\" [routerLink]=\"['ui-products', 'search']\" [queryParams]=\"{'section': navBarItem.head, 'categoryType': item.key.categoryName, 'catergorySubType': option.subCategoryName}\" *ngFor=\"let option of item.value\">\r\n                                                {{option.subCategoryName}}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <li class=\"nav-item nav-bar-item\">\r\n                                <a class=\"nav-link var-colors waves-light\" (mouseover)=\"setHovered('collections', true)\" (mouseleave)=\"setHovered('collections', false)\" (click)=\"openOrCloseOptions('collections')\" mdbWavesEffect>\r\n                                    COLLECTIONS\r\n                                    <mdb-icon fas icon=\"angle-right\"  class=\"angle-icon\" id=\"collections-angle-down\"></mdb-icon>\r\n                                    <span [class.ul-active]=\"activeHeader=='collections'\" class=\"underline\"></span>\r\n                                </a>\r\n                                <ul id=\"hovered-options\" id=\"collections\" *ngIf=\"collectionsLoaded\" class=\"col-mega-dropdown-menu list-unstyled\">\r\n                                    <li class=\"col-mega_list\">\r\n                                        <ul class=\"list-unstyled clct-list\">\r\n                                            <hr class=\"options-head-div\">\r\n                                            <li class=\"option-items\" [routerLink]=\"['ui-products', 'collections', option.collectionName]\" *ngFor=\"let option of collections\">\r\n                                                {{option.collectionName}}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <div class=\"md-form product-search my-0\" [class.product-search-active]=\"productSearchActive\">\r\n                            <input class=\"form-control mr-sm-2 search-box\" [(ngModel)]=\"searchTerm\" (focus)=\"changeSearchBoxColor(true)\" (blur)=\"changeSearchBoxColor(false)\" type=\"text\" placeholder=\"Search for products\" minlength=4 aria-label=\"Search\">\r\n                            <mdb-icon class=\"search-btn\" fas icon=\"search\" (click)=\"searchProducts()\"></mdb-icon>\r\n                        </div>\r\n                        <!-- Links -->\r\n\r\n                        <ul class=\"navbar-nav ml-auto nav-flex-icons\">\r\n                            <li class=\"nav-item\">\r\n                                <div class=\"wishlist-bag shop-icons\">\r\n                                    <a class=\"nav-link var-colors-icons\">\r\n                                        <mdb-icon *ngIf=\"!isUserLoggedIn\" far icon=\"heart\" [mdbTooltip]=\"popTemplate\" (mouseenter)=\"setTooltip('Login to see the wishlist')\" placement=\"left\" class=\"shop-icon wishlist-icon\"></mdb-icon>\r\n                                        <mdb-icon *ngIf=\"isUserLoggedIn\" [routerLink]=\"['ui-wishlist']\" [mdbTooltip]=\"popTemplate\" (mouseenter)=\"setTooltip('Click to see the wishlist')\" placement=\"left\" fas icon=\"heart\" class=\"shop-icon wishlist-icon\"></mdb-icon>\r\n                                        <span *ngIf=\"isUserLoggedIn && wishlistCount > '00'\" class=\"items-count wishlist-items-count\">{{wishlistCount}}</span>\r\n                                    </a>\r\n                                </div>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link var-colors-icons var-colors-icons-last\" [routerLink]=\"['ui-kart']\">\r\n                                    <div class=\"shopping-bag shop-icons\">\r\n                                        <mdb-icon fas icon=\"shopping-bag\" [mdbTooltip]=\"popTemplate\" (mouseenter)=\"setTooltip('Click to see the cart')\" placement=\"left\" class=\"shop-icon shopping-bag-icon\"></mdb-icon>\r\n                                        <span *ngIf=\"bagCount > '00'\" class=\"items-count bag-items-count\">{{bagCount}}</span>\r\n                                    </div>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </links>\r\n                    <!-- Collapsible content -->\r\n\r\n                </mdb-navbar>\r\n                <!--/.Navbar-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #popTemplate>\r\n    <div [innerHtml]=\"toolTipHtml\"></div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from '../Utilities/models/global-models/category.model';\r\nimport { SubCategory } from '../Utilities/models/global-models/sub-category.model';\r\nimport { LandingPageService } from '../Utilities/services/landing-page/landing-page.service';\r\nimport { Collection } from '../Utilities/models/global-models/collection.model';\r\nimport { HeaderService } from '../Utilities/services/landing-page/header.service';\r\n\r\n@Component({\r\n  selector: 'app-headers',\r\n  templateUrl: './headers.component.html',\r\n  styleUrls: ['./headers.component.css']\r\n})\r\nexport class HeadersComponent implements OnInit {\r\n\r\n  constructor(\r\n    private headerService: HeaderService\r\n  ) { }\r\n\r\n  womens = new Map<Category, SubCategory[]>();\r\n  mens = new Map<Category, SubCategory[]>();\r\n  kids = new Map<Category, SubCategory[]>();\r\n  \r\n  collections: Collection[]\r\n\r\n  womensLoaded:boolean = false;\r\n  mensLoaded:boolean = false;\r\n  kidsLoaded:boolean = false;\r\n  collectionsLoaded:boolean = false;\r\n\r\n  navBarLoaded = false;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.headerService.headersLoaded.subscribe (\r\n      (localLoaded) => {\r\n        if(localLoaded) {\r\n          this.womens = this.headerService.getWomensHeaders()\r\n\r\n          if(this.womens != null && this.womens.size > 0 )\r\n            this.womensLoaded = true\r\n          \r\n          this.mens = this.headerService.getMensHeaders()\r\n\r\n          if(this.mens != null && this.mens.size > 0 )\r\n            this.mensLoaded = true\r\n          \r\n          this.kids = this.headerService.getKidsHeaders()\r\n\r\n          if(this.kids != null && this.kids.size > 0 )\r\n            this.kidsLoaded = true\r\n          \r\n          this.collections = this.headerService.getCollectionsHeaders()\r\n\r\n          if(this.collections != null && this.collections.length > 0 )\r\n            this.collectionsLoaded = true\r\n        }\r\n\r\n        this.navBarLoaded = localLoaded\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<app-top-header></app-top-header>\r\n<app-bottom-header *ngIf=\"navBarLoaded\" [womensLoaded]=\"womensLoaded\" [mensLoaded]=\"mensLoaded\" [kidsLoaded]=\"kidsLoaded\" [collectionsLoaded]=\"collectionsLoaded\" [womens]=\"womens\" [mens]=\"mens\" [kids]=\"kids\" [collections]=\"collections\"></app-bottom-header>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/Utilities/services/users/login.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Customer } from 'src/app/Utilities/models/users/customer.model';\r\nimport { UILoaderService } from 'src/app/Utilities/services/ui-loader/ui-loader.service';\r\nimport { CustomerRegister } from 'src/app/Utilities/models/users/customer-register.model';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\nimport { LogoutService } from 'src/app/Utilities/services/users/logout.service';\r\n\r\n@Component({\r\n  selector: 'app-top-header',\r\n  templateUrl: './top-header.component.html',\r\n  styleUrls: ['./top-header.component.css']\r\n})\r\nexport class TopHeaderComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n  userLoggedIn: boolean = false;\r\n  userRegistered: boolean = false;\r\n\r\n  loggedInCustomer: Customer;\r\n\r\n  customerRegister: CustomerRegister\r\n  \r\n  loginErrorMsg = ''\r\n  loginErrField = ''\r\n\r\n  registerErrMsg = ''\r\n  registerErrField = ''\r\n\r\n  constructor(\r\n    private loginService: LoginService, \r\n    private userService: UserService,\r\n    private uiLoaderService: UILoaderService,\r\n    private validationService: ValidationService,\r\n    private logoutService: LogoutService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.username = 'seethend';\r\n    this.password = 'See12th3';\r\n\r\n    this.customerRegister = new CustomerRegister(0, '' ,'', '', '', false, '', '', '', 0);\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (customerLoggedIn: boolean) => {\r\n        this.userLoggedIn = customerLoggedIn;\r\n        if(customerLoggedIn)\r\n          this.loggedInCustomer = this.userService.getCustomerDetails();\r\n        \r\n        // Loader UI stopped after login request got response\r\n        console.log(this.uiLoaderService.loginLoaderScreen + ' set to ' + false)\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.loginLoaderScreen, false]);\r\n      }\r\n    )\r\n\r\n    this.userService.customerRegisteredObserver.subscribe(\r\n      (localCustomerRegistered) => {\r\n        if(!localCustomerRegistered)\r\n          this.registerErrMsg = 'User registration Failed, username or email already exists !!!'\r\n        this.userRegistered = localCustomerRegistered\r\n        // this.customerRegister = new CustomerRegister(0, '' ,'', '', '', false, '', '', '', 0);\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  login() {\r\n    if (this.username.length !== 0) {\r\n      if (this.password.length !== 0) {\r\n        // Loader UI started for login\r\n        console.log(this.uiLoaderService.loginLoaderScreen + ' set to ' + true)\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.loginLoaderScreen, true]);\r\n        // this.loginService.authTokenLogin(this.username, this.password);\r\n        this.loginService.sessionBasedlogin(this.username, this.password);\r\n\r\n        this.loginErrorMsg = ''\r\n        this.loginErrField = ''\r\n        return true;\r\n\r\n      } else {\r\n        this.loginErrorMsg = 'Please enter password'\r\n        this.loginErrField = 'PS'\r\n        return false;\r\n      }\r\n    } else {\r\n      this.loginErrorMsg = 'Please enter username'\r\n      this.loginErrField = 'UN'\r\n      return false;\r\n    }\r\n  }\r\n\r\n  register() {\r\n    this.registerErrMsg = 'Please follow the input field policy'\r\n    if(!this.validationService.validateUserName(this.customerRegister.userName, 30, 5)) {\r\n      this.registerErrField = 'UN'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateText(this.customerRegister.customerFirstName, 30, 5)) {\r\n      this.registerErrField = 'FN'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateText(this.customerRegister.customerLastName, 30, 5)) {\r\n      this.registerErrField = 'LN'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateEmail(this.customerRegister.emailAddress, 125, 5)) {\r\n      this.registerErrField = 'EM'\r\n      return false\r\n    }\r\n    \r\n    if(!this.validationService.validatePhone(this.customerRegister.phone, 25, 10)) {\r\n      this.registerErrField = 'PH'\r\n      return false\r\n    }\r\n\r\n    if(this.customerRegister.repassword !== this.customerRegister.password) {\r\n      this.registerErrField = 'RP'\r\n      return false\r\n    } else if(!this.validationService.validatePassword(this.customerRegister.password, 30, 8)) {\r\n      this.registerErrField = 'PS'\r\n      return false\r\n    }\r\n\r\n    console.log('Customer register ---> ', this.customerRegister)\r\n    this.userService.registerUser(this.customerRegister)\r\n\r\n    this.registerErrField = ''\r\n    this.registerErrMsg = ''\r\n    return true;\r\n\r\n  }\r\n\r\n  registerAgain() {\r\n    this.userRegistered = false;\r\n  }\r\n\r\n  logoutUser() {\r\n    this.logoutService.logoutUser()\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark top-header-color\" [containerInside]=\"false\">\r\n    <!-- Collapsible content -->\r\n    <links>\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link waves-light var-colors\" mdbWavesEffect>\r\n                    <mdb-icon fas icon=\"map-marker-alt\"></mdb-icon> Store\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link waves-light var-colors\" mdbWavesEffect>\r\n                    <mdb-icon fas icon=\"phone-square-alt\"></mdb-icon> Phone\r\n                    <a class=\"tel\" href=\"tel:+1-303-499-7111\">+1 (303) 499-7111</a>\r\n                </a>\r\n            </li>\r\n\r\n        </ul>\r\n        <!-- Links -->\r\n\r\n        <ul class=\"navbar-nav ml-auto nav-flex-icons\">\r\n            <li class=\"nav-item\" *ngIf=\"!userLoggedIn\">\r\n                <!--(mouseover)='openLoginBox(true)' (mouseleave)=\"closeBoxes()\" -->\r\n                <a class=\"nav-link var-colors\">\r\n                    Login\r\n                </a>\r\n                <div class=\"box-wpr\">\r\n                    <div class=\"popup-box\" id=\"login-box\">\r\n                        <!-- *ngIf=\"loginBoxStatus\" -->\r\n                        <div class=\"error-form-field\" *ngIf=\"loginErrorMsg\">\r\n                            <mdb-icon fas icon=\"exclamation-triangle\"></mdb-icon>&nbsp;{{loginErrorMsg}}\r\n                        </div>\r\n                        <form (submit)=\"login()\">\r\n                            <input class=\"form-control\" [class.input-error]=\"loginErrField === 'UN'\" type=\"text\" [(ngModel)]=\"username\" name=\"userName\" autocomplete=\"no\" placeholder=\"Username\"> <br>\r\n                            <input class=\"form-control\" [class.input-error]=\"loginErrField === 'PS'\" type=\"password\" [(ngModel)]=\"password\" name=\"password\" autocomplete=\"no\" placeholder=\"Password\"> <br>\r\n                            <button type=\"submit\" class=\"btn top-header-popup-btn\">Login</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"!userLoggedIn\">\r\n                <!-- (mouseover)='openRegisterBox(true)' (mouseleave)=\"closeBoxes()\" -->\r\n                <a class=\"nav-link var-colors\">\r\n                    Register\r\n                </a>\r\n                <div class=\"box-wpr\">\r\n                    <div class=\"popup-box\" id=\"register-box\">\r\n                        <!-- *ngIf=\"registerBoxStatus\" -->\r\n                        <div class=\"row\">\r\n                            <div class=\"registration-status\" *ngIf=\"userRegistered\">\r\n                                <span class=\"outer-span\">  Please activate you're account thought the link sent to you mail, Click \r\n                                    <span class=\"inner-span\" (click)=\"registerAgain()\">here</span> to register again !!!\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\" *ngIf=\"!userRegistered\">\r\n                            <div class=\"error-form-field\" *ngIf=\"registerErrMsg\">\r\n                                <mdb-icon fas icon=\"exclamation-triangle\"></mdb-icon>&nbsp;{{registerErrMsg}}\r\n                            </div>\r\n                            <form (submit)=\"register()\">\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'UN'\" type=\"text\" name=\"userName\" [(ngModel)]=\"customerRegister.userName\" autocomplete=\"no\" placeholder=\"Username\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'FN'\" type=\"text\" name=\"customerFirstName\" [(ngModel)]=\"customerRegister.customerFirstName\" autocomplete=\"no\" placeholder=\"First Name\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'LN'\" type=\"text\" name=\"lastName\" [(ngModel)]=\"customerRegister.customerLastName\" autocomplete=\"no\" placeholder=\"Last Name\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'EM'\" type=\"text\" name=\"emailAddress\" [(ngModel)]=\"customerRegister.emailAddress\" autocomplete=\"no\" placeholder=\"email\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'PH'\" type=\"tel\" maxlength=10 name=\"phone\" [(ngModel)]=\"customerRegister.phone\" autocomplete=\"no\" placeholder=\"phone\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'PS'\" type=\"password\" name=\"password\" [(ngModel)]=\"customerRegister.password\" autocomplete=\"no\" placeholder=\"password\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'RP'\" type=\"password\" name=\"repassword\" [(ngModel)]=\"customerRegister.repassword\" autocomplete=\"no\" placeholder=\"Reenter password\">\r\n                                </div>\r\n                                <div class=\"col-md-12 register-btn\">\r\n                                    <button type=\"submit\" class=\"btn top-header-popup-btn\">Register</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"pass-details\" *ngIf=\"!userRegistered\">\r\n                            <div>\r\n                                <span class=\"info-head\">Register Policy</span>\r\n                            </div>\r\n                            <div class=\"pass-body\">\r\n                                <ul class=\"pass-ul\">\r\n                                    <li> Firstname & lastname should contain only alphabet characters</li>\r\n                                    <li> Email should be valid</li>\r\n                                    <li> Choose a strong username and password </li>\r\n                                    <li> Your password must be between 8 and 25 characters. </li>\r\n                                    <li> Your password must contain at least one uppercase, or capital, letter (ex: A, B, etc.) </li>\r\n                                    <li> Your password must contain at least one lowercase letter. </li>\r\n                                    <li> Your password must contain at least one number digit (ex: 0, 1, 2, 3, etc.) </li>\r\n                                    <li> Your password must contain at least one special character\r\n                                        <pre>Example: !, @, #, $, %, ^, &, * </pre>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"userLoggedIn\">\r\n                <a class=\"nav-link var-colors\">\r\n                    <mdb-icon fab icon=\"earlybirds\"></mdb-icon>\r\n                    {{loggedInCustomer.customerLastName}} {{loggedInCustomer.customerFirstName}}\r\n                </a>\r\n                <div class=\"box-wpr\">\r\n                    <div class=\"popup-box\" id=\"user-box\">\r\n                        <div class=\"user-options\">\r\n                            <p class=\"user-option\" [routerLink]=\"['ui-account', 'edit']\">Account</p>\r\n                            <p class=\"user-option\">Orders</p>\r\n                            <p class=\"user-option\" (click)=\"logoutUser()\">Logout</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link var-colors\">\r\n                    <mdb-icon fab icon=\"facebook\"></mdb-icon>\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link var-colors\">\r\n                    <mdb-icon fab icon=\"twitter\"></mdb-icon>\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link var-colors\">\r\n                    <mdb-icon fab icon=\"instagram\"></mdb-icon>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </links>\r\n    <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n<!--/.Navbar-->","import { Component, OnInit, Renderer2, AfterViewInit, Input, ViewChild } from '@angular/core';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { ProductService } from 'src/app/Utilities/services/products/product.service';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\n\r\n@Component({\r\n  selector: 'app-best-selling-block',\r\n  templateUrl: './best-selling-block.component.html',\r\n  styleUrls: ['./best-selling-block.component.css']\r\n})\r\nexport class BestSellingBlockComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private productService: ProductService,\r\n    private productKartService: ProductKartService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private wishListService: WishListService\r\n  ) {}\r\n\r\n  components = [];\r\n\r\n  @Input() bestSellers: Product[] = [];\r\n  @Input() topProducts: Product[] = [];\r\n\r\n  productItem: Product;\r\n  showProduct: boolean = false;\r\n\r\n  isUserLoggedIn = false\r\n\r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n  \r\n  ngOnInit(): void {\r\n\r\n    this.isUserLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localCustomerLoggedIn) => this.isUserLoggedIn = localCustomerLoggedIn\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded) {\r\n          this.bestSellers.forEach(\r\n            (p: Product) => p.isWishListed = this.wishListService.isProductWishListed(p)\r\n          )\r\n          this.topProducts.forEach(\r\n            (p: Product) => p.isWishListed = this.wishListService.isProductWishListed(p)\r\n          )\r\n        }\r\n      }\r\n    )\r\n\r\n    if(this.bestSellers != null)\r\n      this.bestSellers.forEach(\r\n        p => this.productService.setPreViewValues(p)\r\n      )\r\n\r\n    if(this.topProducts != null)\r\n      this.topProducts.forEach(\r\n        p => this.productService.setPreViewValues(p)\r\n      )\r\n\r\n    this.components.push(this.bestSellers);\r\n    this.components.push(this.topProducts);\r\n  }\r\n\r\n  showTabs(tab: number) {\r\n    const carouselTabs = document.getElementsByClassName('best-seller-carousel-item');\r\n\r\n    const controlItems = document.getElementsByClassName('heading-control-item');\r\n\r\n    if (tab === 1) {\r\n      this.renderer.addClass(carouselTabs[0], 'active');\r\n      this.renderer.removeClass(carouselTabs[1], 'active');\r\n\r\n      this.renderer.addClass(controlItems[0], 'active');\r\n      this.renderer.removeClass(controlItems[1], 'active');\r\n    } else if (tab === 2) {\r\n      this.renderer.addClass(carouselTabs[1], 'active');\r\n      this.renderer.removeClass(carouselTabs[0], 'active');\r\n\r\n      this.renderer.addClass(controlItems[1], 'active');\r\n      this.renderer.removeClass(controlItems[0], 'active');\r\n    }\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const columnDivs = document.getElementsByClassName('best-seller-column-items');\r\n\r\n    if (this.bestSellers.length < 4) {\r\n      for (let i = 0; i < this.bestSellers.length; i++) {\r\n        this.renderer.removeClass(columnDivs[i], 'col-md-3');\r\n        this.renderer.addClass(columnDivs[i], 'col-md-' + (12 / this.bestSellers.length));\r\n      }\r\n    }\r\n\r\n    if (this.topProducts.length < 4) {\r\n      for (let i = this.bestSellers.length; i < (this.bestSellers.length + this.topProducts.length) ; i++) {\r\n        this.renderer.removeClass(columnDivs[i], 'col-md-3');\r\n        this.renderer.addClass(columnDivs[i], 'col-md-' + (12 / this.topProducts.length));\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n  showModal(product: Product) {\r\n    if(product.inStockQuantity > 0) {\r\n      this.productItem = product;\r\n      this.showProduct = true;\r\n      this.basicModal.show();\r\n    }\r\n  }\r\n\r\n  addAndRedirectToKart(product: Product) {\r\n    this.productKartService.addToKart(product.productID, 1, 'new')\r\n    this.productKartService.kartCountLoadedObserver.subscribe(\r\n      (kartCountLoaded) => {\r\n        if(kartCountLoaded)\r\n          this.router.navigate(['ui-kart'])\r\n      }\r\n    )\r\n  }\r\n\r\n  addItemToWishList(product: Product) {\r\n    this.wishListService.updateServerWishList(product)\r\n    product.isWishListed = true\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"full-screen wow animate lightSpeedIn\" data-wow-delay=\".5s\" data-wow-duration=\"1s\">\r\n    <div class=\"container\">\r\n        <div class=\"text-center\">\r\n            <h3 class=\"best-section-heading\">OUR BESTSELLING ITEMS</h3>\r\n            <img class=\"line-stars\" src=\"assets/line_star.png\">\r\n        </div>\r\n        <mdb-carousel class=\"carousel\" [isControls]=\"false\" class=\"carousel-multi-item multi-animation second-carousel\" [type]=\"'carousel-multi-item'\" [animation]=\"'slide'\" [interval]=\"40000\" [keyboard]=\"true\">\r\n            <div class=\"heading-controls\">\r\n                <span class=\"heading-control-item active\" (click)=\"showTabs(1)\">Best Sellers</span>\r\n                <span class=\"heading-control-item\" (click)=\"showTabs(2)\">Top Products</span>\r\n            </div>\r\n            <hr>\r\n            <mdb-carousel-item class=\"best-seller-carousel-item\" *ngFor=\"let item of components; let i = index\">\r\n                <div class=\"col-md-3 best-seller-column-items\" *ngFor=\"let card of item; let cardIndex = index\">\r\n                    <mdb-card class=\"my-1 best-seller-card\">\r\n                        <mdb-card-img class=\"best-seller-img animate-color-left-right\" [src]=\"card.imagePath\" alt=\"Card image cap\">\r\n                        </mdb-card-img>\r\n                        <mdb-card-body class=\"best-seller-card-body\">\r\n                            <p class=\"type-text\" [routerLink]=\"['/','ui-products', 'search']\" [queryParams]=\"{'categoryType': card.categoryName}\">{{card.categoryName}}</p>\r\n                            <mdb-card-title>\r\n                                <h4 class=\"card-title\" (click)=\"showModal(card)\">{{card.productName}}</h4>\r\n                            </mdb-card-title>\r\n\r\n                            <div class=\"sub-items\">\r\n                                <!-- Card footer -->\r\n                                <div class=\"card-footer\">\r\n                                    <span class=\"price\" style=\"float: left;\">{{card.price}}$</span>\r\n                                    <span *ngIf=\"isUserLoggedIn\" (click)=\"addItemToWishList(card)\" class=\"heart wish-list\" style=\"float: right;\">\r\n                                        <mdb-icon *ngIf=\"card.isWishListed\" title=\"Item already in wishlist\" fas icon=\"heart\"></mdb-icon>\r\n                                        <mdb-icon *ngIf=\"!card.isWishListed\" title=\"add to wishlist\" far icon=\"heart\"></mdb-icon>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <button mdbBtn class=\"buy-btn\" type=\"button\" (click)=\"addAndRedirectToKart(card)\" gradient=\"peach\" rounded=\"true\" mdbWavesEffect>Buy</button>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n            </mdb-carousel-item>\r\n        </mdb-carousel>\r\n    </div>\r\n</div>\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [productItem]='productItem' [allowBuy]=\"true\"></app-product-item>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CarouselImage } from 'src/app/Utilities/models/landing-page/carousel_image.model';\r\n\r\n@Component({\r\n  selector: 'app-carousel-block',\r\n  templateUrl: './carousel-block.component.html',\r\n  styleUrls: ['./carousel-block.component.css']\r\n})\r\nexport class CarouselBlockComponent implements OnInit {\r\n\r\n  @Input() carouselImages: CarouselImage[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    let count = 1;\r\n    if(this.carouselImages != null)\r\n      this.carouselImages.forEach(\r\n        c => c.imageUrl = 'assets/carousel_' + (count++) + '.jpg'\r\n      )\r\n  }\r\n}\r\n","<mdb-carousel class=\"carousel slide carousel-fade main-carousel\" [animation]=\"'fade'\">\r\n    <mdb-carousel-item *ngFor=\"let item of carouselImages\">\r\n        <div class=\"view w-100\">\r\n            <img class=\"d-block w-100 carousel-img\" [src]=\"item.imageUrl\" alt=\"First slide\">\r\n            <div class=\"mask rgba-black-light waves-light\" mdbWavesEffect></div>\r\n        </div>\r\n        <div class=\"carousel-caption wow animate\" [ngClass]=\"{'slideInLeft carousel-caption-left': item.imageOrientation=='RIGHT', 'slideInRight carousel-caption-right': item.imageOrientation=='LEFT', 'slideInUp carousel-caption-center': item.imageOrientation=='UP'}\">\r\n            <h3 class=\"h3-responsive\">{{item.imageDescription}}</h3>\r\n            <p class=\"sub-para\">{{item.secondSentence}}</p>\r\n        </div>\r\n    </mdb-carousel-item>\r\n</mdb-carousel>","import { Component, OnInit } from '@angular/core';\r\nimport { UILoaderService } from '../Utilities/services/ui-loader/ui-loader.service';\r\nimport { CarouselImage } from '../Utilities/models/landing-page/carousel_image.model';\r\nimport { Category } from '../Utilities/models/global-models/category.model';\r\nimport { ProductsCombo } from '../Utilities/models/landing-page/products-combo.model';\r\nimport { LandingPageService } from '../Utilities/services/landing-page/landing-page.service';\r\nimport { LandingPage } from '../Utilities/models/landing-page/landing-page.model';\r\nimport { Product } from '../Utilities/models/products/product.model';\r\n\r\n@Component({\r\n  selector: 'app-home-blocks',\r\n  templateUrl: './home-blocks.component.html',\r\n  styleUrls: ['./home-blocks.component.css']\r\n})\r\nexport class HomeBlocksComponent implements OnInit {\r\n\r\n  constructor(\r\n    private landingPageService: LandingPageService,\r\n    private uiLoaderService: UILoaderService\r\n  ) { }\r\n\r\n  landingPage: LandingPage = null;\r\n\r\n  \r\n  carouselImagesLoaded = false;\r\n  carouselImages: CarouselImage[] = [];\r\n\r\n  categoryModelsLoaded = false;\r\n  popularCategories: Category[] = [];\r\n\r\n  newArrivalsLoaded = false;\r\n  newArrivals: Product[] = [];\r\n  newArrivalsComboLoaded = false;\r\n  newArrivalsCombo: ProductsCombo[]= [];\r\n\r\n  bestSellingLoaded = false;\r\n  bestSellers: Product[] = [];\r\n\r\n  topProductsLoaded = false;\r\n  topProducts: Product[] = [];\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.landingPageService.landingPageLoaded.subscribe(\r\n      (localLoaded) => {\r\n\r\n        if(localLoaded) {\r\n          this.setAllModels()\r\n        }\r\n\r\n      }\r\n    )\r\n\r\n    this.setAllModels()\r\n\r\n  }\r\n\r\n  setAllModels() {\r\n    this.landingPage = this.landingPageService.getLandingPage();\r\n\r\n    if(this.landingPage != null) {\r\n\r\n      var welcomeCarousel = this.landingPage.welcomePageCarousel\r\n      if(welcomeCarousel != null) {\r\n        this.carouselImages = this.landingPage.welcomePageCarousel\r\n        this.carouselImagesLoaded = true\r\n      }\r\n\r\n      var popularcategories = this.landingPage.popularCategories\r\n      if(popularcategories != null) {\r\n        this.popularCategories = popularcategories\r\n        this.categoryModelsLoaded = true\r\n      }\r\n\r\n      var newArrivals = this.landingPage.newArrivals\r\n      if(newArrivals != null) {\r\n        this.newArrivals = newArrivals\r\n        this.newArrivalsLoaded = true\r\n      }\r\n\r\n      var productsCombo = this.landingPage.combos\r\n      if(productsCombo != null) {\r\n        this.newArrivalsCombo = productsCombo\r\n        this.newArrivalsComboLoaded = true\r\n      }\r\n\r\n      var topProducts = this.landingPage.topProducts\r\n      if(topProducts != null) {\r\n        this.topProducts = topProducts\r\n        this.topProductsLoaded = true\r\n      }\r\n      \r\n      var bestSellers = this.landingPage.bestSellers\r\n      if(bestSellers != null) {\r\n        this.bestSellers = bestSellers\r\n        this.bestSellingLoaded = true\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n}\r\n","<app-carousel-block *ngIf=\"carouselImagesLoaded\" [carouselImages]=\"carouselImages\"></app-carousel-block>\r\n<app-popular-collection-block *ngIf=\"categoryModelsLoaded\" [popularCategories]=\"popularCategories\"></app-popular-collection-block>\r\n<app-new-arrivals-block *ngIf=\"newArrivalsLoaded\" [newArrivals]=\"newArrivals\" [newArrivalsCombo]=\"newArrivalsCombo\"></app-new-arrivals-block>\r\n<app-best-selling-block *ngIf=\"bestSellingLoaded || topProductsLoaded\" [bestSellers]=\"bestSellers\" [topProducts]=\"topProducts\"></app-best-selling-block>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { ProductsCombo } from 'src/app/Utilities/models/landing-page/products-combo.model';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { ProductService } from 'src/app/Utilities/services/products/product.service';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\nimport { Router } from '@angular/router';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-new-arrivals-block',\r\n  templateUrl: './new-arrivals-block.component.html',\r\n  styleUrls: ['./new-arrivals-block.component.css']\r\n})\r\nexport class NewArrivalsBlockComponent implements OnInit {\r\n\r\n  @Input() newArrivals: Product[] = [];\r\n\r\n  @Input() newArrivalsCombo: ProductsCombo[] = [];\r\n\r\n  allProducts: Product[] = [];\r\n\r\n  productItem: Product;\r\n  showProduct: boolean = false;\r\n\r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n\r\n  isUserLoggedIn = false;\r\n  \r\n  constructor(\r\n    private productService: ProductService,\r\n    private productKartService: ProductKartService,\r\n    private wishListService: WishListService,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.isUserLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localCustomerLoggedIn) => this.isUserLoggedIn = localCustomerLoggedIn\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded) {\r\n          this.newArrivals.forEach(\r\n            (p: Product) => p.isWishListed = this.wishListService.isProductWishListed(p)\r\n          )\r\n        }\r\n      }\r\n    )\r\n    \r\n    if(this.newArrivals != null) {\r\n      this.newArrivals.forEach(\r\n        p => this.productService.setPreViewValues(p)\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  addAndRedirectToKart(product: Product) {\r\n    this.productKartService.addToKart(product.productID, 1, 'new')\r\n    this.productKartService.kartCountLoadedObserver.subscribe(\r\n      (kartCountLoaded) => {\r\n        if(kartCountLoaded)\r\n          this.router.navigate(['ui-kart'])\r\n      }\r\n    )\r\n  }\r\n  \r\n  showModal(product: Product) {\r\n    if(product.inStockQuantity > 0) {\r\n      this.productItem = product;\r\n      this.showProduct = true;\r\n      this.basicModal.show();\r\n    }\r\n  }\r\n\r\n  addItemToWishList(product: Product) {\r\n    this.wishListService.updateServerWishList(product)\r\n    product.isWishListed = true\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid new-arrival-container\">\r\n    <div class=\"block-heading\">\r\n        <h3 class=\"block-title\">NEW ARRIVALS</h3>\r\n        <img class=\"line-stars\" src=\"assets/line_star.png\">\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 new-arrival-item\" *ngFor=\"let item of newArrivals\">\r\n            <!--Card-->\r\n            <mdb-card class=\"new-arrival-card animate-color-left-right wow animate flipInX\" data-wow-duration=\"1s\" data-wow-delay=\"0.6s\" cascade=\"true\" narrower=\"true\">\r\n\r\n                <!--Card image-->\r\n                <div class=\"view view-cascade overlay waves-light\" mdbWavesEffect>\r\n                    <mdb-card-img class=\"new-arrival-img\" [src]=\"item.imagePath\"></mdb-card-img>\r\n                    <a>\r\n                        <div class=\"mask rgba-white-slight\"></div>\r\n                    </a>\r\n                </div>\r\n                <!--/Card image-->\r\n\r\n                <div class=\"new-arrival-body\">\r\n                    <mdb-card-body cascade=\"true\" class=\"text-center pb-0 px-0\">\r\n                        <!--Card content-->\r\n                        <h5 class=\"type-text\" [routerLink]=\"['/','ui-products', 'search']\" [queryParams]=\"{'categoryType': item.categoryName}\">{{item.categoryName}}</h5>\r\n                        <!--Title-->\r\n                        <h4 class=\"card-title\" (click)=\"showModal(item)\">{{item.productName}}</h4>\r\n\r\n                        <button mdbBtn class=\"buy-btn\" type=\"button\" (click)=\"addAndRedirectToKart(item)\" gradient=\"peach\" rounded=\"true\" mdbWavesEffect>Buy</button>\r\n                        <!-- <button mdbBtn class=\"btn btn-primary buy-btn\" mdbWavesEffect>Buy</button> -->\r\n\r\n                        <div class=\"sub-items\">\r\n                            <!-- Card footer -->\r\n                            <div class=\"card-footer\">\r\n                                <span class=\"card-price\">{{item.price}}$</span>\r\n                                <span class=\"heart\" *ngIf=\"isUserLoggedIn\" (click)=\"addItemToWishList(item)\">\r\n                                    <mdb-icon class=\"wish-list-icon\" *ngIf=\"item.isWishListed\" title=\"Item already in wishlist\" fas icon=\"heart\"></mdb-icon>\r\n                                    <mdb-icon class=\"wish-list-icon\" *ngIf=\"!item.isWishListed\" title=\"add to wishlist\" far icon=\"heart\"></mdb-icon>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mdb-card-body>\r\n                </div>\r\n                <!--/.Card content-->\r\n\r\n            </mdb-card>\r\n            <!--/.Card-->\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 new-arrival-set-item\" *ngFor=\"let item of newArrivalsCombo\">\r\n            <!--Card-->\r\n            <mdb-card class=\"new-arrival-set-card animate-color-left-right wow animate flipInY\" data-wow-duration=\"1s\" data-wow-delay=\"0.6s\" cascade=\"true\" narrower=\"true\">\r\n\r\n                <!--Card image-->\r\n                <div class=\"view view-cascade overlay waves-light\" mdbWavesEffect>\r\n                    <mdb-card-img class=\"new-arrival-img\" [src]=\"item.comboImagePath\"></mdb-card-img>\r\n                    <a>\r\n                        <div class=\"mask rgba-white-slight\"></div>\r\n                    </a>\r\n                </div>\r\n                <!--/Card image-->\r\n\r\n                <div class=\"new-arrival-body\">\r\n                    <mdb-card-body cascade=\"true\" class=\"text-center pb-0 px-0\">\r\n                        <!--Title-->\r\n                        <h4 class=\"set-card-title\">{{item.comboName}}</h4>\r\n                        <div class=\"text-left\">\r\n                            <h5 class=\"learn-more\">Learn More</h5>\r\n                        </div>\r\n                    </mdb-card-body>\r\n                </div>\r\n                <!--/.Card content-->\r\n\r\n            </mdb-card>\r\n            <!--/.Card-->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [productItem]='productItem' [allowBuy]=\"true\"></app-product-item>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Category } from 'src/app/Utilities/models/global-models/category.model';\r\n\r\n@Component({\r\n  selector: 'app-popular-collection-block',\r\n  templateUrl: './popular-collection-block.component.html',\r\n  styleUrls: ['./popular-collection-block.component.css']\r\n})\r\nexport class PopularCollectionBlockComponent implements OnInit {\r\n\r\n  @Input() popularCategories: Category[] = [];\r\n\r\n  constructor(\r\n    \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    let count = 1;\r\n    \r\n    if(this.popularCategories != null)\r\n      this.popularCategories.forEach(\r\n        (pc) => {\r\n          pc.viewName = 'Popular ' + pc.categoryName.substring(0, 1).toUpperCase() + pc.categoryName.substring(1).toLowerCase()\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid popular-container\">\r\n    <div class=\"block-heading\">\r\n        <h3 class=\"block-title\">POPULAR CATEGORIES</h3>\r\n        <img class=\"line-stars\" src=\"assets/line_star.png\">\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3 popular-item\" *ngFor=\"let item of popularCategories\">\r\n            <!--Card-->\r\n            <mdb-card class=\"popular-card animated wow slideInUp\" data-wow-duration=\"1s\" data-wow-delay=\"0.6s\" cascade=\"true\" narrower=\"true\">\r\n\r\n                <!--Card image-->\r\n                <div class=\"view view-cascade overlay waves-light\" mdbWavesEffect>\r\n                    <mdb-card-img class=\"popular-img\" [src]=\"item.imagePath\">\r\n                    </mdb-card-img>\r\n                </div>\r\n                <!--/Card image-->\r\n\r\n                <mdb-card-body [routerLink]=\"['/','ui-products', 'search']\" [queryParams]=\"{'categoryType': item.categoryName}\" cascade=\"true\" class=\"text-center popular-card-body\">\r\n                    <!--Card content-->\r\n                    <h5 class=\"type-text\">\r\n                        {{item.categoryName}}\r\n                    </h5>\r\n                    <!--Title-->\r\n                    <h4 class=\"card-title\">{{item.viewName}}</h4>\r\n                    <!--Text-->\r\n\r\n                    <mdb-card-text>\r\n                        <mdb-icon class=\"card-forward \" fas icon=\"angle-right\"></mdb-icon>\r\n                    </mdb-card-text>\r\n\r\n                </mdb-card-body>\r\n                <!--/.Card content-->\r\n\r\n            </mdb-card>\r\n            <!--/.Card-->\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Renderer2, AfterViewInit, Input, ElementRef } from '@angular/core';\r\nimport { NotificationService } from '../Utilities/services/notfications/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-notification-block',\r\n  templateUrl: './notification-block.component.html',\r\n  styleUrls: ['./notification-block.component.css']\r\n})\r\nexport class NotificationBlockComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(public notifService: NotificationService, private renderer: Renderer2) { }\r\n\r\n  @Input() notifId: string = '';\r\n  @Input() notifType: string = '';\r\n  @Input() notifMsg: string = '';\r\n\r\n  notifEle: HTMLElement;\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.notifId == null || this.notifId.length === 0)\r\n      this.notifId = '0';\r\n\r\n    if(this.notifType == null || this.notifType.length === 0)\r\n      this.notifType = this.notifService.NOTIF_INFO;\r\n\r\n    console.log('Notification Type ==> ', this.notifType)\r\n\r\n    this.notifService.removeNotificationObservable.subscribe(\r\n      (notifId: string) => {\r\n        var notifEle = document.getElementById(this.getId(notifId));\r\n        if(notifEle != null)\r\n          this.renderer.setStyle(notifEle, 'opacity', '0.1');\r\n      }\r\n    )\r\n\r\n    this.notifService.notificationReArrangeObservable.subscribe(\r\n      (check) => {\r\n        if(this.notifEle != null)\r\n          this.renderer.setStyle(this.notifEle, 'top', this.getTopPx());\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.notifEle = document.getElementById(this.getId(this.notifId));\r\n    this.renderer.setStyle(this.notifEle, 'opacity', '0.7');\r\n    this.renderer.setStyle(this.notifEle, 'top', this.getTopPx())\r\n  }\r\n\r\n  getId(id: string) {\r\n    return 'notificationComponent_' + id;\r\n  }\r\n\r\n  getTopPx() {\r\n    var len = (+this.notifId * 60) + 100;\r\n    return len + 'px';\r\n  }\r\n\r\n  checkNotifType() {\r\n    this.notifType === this.notifService.NOTIF_WARNING\r\n  }\r\n\r\n}\r\n","<div [id]=\"getId(notifId)\" class=\"notif-body\">\r\n    <div class=\"jw-notif\" [ngClass]=\"{'notif-info': notifType === notifService.NOTIF_INFO, \r\n                    'notif-success': notifType === notifService.NOTIF_SUCCESS, \r\n                    'notif-warning': notifType === notifService.NOTIF_WARNING, \r\n                    'notif-danger': notifType === notifService.NOTIF_DANGER}\">\r\n        <div class=\"notif-info-msg\">{{notifMsg}}</div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { of } from 'rxjs';\r\nimport { concatMap, delay, repeat } from 'rxjs/operators';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\n\r\n@Component({\r\n  selector: 'app-items-block',\r\n  templateUrl: './items-block.component.html',\r\n  styleUrls: ['./items-block.component.css']\r\n})\r\nexport class ItemsBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private wishListService: WishListService\r\n  ) { }\r\n\r\n  userLoggedIn = false;\r\n\r\n  @Input() allProducts: Product[] = [];\r\n\r\n  productItem: Product;\r\n  showProduct: boolean = false;\r\n\r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localUserLoggedIn) => this.userLoggedIn = localUserLoggedIn\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded)\r\n          this.allProducts.forEach(\r\n            p => p.isWishListed = this.wishListService.isProductWishListed(p)\r\n          )\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  getDiscountPrice(priceLocal: number, discountLocal: number) {\r\n\r\n    let finalAmount = 0;\r\n\r\n    if(discountLocal !== 0) {\r\n      finalAmount = priceLocal * (discountLocal / 100)\r\n      finalAmount = priceLocal - finalAmount;\r\n    }\r\n\r\n    finalAmount = Math.round(finalAmount * 100) / 100;\r\n\r\n    return finalAmount;\r\n  }\r\n\r\n  showModal(product: Product) {\r\n    if(product.inStockQuantity > 0) {\r\n      this.productItem = product;\r\n      this.showProduct = true;\r\n      this.basicModal.show();\r\n    }\r\n  }\r\n\r\n  addItemToWishList(product: Product) {\r\n    this.wishListService.updateServerWishList(product)\r\n    product.isWishListed = true\r\n  }\r\n\r\n}\r\n","<div class=\"container products-container untouchable\">\r\n    <div class=\"adj-container\">\r\n        <div class=\"row adj-row\">\r\n            <div class=\"col-md-3\" *ngFor=\"let product of allProducts\">\r\n                <!-- Card -->\r\n                <div class=\"card product-card animate wow slideInUp\">\r\n\r\n                    <!-- Card image -->\r\n                    <div class=\"view overlay\" mdbWavesEffect (click)=\"showModal(product)\">\r\n                        <img class=\"card-img-top product-img\" [src]=\"product.imagePath\" alt=\"Card image cap\">\r\n                        <a>\r\n                            <div *ngIf=\"product.inStockQuantity > 0\" class=\"mask search-plus-mask rgba-white-slight\">\r\n                                <mdb-icon fas icon=\"search-plus\" class=\"product-open-icon\"></mdb-icon>\r\n                            </div>\r\n                            <div *ngIf=\"product.inStockQuantity <= 0\" class=\"mask out-of-stock-mask rgba-white-slight\">\r\n                                <p class=\"product-stock-icon\">OUT OF STOCK</p>\r\n                            </div>\r\n                        </a>\r\n                        <div *ngIf=\"product.discount > 0\" class=\"discount-wrp\">\r\n                            <span>{{product.discount}}%</span>\r\n                            <img src=\"assets/discount.png\" class=\"discount-img\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Button -->\r\n                    <!-- <a class=\"btn-floating btn-action ml-auto mr-4 mdb-color lighten-3\" id=\"show-product\">\r\n                        <i class=\"fas fa-chevron-right pl-1 right-arrow\"></i>\r\n                    </a> -->\r\n\r\n                    <!-- Card content -->\r\n                    <div class=\"card-body product-card-body\">\r\n                        <!-- Title -->\r\n                        <h4 class=\"card-title product-title\">{{product.productName}}</h4>\r\n                    </div>\r\n\r\n                    <!-- Card footer -->\r\n                    <div class=\"rounded-bottom mdb-color lighten-3 footer footer-text-padding\">\r\n                        <div class=\"footer-items footer-left text-left\">\r\n                            <div class=\"price-real\" [class.text-strikethrough]=\"product.discount > 0\">\r\n                                <span class=\"real-price-text\">${{product.price}}</span>\r\n                            </div>\r\n                            <div class=\"price-discount\" *ngIf=\"product.discount > 0\">\r\n                                <span class=\"discount-price-text\">${{getDiscountPrice(product.price, product.discount)}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"userLoggedIn\" (click)=\"addItemToWishList(product)\" class=\"footer-items footer-right text-right\">\r\n                            <a class=\"white-text\">\r\n                                <mdb-icon class=\"wish-list-icon\" *ngIf=\"product.isWishListed\" title=\"Item already in wishlist\" fas icon=\"heart\"></mdb-icon>\r\n                                <mdb-icon class=\"wish-list-icon\" *ngIf=\"!product.isWishListed\" title=\"add to wishlist\" far icon=\"heart\"></mdb-icon>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- Card -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--Modal-->\r\n<!-- <button type=\"button\" mdbBtn color=\"primary\" class=\"relative waves-light\" (click)=\"basicModal.show()\" mdbWavesEffect>Launch demo modal</button> -->\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [productItem]='productItem' [allowBuy]=\"true\"></app-product-item>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { Router } from '@angular/router';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\n\r\n@Component({\r\n  selector: 'app-product-item',\r\n  templateUrl: './product-item.component.html',\r\n  styleUrls: ['./product-item.component.css']\r\n})\r\nexport class ProductItemComponent implements OnInit {\r\n\r\n  userloggedIn = false;\r\n\r\n  @Input() basicModal: ModalDirective;\r\n  @Input() productItem: Product;\r\n  @Input() allowBuy: boolean\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private productKartService: ProductKartService,\r\n    private wishListService: WishListService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userloggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (customerLoggedIn) => {\r\n        this.userloggedIn = customerLoggedIn\r\n      }\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded) {\r\n          this.productItem.isWishListed = this.wishListService.isProductWishListed(this.productItem)\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  closeModal() {\r\n    this.basicModal.hide();\r\n  }\r\n\r\n  adjustTotalPrice() {\r\n    this.productItem.totalAmount = Math.round((this.productItem.discountedPrice * this.productItem.cartQuantity) * 100) / 100;\r\n  }\r\n\r\n  addToKart() {\r\n    this.productKartService.addToKart(this.productItem.productID, this.productItem.cartQuantity, 'new')\r\n  }\r\n\r\n  adjustProductDetails(type: string) {\r\n    if (type === 'add' && this.productItem.cartQuantity < +this.productItem.inStockQuantity)\r\n      this.productItem.cartQuantity++;\r\n\r\n    if (type === 'minus' && +this.productItem.cartQuantity > 1)\r\n      this.productItem.cartQuantity--;\r\n\r\n    if (this.productItem.cartQuantity > 1 && this.productItem.cartQuantity <= this.productItem.inStockQuantity)\r\n      this.adjustTotalPrice()\r\n  }\r\n\r\n  checkExceeded() {\r\n    if (this.productItem.cartQuantity > this.productItem.inStockQuantity)\r\n      this.productItem.cartQuantity = this.productItem.inStockQuantity\r\n\r\n    if (this.productItem.cartQuantity <= 0)\r\n      this.productItem.cartQuantity = 1\r\n  }\r\n\r\n  addAndRedirectToKart() {\r\n    this.productKartService.addToKart(this.productItem.productID, this.productItem.cartQuantity, 'new')\r\n    this.productKartService.kartCountLoadedObserver.subscribe(\r\n      (kartCountLoaded) => {\r\n        if(kartCountLoaded)\r\n          this.router.navigate(['ui-kart'])\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"modal-content untouchable\">\r\n    <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"closeModal()\">\r\n            <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\">{{productItem.productName}}</h4>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"container-fluid product-container\">\r\n            <div class=\"row product-row\">\r\n                <div class=\"col-md-6 product-col\">\r\n                    <div class=\"product-view\">\r\n                        <img [src]=\"productItem.imagePath\" class=\"product-img\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 product-data\">\r\n                    <div class=\"product-details\">\r\n                        <div class=\"product-head\">\r\n                            <h2 class=\"product-title\">{{productItem.productName}}</h2>\r\n                        </div>\r\n                        <hr class=\"hr-head-met\">\r\n                        <div class=\"product-meta\">\r\n                            <div class=\"product-price-det untouchable\">\r\n                                <div class=\"meta-div meta-div-sm\">\r\n                                    <span class=\"code-label label-sm\">Code:</span>\r\n                                    <h5 class=\"code-value value-sm\">{{productItem.productID}}</h5>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-md\" *ngIf=\"allowBuy\">\r\n                                    <span class=\"quantity-label label-md\">Quantity:</span>\r\n                                    <div class=\"quantity-minus label-md\" [class.quantity-fade]=\"productItem.cartQuantity <= 1\" (click)=\"adjustProductDetails('minus')\">-</div>\r\n                                    <div class=\"quantity-value\">\r\n                                        <input type=\"number\" [max]='productItem.inStockQuantity' min=\"1\" (keyup)=\"checkExceeded()\" [(ngModel)]=\"productItem.cartQuantity\">\r\n                                    </div>\r\n                                    <div class=\"quantity-plus label-md\" [class.quantity-fade]=\"productItem.cartQuantity >= productItem.inStockQuantity\" (click)=\"adjustProductDetails('add')\">+</div>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-md\">\r\n                                    <span class=\"price-label label-md\">Price:</span>\r\n                                    <h5 class=\"price-value value-md\" [class.price-dis-can]=\"productItem.discount > 0\">${{productItem.price}}</h5>\r\n                                    <h5 class=\"price-value value-md disc-price-value\" *ngIf=\"productItem.discount > 0\">${{productItem.discountedPrice}}</h5>\r\n\r\n                                    <div *ngIf=\"productItem.discount > 0\" class=\"price-save\">\r\n                                        <span>{{productItem.discount}}% OFF</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-md\" *ngIf=\"productItem.cartQuantity > 1\">\r\n                                    <span class=\"price-label label-md\">Total Price:</span>\r\n                                    <h5 class=\"price-value value-md disc-price-value\">${{productItem.totalAmount}}</h5>\r\n                                </div>\r\n                            </div>\r\n                            <hr class=\"hr-price-det\">\r\n                            <div class=\"product-otr-det\">\r\n                                <div class=\"meta-div meta-div-sm det-sm\">\r\n                                    <span class=\"cat-label label-sm\">Category:</span>\r\n                                    <h5 class=\"cat-value value-sm det-val-sm\">{{productItem.categoryName}}</h5>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-sm det-sm\">\r\n                                    <span class=\"sub-cat-label label-sm\">Sub Category:</span>\r\n                                    <h5 class=\"sub-cat-value value-sm det-val-sm\">{{productItem.subCategoryName}}</h5>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-sm det-sm\">\r\n                                    <span class=\"mat-label label-sm\">Material:</span>\r\n                                    <h5 class=\"mat-value value-sm det-val-sm\">{{productItem.materialName}}</h5>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-sm det-sm\">\r\n                                    <span class=\"mat-pur-label label-sm\">Metal Purity:</span>\r\n                                    <h5 class=\"mat-pur-value value-sm det-val-sm\">{{productItem.metalPurityName}}</h5>\r\n                                </div>\r\n                            </div>\r\n                            <hr class=\"hr-det-imp\">\r\n                            <div class=\"product-imp\" *ngIf=\"allowBuy\">\r\n                                <button class=\"bag-btn\" mdbBtn type=\"button\" rounded=\"true\" mdbWavesEffect (click)=\"addToKart()\">Add to Bag</button>\r\n                                <button class=\"buy-btn\" mdbBtn type=\"button\" rounded=\"true\" mdbWavesEffect (click)=\"addAndRedirectToKart()\">Buy</button>\r\n                                <!-- <mdb-icon *ngIf=\"userloggedIn\" far icon=\"heart\" class=\"wish-list-icon\"></mdb-icon> -->\r\n                                <div class=\"wish-list-blk\">\r\n                                    <mdb-icon *ngIf=\"productItem.isWishListed\" class=\"wish-list-icon\" title=\"Item already in wishlist\" fas icon=\"heart\"></mdb-icon>\r\n                                    <mdb-icon *ngIf=\"!productItem.isWishListed\" class=\"wish-list-icon\" title=\"add to wishlist\" far icon=\"heart\"></mdb-icon>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { UserService } from '../Utilities/services/users/user.service';\r\nimport { UILoaderService } from '../Utilities/services/ui-loader/ui-loader.service';\r\nimport { ProductService } from '../Utilities/services/products/product.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Product } from '../Utilities/models/products/product.model';\r\nimport { GlobalModelsService } from '../Utilities/services/global/global-models.service';\r\nimport { ProductSearchService } from '../Utilities/services/products/product-search.service';\r\n\r\n@Component({\r\n  selector: 'app-product-blocks',\r\n  templateUrl: './product-blocks.component.html',\r\n  styleUrls: ['./product-blocks.component.css']\r\n})\r\nexport class ProductBlocksComponent implements OnInit {\r\n\r\n  query: string = '';\r\n\r\n  section: string = '';\r\n  categoryType: string = '';\r\n  catergorySubType: string = '';\r\n\r\n  allProducts: Product[] = [];\r\n  allProductsLoaded = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private uiLoaderService: UILoaderService,\r\n    private productService: ProductService,\r\n    private productSearchService: ProductSearchService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(\r\n      (params: Params) => {\r\n        console.log(params)\r\n        this.query = params['query']\r\n        this.section = params['section'];\r\n        this.categoryType = params['categoryType'];\r\n        this.catergorySubType = params['catergorySubType'];\r\n\r\n        // UI Loader is started before requesting products from user\r\n        console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + true)\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n        \r\n        if(this.query == null || this.query.length < 4)\r\n          this.productSearchService.searchForCriteria(this.section, this.categoryType, this.catergorySubType);\r\n        else {\r\n          this.productSearchService.searchForKeyword(this.query);\r\n        }\r\n      }\r\n    )\r\n    \r\n    this.productService.allProductsObserver.subscribe(\r\n      (allProductsLoadedLocal: boolean) => {\r\n        this.allProducts = this.productService.getAllProducts();\r\n        this.allProductsLoaded = allProductsLoadedLocal;\r\n\r\n        \r\n        if(this.allProducts.length == 0)\r\n          this.allProductsLoaded = false\r\n\r\n        // UI Loader is stopped as the response is received\r\n        console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + false)\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, false]);\r\n      }\r\n    )\r\n\r\n    this.productService.sortCurrentProductsObserver.subscribe(\r\n      (sortCriteria: string) => {\r\n        console.log('Sort products check ==> ', this.allProducts)\r\n        if(this.allProducts != null && this.allProducts.length > 0) {\r\n          \r\n          // UI Loader is started before sort started on products\r\n          console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + true)\r\n          this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n          \r\n          this.allProducts = this.productSearchService.sortProducts(this.allProducts, sortCriteria);\r\n          \r\n          // UI Loader is stopped as the products are sorted\r\n          console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + false)\r\n          this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, false]);\r\n        }\r\n      }\r\n    )\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"into-nav-div untouchable\" mdbWavesEffect>\r\n    <img class=\"intro-bg-img\" src=\"assets/products/main-bg/diamonds.jpg\">\r\n    <div class=\"nav-body\">\r\n        <div class=\"nav-breadcrumbs\">\r\n            <span class=\"nav-item\" [routerLink]=\"['/', 'home']\">Home</span>\r\n            <mdb-icon class=\"right-angle-icon\" fas icon=\"angle-double-right\" *ngIf=\"section\"></mdb-icon>\r\n            <span class=\"nav-item\" [routerLink]=\"['search']\" [queryParams]=\"{'section': section}\">{{section}}</span>\r\n            <mdb-icon class=\"right-angle-icon\" fas icon=\"angle-double-right\" *ngIf=\"categoryType\"></mdb-icon>\r\n            <span class=\"nav-item\" [routerLink]=\"['search']\" [queryParams]=\"{'categoryType': categoryType}\">{{categoryType}}</span>\r\n            <mdb-icon class=\"right-angle-icon\" fas icon=\"angle-double-right\" *ngIf=\"catergorySubType\"></mdb-icon>\r\n            <span class=\"nav-item\" [routerLink]=\"['search']\" [queryParams]=\"{'catergorySubType': catergorySubType}\">{{catergorySubType}}</span>\r\n        </div>\r\n        <div class=\"product-heading\">\r\n            <h3 *ngIf=\"!section && !categoryType && !catergorySubType\">SEARCH ITEMS</h3>\r\n            <h3 *ngIf=\"!categoryType && !catergorySubType\">{{section | uppercase}}</h3>\r\n            <h3 *ngIf=\"!catergorySubType\">{{categoryType | uppercase}}</h3>\r\n            <h3 *ngIf=\"catergorySubType\">{{catergorySubType | uppercase}}</h3>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"container-fluid products-container\">\r\n    <hr>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 col-filter-sort\">\r\n            <app-sort-filter-block *ngIf=\"allProductsLoaded\"></app-sort-filter-block>\r\n        </div>\r\n        <hr class=\"filter-products-divider\">\r\n        <div class=\"col-md-12 col-product-items\">\r\n            <app-items-block [allProducts]=\"allProducts\" *ngIf=\"allProductsLoaded\"></app-items-block>\r\n\r\n            <div class=\"container products-container sorry-text\" *ngIf=\"!allProductsLoaded\">\r\n                <h2>We're Sorry!</h2>\r\n                <h4>We can't seem find any product that match you're search...</h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from 'src/app/Utilities/services/products/product.service';\r\nimport { UILoaderService } from 'src/app/Utilities/services/ui-loader/ui-loader.service';\r\nimport { GlobalModelsService } from 'src/app/Utilities/services/global/global-models.service';\r\nimport { ProductSearchService } from 'src/app/Utilities/services/products/product-search.service';\r\n\r\n@Component({\r\n  selector: 'app-sort-filter-block',\r\n  templateUrl: './sort-filter-block.component.html',\r\n  styleUrls: ['./sort-filter-block.component.css']\r\n})\r\nexport class SortFilterBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private uiLoaderService: UILoaderService,\r\n    private globalModelsService: GlobalModelsService,\r\n    private productSearchService: ProductSearchService\r\n  ) { }\r\n\r\n  globalModelsLoaded = false\r\n\r\n  leftSteps = 4;\r\n  rightSteps = 4;\r\n  \r\n  priceDropMinIndex = 0;\r\n  priceDropMaxIndex = 4;\r\n\r\n  priceDropMin: string = '0';\r\n  priceDropMax: string = '100000';\r\n\r\n  _main_priceMinValues = ['0', '1500', '3000', '5000', '10000'];\r\n  _main_priceMaxValues = ['1500', '3000', '5000', '10000', '100000'];\r\n\r\n  priceMinValues = ['0', '1500', '3000', '5000', '10000'];\r\n  priceMaxValues = ['1500', '3000', '5000', '10000', '100000'];\r\n\r\n  allFilters: any = new Map<string, string[]>();\r\n\r\n  catergories = [];\r\n  materials = [];\r\n  section = [];\r\n  metalPurity = [];\r\n  offers = [];\r\n\r\n  allSort = ['Newly Listed', 'Price - High to Low', 'Price - Low to High', 'Discount'];\r\n\r\n  \r\n  selectedFilters = new Map<string, string[]>();\r\n  selectedSort: string = '';\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.globalModelsService.globalModelsLoaded) {\r\n      this.loadComponentData()\r\n      this.globalModelsLoaded = this.globalModelsService.globalModelsLoaded;\r\n    }\r\n\r\n    this.globalModelsService.globalModelsLoadedObservable.subscribe(\r\n      (globalModelsLoaded) => {\r\n        if(globalModelsLoaded) {\r\n          this.loadComponentData();\r\n        }\r\n        this.globalModelsLoaded = globalModelsLoaded;\r\n      }\r\n    )\r\n  }\r\n\r\n  loadComponentData() {\r\n    this.catergories = this.globalModelsService.getCategoryNamesAsList()\r\n    this.materials = this.globalModelsService.getMaterialNamesAsList()\r\n    this.section = this.globalModelsService.getSectionNamesAsList()\r\n    this.metalPurity = this.globalModelsService.getMetalPurtiesAsList()\r\n    this.offers = this.globalModelsService.getDiscountPercentsAsList()\r\n\r\n    console.log('Categories filter ==> ', this.catergories)\r\n\r\n    this.allFilters.set('Categories', this.catergories);\r\n    this.allFilters.set('Section', this.section);\r\n    this.allFilters.set('Materials', this.materials);\r\n    this.allFilters.set('Metal Purity', this.metalPurity);\r\n    this.allFilters.set('Offers', this.offers);\r\n\r\n    this.selectedSort = this.allSort[0];\r\n  }\r\n\r\n  checkIfSelected(key: string, checkValue: string) {\r\n    if (this.selectedFilters.size <= 0)\r\n      return false;\r\n\r\n    if(this.selectedFilters.has(key))\r\n      return this.selectedFilters.get(key).includes(checkValue);\r\n    \r\n    return false;\r\n\r\n  }\r\n\r\n  addToFilter(key: string, value: string) {\r\n    if(!this.selectedFilters.has(key)) {\r\n      this.selectedFilters.set(key, [value]);\r\n    }\r\n    else if(!this.checkIfSelected(key, value)) {\r\n      let values = this.selectedFilters.get(key);\r\n      values.push(value);\r\n      this.selectedFilters.set(key, values);\r\n    } else if(this.checkIfSelected(key, value)) {\r\n      this.deleteFromFilter(key, value);\r\n    }\r\n\r\n  }\r\n  \r\n  deleteFromFilter(key: string, value: string) {\r\n\r\n    if (this.selectedFilters.has(key)) {\r\n      let values = this.selectedFilters.get(key);\r\n\r\n      if(values.length === 1) {\r\n        this.selectedFilters.delete(key)\r\n      } else {\r\n        const index = values.indexOf(value, 0);\r\n        if (index > -1) {\r\n          values.splice(index, 1);\r\n        }\r\n        this.selectedFilters.set(key, values);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  deleteFilter(key: string) {\r\n    if (this.selectedFilters.has(key))\r\n      this.selectedFilters.delete(key)\r\n  }\r\n\r\n  resetAllFilters() {\r\n    this.selectedFilters = new Map<string, string[]>();\r\n    this.selectedSort = this.allSort[0];\r\n  }\r\n\r\n  setSortCriteria(item: string) {\r\n    this.selectedSort = item;\r\n    this.productService.sortCurrentProductsObserver.next(item);\r\n  }\r\n\r\n  validatePriceValues() {\r\n    const maxNumber = this._main_priceMaxValues.indexOf(this.priceDropMax, 0);\r\n    const minNumber = this._main_priceMinValues.indexOf(this.priceDropMin, 0);\r\n\r\n    this.priceMinValues = this._main_priceMinValues.slice(0, maxNumber+1)\r\n    this.priceMaxValues = this._main_priceMaxValues.slice(minNumber)\r\n  }\r\n\r\n  applyAllFilters() {\r\n\r\n    // UI Loader is started before calling for products\r\n    console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + true)\r\n    this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n    const globalProductDetails = this.productSearchService.prepareGlobalProductDetailsForFilter(\r\n      this.selectedFilters,\r\n      this.selectedSort,\r\n      this.priceDropMin,\r\n      this.priceDropMax\r\n    );\r\n\r\n    this.productService.fetchProductsBasedOnFilter(globalProductDetails);\r\n  }\r\n\r\n  getTitle(collection: string) {\r\n    return 'Remove ' + collection;\r\n  }\r\n\r\n}\r\n ","<div class=\"sort-and-filter-blk untouchable\" *ngIf=\"globalModelsLoaded\">\r\n    <div class=\"filter-box\">\r\n        <div class=\"category-brws\">\r\n            <div class=\"pull-left font-medium filterhead visible-md visible-lg\"><span>FILTER BY </span></div>\r\n            <div class=\"filters clearfix\">\r\n                <div class=\"dropdown pull-left list-first\">\r\n                    <button class=\"btn dropdown-toggle text-overflow\" type=\"button\" data-toggle=\"dropdown\">Price</button>\r\n                    <div class=\"price-dropdown dropdown-menu \">\r\n                        <ul class=\"padding\">\r\n                            <li class=\"font-medium visible-sm visible-xs\">Price</li>\r\n                            <li class=\"price-list\">\r\n                                <div id=\"price-amount\">\r\n                                    ${{priceDropMin}} - ${{priceDropMax}}\r\n                                </div>\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"margin-top price-select row\">\r\n                                    <div class=\"col-xs-6 padding-right-half\">\r\n                                        <select class=\"form-control\" [(ngModel)]=\"priceDropMin\" (change)=\"validatePriceValues()\">\r\n                                            <option [value]=\"item\" *ngFor=\"let item of priceMinValues\">{{item}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"col-xs-6 padding-left-half\">\r\n                                        <select class=\"form-control\" [(ngModel)]=\"priceDropMax\" (change)=\"validatePriceValues()\">\r\n                                            <option [value]=\"item\" *ngFor=\"let item of priceMaxValues\">{{item}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dropdown pull-left list-first\" *ngFor=\"let filterItem of allFilters | keyvalue; let i=index\">\r\n                    <button class=\"btn dropdown-toggle text-overflow\" type=\"button\" data-toggle=\"dropdown\" *ngIf=\"filterItem.value.length > 0\">\r\n                        {{filterItem.key}}\r\n                    </button>\r\n                    <div class=\"dropdown-menu \" *ngIf=\"filterItem.value.length > 0\">\r\n                        <ul class=\"padding\">\r\n                            <li *ngFor=\"let item of filterItem.value; let j=index\" (click)=\"addToFilter(filterItem.key, item)\">\r\n                                <label class=\"attributeSearchLabel\" [id]=\"item + i + j\">\r\n                                    <a href=\"Javascript:void(0);\" class=\"attrFilterURL\"\r\n                                        [ngClass]=\"{'font-small': !checkIfSelected(filterItem.key, item), 'bpfc': checkIfSelected(filterItem.key, item) , 'font-medium': checkIfSelected(filterItem.key, item) }\"\r\n                                        hrefurl=\"\">{{item}}</a>\r\n                                </label>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"pull-left\">\r\n                    <button class=\"btn btn-outline-dark apply-btn text-overflow\" (click)=\"applyAllFilters()\" type=\"button\" data-toggle=\"dropdown\">Apply</button>\r\n                    <button class=\"btn btn-outline-dark reset-btn text-overflow\" (click)=\"resetAllFilters()\" type=\"button\" data-toggle=\"dropdown\">Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"sort-box\">\r\n        <span class=\"pull-left sort-label font-small hidden-xs hidden-sm\">Sort By</span>\r\n        <div class=\"dropdown pull-right rmv-margin-right list-first\">\r\n            <button class=\"btn dropdown-toggle text-overflow hidden-xs hidden-sm sort-btn\" type=\"button\" data-toggle=\"dropdown\">\r\n                <span class=\"sortelement\">{{selectedSort}}</span>\r\n            </button>\r\n            <button class=\"btn dropdown-toggle text-overflow visible-xs visible-sm\" type=\"button\" data-toggle=\"dropdown\">\r\n                <span class=\"sortelement\">Sort By</span>\r\n            </button>\r\n            <div class=\"dropdown-menu\">\r\n                <ul class=\"padding-vertical\">\r\n                    <li *ngFor=\"let item of allSort; let i=index\" (click)=\"setSortCriteria(item)\">\r\n                        <a href=\"Javascript:void(0);\" class=\"sortby\" [class.active]=\"item==selectedSort\" id=\"popularity\">{{item}}</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n    <div class=\"refined-box-content\">\r\n        <div class=\"filter-items-box\">\r\n            <span class=\"font-semibold\" id=\"filterby-products\">FILTERED BY </span>\r\n            <div class=\"filters-top-selected\">\r\n                <span class=\"deleteFilterHead\">Price</span> :\r\n                <a class=\"deleteFilter\">\r\n                    ${{priceDropMin}} - ${{priceDropMax}}\r\n                </a>\r\n            </div>\r\n            <div class=\"filters-top-selected\" *ngFor=\"let filters of selectedFilters | keyvalue\">\r\n                <span class=\"deleteFilterHead deleteFilterKey\" [title]=\"getTitle(filters.key)\" (click)=\"deleteFilter(filters.key)\">{{filters.key}}</span> :\r\n                <a class=\"deleteFilter\" [title]=\"getTitle(item)\" *ngFor=\"let item of filters.value\">\r\n                    {{item}}\r\n                    <mdb-icon fas icon=\"times-circle\" class=\"delete-filter\" (click)=\"deleteFromFilter(filters.key, item)\"></mdb-icon>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"sort-item-box\">\r\n            <span class=\"font-semibold\" id=\"filterby-products\">SORTED BY </span> :\r\n            <div class=\"filters-top-selected\">\r\n                <span class=\"deleteFilterHead\">{{selectedSort}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../Utilities/services/users/user.service';\r\nimport { ProductKartService } from '../Utilities/services/products/orders/product-kart.service';\r\nimport { ProductKart } from '../Utilities/models/products/orders/product-kart.model';\r\nimport { UILoaderService } from '../Utilities/services/ui-loader/ui-loader.service';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { Product } from '../Utilities/models/products/product.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-kart',\r\n  templateUrl: './product-kart.component.html',\r\n  styleUrls: ['./product-kart.component.css']\r\n})\r\nexport class ProductKartComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private kartService: ProductKartService,\r\n    private uiLoaderService: UILoaderService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  disableBtn = false;\r\n  minusFade = false;\r\n  plusFade = false;\r\n\r\n  kartProducts: ProductKart[] = [];\r\n  kartLoaded = false;\r\n\r\n  totalKartAmount = 0;\r\n\r\n  isUserLoggedIn = false;\r\n\r\n  productItem: Product;\r\n\r\n  showProduct: boolean = false;\r\n  \r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.isUserLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localUserloggedIn) => {\r\n        this.isUserLoggedIn = localUserloggedIn\r\n\r\n        if(this.isUserLoggedIn) {\r\n          this.kartService.fetchUserKart()\r\n        } else {\r\n          this.router.navigate(['/', 'home'])\r\n        }\r\n\r\n      }\r\n    )\r\n\r\n    this.kartService.kartCountLoadedObserver.subscribe(\r\n      (kartCount: number) => {\r\n        if(kartCount > 0) {\r\n          this.disableBtn = false\r\n          this.kartProducts = this.kartService.getKartProducts()\r\n        \r\n          this.totalKartAmount = this.kartService.getTotalKartAmount()\r\n        } else {\r\n          this.totalKartAmount = 0\r\n          this.disableBtn = true\r\n        }\r\n\r\n        this.kartLoaded = kartCount > 0\r\n\r\n        if(this.kartProducts == null || this.kartProducts.length == 0) {\r\n          this.kartLoaded = false;\r\n          this.disableBtn = true\r\n        }\r\n\r\n        // Stops UI Loader for Kart Items\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, false]);\r\n      }\r\n    )\r\n\r\n    this.kartService.fetchUserKart()\r\n  }\r\n\r\n  openProductModel(product: Product) {\r\n    this.productItem = product\r\n    this.showProduct = true\r\n    this.basicModal.show()\r\n  }\r\n\r\n  deleteAllKart() {\r\n    if(this.kartProducts != null && this.kartProducts.length > 0) {\r\n      // Starts UI Loader for Kart Items\r\n      this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n      this.kartService.deleteKartItems(null, 0)\r\n    }\r\n  }\r\n\r\n  deleteKartItemByID(productId: string) {\r\n    this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n    this.kartService.deleteKartItems(productId, 0)\r\n  }\r\n\r\n  adjustProductDetails(type: string, index: number) {\r\n    this.minusFade = this.plusFade = false\r\n    if(type === 'add') {\r\n      this.kartProducts[index].product.cartQuantity++;\r\n    } else if(type === 'minus') {\r\n      this.kartProducts[index].product.cartQuantity--;\r\n    }\r\n\r\n    if (this.kartProducts[index].product.cartQuantity > this.kartProducts[index].product.inStockQuantity) {\r\n      this.kartProducts[index].product.cartQuantity = this.kartProducts[index].product.inStockQuantity\r\n      this.plusFade = true;\r\n    }\r\n\r\n    if (this.kartProducts[index].product.cartQuantity <= 0) {\r\n      this.kartProducts[index].product.cartQuantity = 1\r\n      this.minusFade = true;\r\n    }\r\n\r\n    this.kartProducts[index].quantity = this.kartProducts[index].product.cartQuantity\r\n    \r\n    this.adjustKartList()\r\n  }\r\n\r\n  adjustKartList() {\r\n    this.totalKartAmount = 0\r\n    this.kartProducts.forEach(\r\n      (kp) => {\r\n          let amount = this.kartService.getTotalAmount(kp.product.discountedPrice, kp.quantity)\r\n          this.totalKartAmount += amount\r\n          kp.product.totalAmount = amount\r\n      }\r\n    )\r\n    this.totalKartAmount = Math.round(this.totalKartAmount * 100) / 100;\r\n  }\r\n\r\n  updateKartAndCheckout() {\r\n\r\n    this.kartService.updateKartProducts(this.kartProducts).subscribe (\r\n      (localKartProducts: ProductKart[]) => {\r\n          this.router.navigate(['/', 'ui-checkout']).catch(\r\n            error => {\r\n              console.log(\"error while redirecting to checkout --> \", error)\r\n            }\r\n          )\r\n      },\r\n      error => {\r\n        this.kartService.kartHandleError(error)\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid kart-container untouchable\">\r\n    <div class=\"cont-breadcrumbs\">\r\n        <span class=\"nav-item\" [routerLink]=\"['/', 'home']\">Home</span>\r\n        <mdb-icon class=\"right-angle-icon\" fas icon=\"angle-double-right\"></mdb-icon>\r\n        <span class=\"nav-item\">Cart</span>\r\n    </div>\r\n    <div class=\"kart-heading-block\">\r\n        <h2>Shopping Cart Details</h2>\r\n    </div>\r\n    <hr>\r\n    <div class=\"row kart-row\">\r\n        <div class=\"col-md-8 p-col animate wow slideInLeft\">\r\n            <div class=\"del-entire-cart\">\r\n                <button mdbBtn class=\"btn j-btn j-btn-allow del-btn\" color=\"danger\" [disabled]=\"disableBtn\" (click)=\"deleteAllKart()\" mdbWavesEffect>Remove All</button>\r\n            </div>\r\n            <div class=\"all-kart-pro\" *ngIf=\"kartLoaded\">\r\n                <!-- News jumbotron -->\r\n                <div class=\"jumbotron text-center hoverable p-4 kart-pro animate wow slideInUp\" *ngFor=\"let item of kartProducts; let i = index\">\r\n                    <!-- Grid row -->\r\n                    <div class=\"row\">\r\n                        <!-- Grid column -->\r\n                        <div class=\"col-md-4 offset-md-1 mx-3 my-3\">\r\n                            <!-- Featured image -->\r\n                            <div class=\"view overlay waves-light\" mdbWavesEffect>\r\n                                <img [src]=\"item.product.imagePath\" class=\"img-fluid kart-img\" [alt]=\"item.product.productName\">\r\n                            </div>\r\n                        </div>\r\n                        <!-- Grid column -->\r\n                        <!-- Grid column -->\r\n                        <div class=\"col-md-7 text-md-left ml-3 mt-3\">\r\n\r\n                            <!-- Excerpt -->\r\n                            <a [routerLink]=\"['/', 'ui-products']\" [queryParams]=\"{'categoryType': item.product.categoryName}\" class=\"green-text\">\r\n                                <h6 class=\"h6 pb-1\">\r\n                                    <mdb-icon fas icon=\"folder-open\" class=\"pr-1\"></mdb-icon>{{item.product.categoryName}}\r\n                                </h6>\r\n                            </a>\r\n\r\n                            <h4 class=\"h4 prod-name\" (click)=\"openProductModel(item.product)\">{{item.product.productName}}</h4>\r\n                            <h6 class=\"h6 mb-3 prod-code\">code: {{item.product.productID}}</h6>\r\n\r\n                            <span class=\"font-weight-normal prod-price\">price: \r\n                                <span class=\"grey-price\"><strong>{{item.product.price}}$</strong></span>\r\n                            <span class=\"disc-price\"><strong>{{item.product.discountedPrice}}$</strong></span>\r\n                            </span>\r\n                            <span class=\"font-weight-normal prod-price\">InStock: \r\n                                <span class=\"stock-amt\"><strong>{{item.product.inStockQuantity}}</strong></span>\r\n                            </span>\r\n\r\n                            <div class=\"input-blk\">\r\n                                <span class=\"quantity-minus label-md\" [class.quantity-fade]=\"minusFade\" (click)=\"adjustProductDetails('minus', i)\">-</span>\r\n                                <input class=\"qty-input-number\" type=\"number\" [value]=\"item.quantity\" disabled>\r\n                                <span class=\"quantity-plus label-md\" [class.quantity-fade]=\"plusFade\" (click)=\"adjustProductDetails('add', i)\">+</span>\r\n                            </div>\r\n\r\n                            <a mdbBtn class=\"del-item-btn\" color=\"warning\" (click)=\"deleteKartItemByID(item.product.productID)\" mdbWavesEffect>Delete</a>\r\n\r\n\r\n                            <a *ngIf=\"isUserLoggedIn\" mdbBtn color=\"success\" class=\"wish-list-btn\" mdbWavesEffect>Move to Wishlist</a>\r\n\r\n                        </div>\r\n                        <!-- Grid column -->\r\n                    </div>\r\n                    <!-- Grid row -->\r\n                </div>\r\n            </div>\r\n            <!-- News jumbotron -->\r\n            <div class=\"no-kart\" *ngIf=\"!kartLoaded\">\r\n                <span class=\"no-kart-items\">Please add items in the cart to see here..!!</span>\r\n                <img src=\"assets/empty_kart.png\" width=\"250px\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4 s-col animate wow slideInRight\">\r\n            <button [disabled]=\"disableBtn\" (click)=\"updateKartAndCheckout()\" mdbBtn mdbWavesEffect class=\"btn place-order\">Checkout</button>\r\n            <div class=\"kart-summary-block\">\r\n                <div class=\"kart-summ-head\">\r\n                    <h2>Cart Summary:</h2>\r\n                </div>\r\n                <hr>\r\n                <div class=\"kart-amt-summ\">\r\n                    <div class=\"amt-summ-item\">\r\n                        <span class=\"item-label summ-item-label\">Sub Total:</span>\r\n                        <div class=\"sum-val-adj\">\r\n                            <span class=\"item-val summ-item-val\">${{totalKartAmount}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"amt-summ-item\">\r\n                        <span class=\"item-label summ-item-label\">Shipping:</span>\r\n                        <div class=\"sum-val-adj\">\r\n                            <span class=\"item-val summ-item-val\">Free</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n                <div class=\"kart-amt-tot\">\r\n                    <span class=\"item-label summ-item-label\">Total Amount:</span>\r\n                    <div class=\"sum-val-adj\">\r\n                        <span class=\"item-val summ-item-val\" style=\"font-weight: 900;\">${{totalKartAmount}} /-</span>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n                <div class=\"kart-promo-block\">\r\n                    <div class=\"pro-det\">\r\n                        <span class=\"item-label coupon-label\">Apply Coupon</span>\r\n                        <input class=\"coupon-input\" type=\"text\">\r\n                        <button class=\"btn coupon-btn\" disabled>Apply</button>\r\n                    </div>\r\n                </div>\r\n                <button [disabled]=\"disableBtn\" (click)=\"updateKartAndCheckout()\" mdbBtn mdbWavesEffect class=\"btn place-order\">Checkout</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [allowBuy]=\"false\" [productItem]='productItem'>\r\n        </app-product-item>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Product } from '../Utilities/models/products/product.model';\r\nimport { WishListService } from '../Utilities/services/products/orders/wish-list.service';\r\nimport { WishList } from '../Utilities/models/products/orders/wish-list.model';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\n\r\n@Component({\r\n  selector: 'app-wishlist-block',\r\n  templateUrl: './wishlist-block.component.html',\r\n  styleUrls: ['./wishlist-block.component.css']\r\n})\r\nexport class WishlistBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private wishListService: WishListService\r\n  ) { }\r\n\r\n  isUserLoggedIn = false\r\n\r\n  wishList: WishList;\r\n  wishListLoaded = false;\r\n\r\n  disableBtn = true\r\n\r\n  productItem: Product;\r\n  showProduct: boolean = false;\r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoadedLocal) => {\r\n        if(wishListLoadedLocal)\r\n          this.wishList = this.wishListService.getWishList()\r\n\r\n        this.disableBtn = !wishListLoadedLocal\r\n        this.wishListLoaded = wishListLoadedLocal\r\n      }\r\n    )\r\n\r\n    this.wishListService.fetchUserWishList()\r\n  }\r\n\r\n  openProductModel(product: Product) {\r\n    this.productItem = product\r\n    this.showProduct = true\r\n    this.basicModal.show()\r\n  }\r\n\r\n  deleteItemByID(productId: number) {\r\n    if(this.wishList != null && this.wishList.wishListProducts != null && this.wishList.wishListProducts.length > 1)\r\n      this.wishListService.deleteProductFromWishList(productId)\r\n    else if(this.wishList != null && this.wishList.wishListProducts != null && this.wishList.wishListProducts.length == 1)\r\n      this.deleteAllItems()\r\n  }\r\n\r\n  deleteAllItems() {\r\n    if(this.wishList != null && this.wishList.wishListProducts != null && this.wishList.wishListProducts.length > 0) \r\n      this.wishListService.deleteAllItems()\r\n  }\r\n\r\n}\r\n","<div class=\"wl-con\">\r\n    <div class=\"wl-head\">\r\n        <span>Your Wishlist</span>\r\n    </div>\r\n    <div class=\"wl-block\">\r\n        <div class=\"wlb-body\">\r\n            <div class=\"del-wish-list\">\r\n                <button mdbBtn class=\"btn j-btn j-btn-allow del-btn\" color=\"danger\" [disabled]=\"disableBtn\" (click)=\"deleteAllItems()\" mdbWavesEffect>Remove All</button>\r\n            </div>\r\n            <div class=\"row wlb-row\">\r\n                <div class=\"col-md-10 wlb-item\">\r\n                    <div class=\"wlb-item-inr\" *ngIf=\"wishListLoaded\">\r\n                        <div class=\"jumbotron text-center hoverable wish-list-pro animate wow slideInUp\" *ngFor=\"let item of wishList.wishListProducts; let i = index\">\r\n                            <!-- Grid row -->\r\n                            <div class=\"row\">\r\n                                <!-- Grid column -->\r\n                                <div class=\"col-md-4 offset-md-1 mx-3 my-3\">\r\n                                    <!-- Featured image -->\r\n                                    <div class=\"view overlay waves-light\" mdbWavesEffect>\r\n                                        <img [src]=\"item.imagePath\" class=\"img-fluid wish-list-img\" [alt]=\"item.productName\">\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Grid column -->\r\n                                <!-- Grid column -->\r\n                                <div class=\"col-md-7 text-md-left ml-3 mt-3\">\r\n\r\n                                    <!-- Excerpt -->\r\n                                    <a [routerLink]=\"['/', 'ui-products']\" [queryParams]=\"{'categoryType': item.categoryName}\" class=\"green-text\">\r\n                                        <h6 class=\"h6 pb-1\">\r\n                                            <mdb-icon fas icon=\"folder-open\" class=\"pr-1\"></mdb-icon>{{item.categoryName}}\r\n                                        </h6>\r\n                                    </a>\r\n\r\n                                    <h4 class=\"h4 prod-name\" (click)=\"openProductModel(item)\">{{item.productName}}</h4>\r\n                                    <h6 class=\"h6 mb-3 prod-code\">code: {{item.productID}}</h6>\r\n\r\n                                    <span class=\"font-weight-normal prod-price\">price: \r\n                                        <span class=\"grey-price\"><strong>{{item.price}}$</strong></span>\r\n                                    <span class=\"disc-price\"><strong>{{item.discountedPrice}}$</strong></span>\r\n                                    </span>\r\n                                    <span class=\"font-weight-normal prod-price\">InStock: \r\n                                        <span class=\"stock-amt\"><strong>{{item.inStockQuantity}}</strong></span>\r\n                                    </span>\r\n\r\n                                    <a mdbBtn class=\"del-item-btn\" color=\"warning\" (click)=\"deleteItemByID(item.productID)\" mdbWavesEffect>Delete</a>\r\n\r\n\r\n                                    <a *ngIf=\"isUserLoggedIn\" mdbBtn color=\"success\" class=\"wish-list-btn\" mdbWavesEffect>Move to Wishlist</a>\r\n\r\n                                </div>\r\n                                <!-- Grid column -->\r\n                            </div>\r\n                            <!-- Grid row -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [allowBuy]=\"true\" [productItem]='productItem'>\r\n        </app-product-item>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}