{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Utilities/models/products/filter-sort-model/global-product-details.model.ts","webpack:///src/app/Utilities/models/products/filter-sort-model/product-filter.model.ts","webpack:///src/app/Utilities/models/products/filter-sort-model/product-sort.model.ts","webpack:///src/app/Utilities/models/products/orders/charge-request.mode.ts","webpack:///src/app/Utilities/models/users/address.model.ts","webpack:///src/app/Utilities/models/users/customer-register.model.ts","webpack:///src/app/Utilities/models/users/customer.model.ts","webpack:///src/app/Utilities/models/users/guest.model.ts","webpack:///src/app/Utilities/services/error/error-handler.service.ts","webpack:///src/app/Utilities/services/global/global-models.service.ts","webpack:///src/app/Utilities/services/landing-page/header.service.ts","webpack:///src/app/Utilities/services/landing-page/landing-page.service.ts","webpack:///src/app/Utilities/services/notfications/notification.service.ts","webpack:///src/app/Utilities/services/products/orders/check-out.service.ts","webpack:///src/app/Utilities/services/products/orders/product-kart.service.ts","webpack:///src/app/Utilities/services/products/orders/wish-list.service.ts","webpack:///src/app/Utilities/services/products/product-search.service.ts","webpack:///src/app/Utilities/services/products/product-util.service.ts","webpack:///src/app/Utilities/services/products/product-wishlist.service.ts","webpack:///src/app/Utilities/services/products/product.service.ts","webpack:///src/app/Utilities/services/ui-loader/ui-loader.service.ts","webpack:///src/app/Utilities/services/users/address.service.ts","webpack:///src/app/Utilities/services/users/login.service.ts","webpack:///src/app/Utilities/services/users/logout.service.ts","webpack:///src/app/Utilities/services/users/user.service.ts","webpack:///src/app/Utilities/services/validation/validation.service.ts","webpack:///src/app/account-block/account-block.component.ts","webpack:///src/app/account-block/account-block.component.html","webpack:///src/app/account-block/edit-address/edit-address.component.ts","webpack:///src/app/account-block/edit-address/edit-address.component.html","webpack:///src/app/account-block/edit-personal-details/edit-personal-details.component.ts","webpack:///src/app/account-block/edit-personal-details/edit-personal-details.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/check-out/check-out.component.ts","webpack:///src/app/check-out/check-out.component.html","webpack:///src/app/check-out/stripe-block/guest-details-block/guest-details-block.component.ts","webpack:///src/app/check-out/stripe-block/guest-details-block/guest-details-block.component.html","webpack:///src/app/check-out/stripe-block/stripe-block.component.html","webpack:///src/app/check-out/stripe-block/stripe-block.component.ts","webpack:///src/app/check-out/stripe-block/user-address-block/user-address-block.component.ts","webpack:///src/app/check-out/stripe-block/user-address-block/user-address-block.component.html","webpack:///src/app/check-out/summary-block/summary-block.component.ts","webpack:///src/app/check-out/summary-block/summary-block.component.html","webpack:///src/app/contact-block/contact-block.component.ts","webpack:///src/app/contact-block/contact-block.component.html","webpack:///src/app/headers/bottom-header/bottom-header.component.ts","webpack:///src/app/headers/bottom-header/bottom-header.component.html","webpack:///src/app/headers/headers.component.ts","webpack:///src/app/headers/headers.component.html","webpack:///src/app/headers/top-header/top-header.component.ts","webpack:///src/app/headers/top-header/top-header.component.html","webpack:///src/app/home-blocks/best-selling-block/best-selling-block.component.ts","webpack:///src/app/home-blocks/best-selling-block/best-selling-block.component.html","webpack:///src/app/home-blocks/carousel-block/carousel-block.component.ts","webpack:///src/app/home-blocks/carousel-block/carousel-block.component.html","webpack:///src/app/home-blocks/home-blocks.component.ts","webpack:///src/app/home-blocks/home-blocks.component.html","webpack:///src/app/home-blocks/new-arrivals-block/new-arrivals-block.component.ts","webpack:///src/app/home-blocks/new-arrivals-block/new-arrivals-block.component.html","webpack:///src/app/home-blocks/popular-collection-block/popular-collection-block.component.ts","webpack:///src/app/home-blocks/popular-collection-block/popular-collection-block.component.html","webpack:///src/app/notification-block/notification-block.component.ts","webpack:///src/app/notification-block/notification-block.component.html","webpack:///src/app/product-blocks/items-block/items-block.component.ts","webpack:///src/app/product-blocks/items-block/items-block.component.html","webpack:///src/app/product-blocks/items-block/product-item/product-item.component.ts","webpack:///src/app/product-blocks/items-block/product-item/product-item.component.html","webpack:///src/app/product-blocks/product-blocks.component.ts","webpack:///src/app/product-blocks/product-blocks.component.html","webpack:///src/app/product-blocks/sort-filter-block/sort-filter-block.component.ts","webpack:///src/app/product-blocks/sort-filter-block/sort-filter-block.component.html","webpack:///src/app/product-kart/product-kart.component.ts","webpack:///src/app/product-kart/product-kart.component.html","webpack:///src/app/wishlist-block/wishlist-block.component.ts","webpack:///src/app/wishlist-block/wishlist-block.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","GlobalProductDetails","facets","sortBy","ProductFilter","name","enabled","count","min_price","max_price","ProductSort","ChargeRequest","description","amount","Currency","stripeEmail","stripeToken","addressID","guestModel","Address","customerID","street","apartmentNumber","city","state","country","zipCode","defaultBilling","defaultShipping","version","CustomerRegister","customerFirstName","customerLastName","phone","emailAddress","isGuest","userName","password","repassword","Customer","Guest","guestID","firstName","lastName","streetAddress","ErrorService","uiLoaderService","notifService","errMsg","error","console","log","loaderErrorObservable","next","pushNotification","NOTIF_DANGER","GlobalModelsService","categories","subCategory","collections","discounts","materials","metalPurities","sections","globalModelsLoaded","globalModelsLoadedObservable","landingPage","globalCategoryList","globalCollectionList","globalSectionList","globalSubCategory","globalMaterialList","globalMetalPurityList","globalDiscountList","length","categoryID","category","forEach","c","subCategoryID","sc","collectionID","collection","CollectionID","discountID","discount","d","materialID","material","m","metalPurityID","metalPurity","sectionID","section","s","categoryNames","push","categoryName","subCategoryNames","subCategoryName","collectionNames","collectionName","discountList","discountType","materialNames","materialType","metalPurityNames","purity","sectionName","subCategories","getCategoryByID","HeaderService","http","errorService","womens","Map","mens","kids","headersLoaded","headers","navBar","Object","key","JSON","parse","toLowerCase","getObjectForMap","localMap","localHeader","catKey","set","slice","LandingPageService","headerService","globalService","LANDING_URL","landingPageLoaded","check","get","subscribe","response","assignGlobalModels","assignHeaders","err","logError","NotificationService","notifId","NOTIF_INFO","NOTIF_SUCCESS","NOTIF_WARNING","notificationObservable","removeNotificationObservable","notificationReArrangeObservable","type","message","getNewId","CheckOutService","PYMT_API","checkOutObservable","paymentSuccessObservable","checkOut","chargeRequest","post","pushPaymentNotification","status","msg","ProductKartService","productService","KART_API","kartProducts","kartCountLoadedObserver","totalKartAmount","kartCount","localKartProducts","setPreViewForKartProducts","kartHandleError","pk","setPreViewValues","product","quantity","inStockQuantity","cartQuantity","getTotalAmount","discountedPrice","totalAmount","finalAmount","Math","round","productId","cartQty","localProdId","pushAddNotification","localApi","pushDeletNotification","startsWith","put","WishListService","productUtilService","WISHLIST_API","wishListLoaded","wishListLoadedObservable","localWishList","successResponse","errorResponse","wishList","isWishListed","productID","wishListProducts","i","wishListDeleted","p","ProductSearchService","categoryType","catergorySubType","globalProductDetails","prepareGlobalProductDetails","fetchProductsBasedOnFilter","query","fetchProductsBasedOnKeyword","allProducts","sortCriteria","sort","product1","product2","updateDate","price","filters","priceFilter","categoryFilter","subCategoryFilter","sectionFilter","globalProduct","selectedFilters","selectedSort","priceMin","priceMax","filterValue","filterKey","filter","materialFilter","purityFilter","offersFilter","ProductUtilService","globalModalsService","getSubCategoryByID","getSectionByID","getCollectionByID","getMaterialByID","materialName","getMetalPurityByID","metalPurityName","getDiscountByID","percentage","getDiscountPrice","ProductWishListService","ProductService","wishListService","PRODUCTS_URL","productsPage","productsForPage","allProductsObserver","sortCurrentProductsObserver","localProducts","onSuccess","onError","isProductWishListed","UILoaderService","totalLoaders","apiLoadingScreen","routeLoadingScreen","loginLoaderScreen","loaderObservable","AddressService","userService","ADDR_URL","userAddresses","addressLoadedObserver","customerLoggedIn","customerDetails","getCustomerDetails","addresses","localAddr","stringify","address","fetchUserAddress","LoginService","LOGIN_API","username","responseType","localStorage","setItem","fetchLogginCustomer","formData","FormData","append","customer","setLoggedInCustomer","LogoutService","kartService","BASE_CUSTOMER_API","custId","logoutHandler","removeItem","informAllServices","UserService","customerLoggedInObserver","customerRegisteredObserver","customerRegister","pipe","fetchUserKart","localCustomer","pushLoginNotification","fetchUserWishList","user","notif","localCust","oldPassword","newPassword","passModel","pushPasswordNotification","includes","ValidationService","TEXT_REGEX","USER_REGEX","EMAIL_REGEX","PASS_REGEX","NUM_REGEX","PHN_REGEX","ADDR_REGEX","value","max","min","matches","trim","match","AccountBlockComponent","router","userLoggedIn","navigate","selector","templateUrl","styleUrls","EditAddressComponent","validationService","addressService","fieldMax","fieldMin","showingCollapse","userViewAddresses","userEditAddresses","addressLoaded","errorMsg","errorField","editAddress","getUserAddresses","addressFrom","hide","show","validateAddressFields","saveAddress","validateAddress","EditPersonalDetailsComponent","customerDetailsError","customerErrorField","passwordError","passwordErrorField","rePassword","localUserStatus","bkpCustomer","checkValidity","changeUserDetails","validateText","validateEmail","validatePhone","validatePassword","changeUserPassword","routes","path","pathMatch","redirectTo","component","children","AppRoutingModule","forRoot","useHash","imports","AppComponent","landingPageService","ngxService","renderer","routeUILoaderType","apiUILoaderType","loginUILoaderType","uiLoaderColor","showNotification","notificationType","notificationMessage","events","window","scrollTo","navigationInterceptor","startLoader","setTheObservables","checkCustomerLogin","fetchAllInfo","loader","setStyle","document","documentElement","stopLoader","setTimeout","disable","stopAllLoader","notifDetails","splice","arrangeNotificationItems","loaderName","hasRunningTask","getLoader","loaderId","index","findIndex","x","el","decrementNotificationCount","event","url","AppModule","declarations","providers","bootstrap","CheckOutComponent","checkOutService","stripePublicKey","currency","checkOutCompleted","checkOutDone","getCheckOutDetails","performCheckout","GuestDetailsBlockComponent","guestModelEmitter","paymentReadyEmitter","isEditable","editGuest","emit","validateAndProceed","StripeBlockComponent","userAddressID","paymentReady","loading","localUserLoggedIn","cardElement","stripe","Stripe","elements","card","create","mount","nativeElement","addEventListener","cardErrors","preventDefault","email","guest","createToken","token","chargeCustomer","paymentStatus","guestDetails","handleForm","UserAddressBlockComponent","addressIDEmitter","legend","checkedAddrID","addrFormOpen","localAddressesLoaded","emitNewAddressID","addrFrom","getElementById","addrFieldSet","addClass","removeClass","addr","openCloseNewAddressForm","addNewAddress","SummaryBlockComponent","totalCheckoutAmount","getKartProducts","ContactBlockComponent","BottomHeaderComponent","render","productKartService","searchTerm","activeHeader","hoveredHeader","bagCount","wishlistCount","productSearchActive","toolTipHtml","navbar","isUserLoggedIn","localCustomerLoggedIn","head","load","womensLoaded","data","mensLoaded","kidsLoaded","setKartCount","localWishListCount","getWishList","setWishListCount","localKartCount","toString","wishListCount","angleDown","optionstab","removeStyle","queryParams","setHovered","openOrCloseOptions","changeSearchBoxColor","searchProducts","setTooltip","HeadersComponent","collectionsLoaded","navBarLoaded","localLoaded","getWomensHeaders","size","getMensHeaders","getKidsHeaders","getCollectionsHeaders","TopHeaderComponent","loginService","logoutService","userRegistered","loginErrorMsg","loginErrField","registerErrMsg","registerErrField","loggedInCustomer","localCustomerRegistered","sessionBasedlogin","validateUserName","registerUser","logoutUser","BestSellingBlockComponent","components","bestSellers","topProducts","showProduct","tab","carouselTabs","getElementsByClassName","controlItems","columnDivs","productItem","basicModal","addToKart","kartCountLoaded","updateServerWishList","showTabs","CarouselBlockComponent","carouselImages","imageUrl","HomeBlocksComponent","carouselImagesLoaded","categoryModelsLoaded","popularCategories","newArrivalsLoaded","newArrivals","newArrivalsComboLoaded","newArrivalsCombo","bestSellingLoaded","topProductsLoaded","setAllModels","getLandingPage","welcomeCarousel","welcomePageCarousel","popularcategories","productsCombo","combos","NewArrivalsBlockComponent","PopularCollectionBlockComponent","pc","viewName","substring","toUpperCase","NotificationBlockComponent","notifType","notifMsg","notifEle","getId","getTopPx","len","ItemsBlockComponent","priceLocal","discountLocal","ProductItemComponent","userloggedIn","adjustTotalPrice","closeModal","ProductBlocksComponent","route","productSearchService","allProductsLoaded","params","searchForCriteria","searchForKeyword","allProductsLoadedLocal","getAllProducts","sortProducts","SortFilterBlockComponent","globalModelsService","leftSteps","rightSteps","priceDropMinIndex","priceDropMaxIndex","priceDropMin","priceDropMax","_main_priceMinValues","_main_priceMaxValues","priceMinValues","priceMaxValues","allFilters","catergories","offers","allSort","loadComponentData","getCategoryNamesAsList","getMaterialNamesAsList","getSectionNamesAsList","getMetalPurtiesAsList","getDiscountPercentsAsList","checkValue","has","checkIfSelected","values","deleteFromFilter","indexOf","item","maxNumber","minNumber","prepareGlobalProductDetailsForFilter","ProductKartComponent","disableBtn","minusFade","plusFade","kartLoaded","localUserloggedIn","getTotalKartAmount","deleteKartItems","adjustKartList","kp","updateKartProducts","deleteAllKart","updateKartAndCheckout","WishlistBlockComponent","wishListLoadedLocal","deleteProductFromWishList","deleteAllItems","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ProductFilter } from './product-filter.model';\r\nimport { ProductSort } from './product-sort.model';\r\n\r\nexport class GlobalProductDetails {\r\n    constructor(\r\n        public facets: any,\r\n        public sortBy: ProductSort[]\r\n    ) {}  \r\n}","export class ProductFilter {\r\n    constructor(\r\n        public id: number, \r\n        public name: string,\r\n        public enabled: boolean,\r\n        public count: number,\r\n        public min_price: number,\r\n        public max_price: number\r\n    ){}\r\n}","export class ProductSort {\r\n    constructor(\r\n        public id: number, \r\n        public name: string,\r\n        public enabled: boolean,\r\n        public count: number\r\n    ) {}\r\n}\r\n","import { Guest } from '../../users/guest.model';\r\n\r\nexport class ChargeRequest {\r\n    constructor(\r\n        public description: string,\r\n        public amount: number,\r\n        public Currency: string,\r\n        public stripeEmail: string,\r\n        public stripeToken: string,\r\n        public addressID: number,\r\n        public guestModel: Guest\r\n    ){}\r\n}","export class Address {\r\n\r\n    constructor(\r\n        public addressID: number,\r\n        public customerID: number,\r\n        public street: string,\r\n        public apartmentNumber: string,\r\n        public city: string,\r\n        public state: string,\r\n        public country: string,\r\n        public zipCode: string,\r\n        public defaultBilling: boolean,\r\n        public defaultShipping: boolean,\r\n        public version: string\r\n    ) {}\r\n\r\n}","export class CustomerRegister {\r\n    constructor(\r\n        public customerID: number,\r\n        public customerFirstName: string,\r\n        public customerLastName: string,\r\n        public phone: string,\r\n        public emailAddress: string,\r\n        public isGuest: boolean,\r\n        public userName: string,\r\n        public password: string,\r\n        public repassword: string,\r\n        public version: number,\r\n    ){}\r\n}","export class Customer {\r\n    constructor(\r\n        public customerID: number,\r\n        public customerFirstName: string,\r\n        public customerLastName: string,\r\n        public phone: string,\r\n        public emailAddress: string,\r\n        public isGuest: string\r\n    ) {}\r\n}","export class Guest {\r\n    constructor(\r\n        public guestID: number,\r\n        public firstName: string,\r\n        public lastName: string,\r\n        public emailAddress: string,\r\n        public streetAddress: string,\r\n        public apartmentNumber: string,\r\n        public city: string,\r\n        public state: string,\r\n        public country: string,\r\n        public zipCode: string,\r\n        public version: number\r\n    ){}\r\n}","import { Injectable } from '@angular/core';\r\nimport { UILoaderService } from '../ui-loader/ui-loader.service';\r\nimport { NotificationService } from '../notfications/notification.service';\r\n\r\n@Injectable()\r\nexport class ErrorService {\r\n\r\n    constructor(\r\n        private uiLoaderService: UILoaderService, \r\n        private notifService: NotificationService\r\n    ) {}\r\n\r\n    logError(errMsg: string, error: any) {\r\n        console.log('error --> ', errMsg, error)\r\n        this.uiLoaderService.loaderErrorObservable.next(true);\r\n        this.notifService.pushNotification(this.notifService.NOTIF_DANGER, errMsg)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Category } from 'src/app/Utilities/models/global-models/category.model';\r\nimport { Section } from 'src/app/Utilities/models/global-models/section.model';\r\nimport { SubCategory } from 'src/app/Utilities/models/global-models/sub-category.model';\r\nimport { Collection } from 'src/app/Utilities/models/global-models/collection.model';\r\nimport { Discount } from 'src/app/Utilities/models/global-models/discount.model';\r\nimport { Material } from 'src/app/Utilities/models/global-models/material.model';\r\nimport { MetalPurity } from 'src/app/Utilities/models/global-models/metal-purity.model';\r\nimport { LandingPage } from '../../models/landing-page/landing-page.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class GlobalModelsService {\r\n\r\n    categories: Category[] = []\r\n    subCategory: SubCategory[] =[]\r\n    collections: Collection[] = []\r\n    discounts: Discount[] = []\r\n    materials: Material[] = []\r\n    metalPurities: MetalPurity[] = []\r\n    sections: Section[] = []\r\n\r\n    globalModelsLoaded = false\r\n    globalModelsLoadedObservable = new Subject<boolean>();\r\n\r\n    constructor(\r\n\r\n    ){}\r\n\r\n    \r\n    assignGlobalModels(landingPage: LandingPage) {\r\n        this.categories = landingPage.globalCategoryList\r\n        this.collections = landingPage.globalCollectionList\r\n        this.sections = landingPage.globalSectionList\r\n        this.subCategory = landingPage.globalSubCategory\r\n        this.materials = landingPage.globalMaterialList\r\n        this.metalPurities = landingPage.globalMetalPurityList\r\n        this.discounts = landingPage.globalDiscountList\r\n\r\n        if(this.categories == null || this.categories.length == 0)\r\n            throw new Error('Categories are null')\r\n\r\n        if(this.sections == null || this.categories.length == 0)\r\n            throw new Error('Sections are null')\r\n\r\n        if(this.subCategory == null || this.categories.length == 0)\r\n            throw new Error('sub categories are null')\r\n\r\n        this.globalModelsLoaded = true\r\n        this.globalModelsLoadedObservable.next(this.globalModelsLoaded)\r\n\r\n        console.log('All Global Lists ===> ', this.categories, this.subCategory, this.sections, this.collections, this.metalPurities, this.materials, this.discounts)\r\n\r\n    }\r\n\r\n    getCategoryByID(categoryID: number): Category {\r\n        let category = null\r\n        this.categories.forEach(\r\n            c => {\r\n                if(c.categoryID == categoryID) category = c\r\n            }\r\n        )\r\n        return category;\r\n    }\r\n\r\n    getSubCategoryByID(subCategoryID: number): SubCategory {\r\n        let subCategory = null\r\n        this.subCategory.forEach(\r\n            sc => {\r\n                if(sc.subCategoryID == subCategoryID) subCategory = sc\r\n            }\r\n        )\r\n        return subCategory;\r\n    }\r\n\r\n    getCollectionByID(collectionID: number): Collection {\r\n        let collection = null\r\n        this.collections.forEach(\r\n            c => {\r\n                if(c.CollectionID == collectionID) collection = c\r\n            }\r\n        )\r\n        return collection\r\n    }\r\n\r\n    getDiscountByID(discountID: number): Discount {\r\n        let discount = null\r\n        this.discounts.forEach(\r\n            d => {\r\n                if(d.discountID == discountID) discount = d\r\n            }\r\n        )\r\n        return discount;\r\n    }\r\n\r\n    getMaterialByID(materialID: number): Material {\r\n        let material = null\r\n        this.materials.forEach(\r\n            m => {\r\n                if(m.materialID == materialID) material = m\r\n            }\r\n        )\r\n        return material\r\n    }\r\n\r\n    getMetalPurityByID(metalPurityID: number): MetalPurity {\r\n        let metalPurity = null\r\n        this.metalPurities.forEach(\r\n            m => {\r\n                if(m.metalPurityID == metalPurityID) metalPurity = m\r\n            }\r\n        )\r\n        return metalPurity;\r\n    }\r\n\r\n    getSectionByID(sectionID: number): Section {\r\n        let section = null\r\n        this.sections.forEach(\r\n            s => {\r\n                if(s.sectionID == sectionID) section = s\r\n            }\r\n        )\r\n        return section;\r\n    }\r\n\r\n    getCategoryNamesAsList(): string[] {\r\n        let categoryNames = []\r\n        this.categories.forEach(\r\n            c => categoryNames.push(c.categoryName)\r\n        )\r\n        return categoryNames\r\n    }\r\n\r\n    getSubCategoryNamesAsList(): string[] {\r\n        let subCategoryNames = []\r\n        this.subCategory.forEach(\r\n            sc => subCategoryNames.push(sc.subCategoryName)\r\n        )\r\n        return subCategoryNames;\r\n    }\r\n\r\n    getCollectionNamesAsList(): string[] {\r\n        let collectionNames = []\r\n        this.collections.forEach(\r\n            c => collectionNames.push(c.collectionName)\r\n        )\r\n        return collectionNames;\r\n    }\r\n\r\n    getDiscountPercentsAsList(): string[] {\r\n        let discountList = []\r\n        this.discounts.forEach(\r\n            d => discountList.push(d.discountType)\r\n        )\r\n        return discountList\r\n    }\r\n\r\n    getMaterialNamesAsList(): string[] {\r\n        let materialNames = []\r\n        this.materials.forEach(\r\n            m => materialNames.push(m.materialType)\r\n        )\r\n        return materialNames\r\n    }\r\n\r\n    getMetalPurtiesAsList(): string[] {\r\n        let metalPurityNames = []\r\n        this.metalPurities.forEach(\r\n            m => metalPurityNames.push(m.purity)\r\n        )\r\n        return metalPurityNames;\r\n    }\r\n\r\n    getSectionNamesAsList(): string[] {\r\n        let sectionName = []\r\n        this.sections.forEach(\r\n            s => sectionName.push(s.sectionName)\r\n        )\r\n        return sectionName;\r\n    }\r\n\r\n    getSubCategoriesBasedOnCategoryName(categoryName: string): string[] {\r\n        let subCategories = []\r\n        this.subCategory.forEach(\r\n            s => {\r\n                let c = this.getCategoryByID(s.categoryID)\r\n                if(c.categoryName === categoryName)\r\n                    subCategories.push(s.subCategoryName)\r\n            }\r\n        )\r\n        return subCategories;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { Collection } from '../../models/global-models/collection.model';\r\nimport { Category } from '../../models/global-models/category.model';\r\nimport { SubCategory } from '../../models/global-models/sub-category.model';\r\nimport { LandingPage } from '../../models/landing-page/landing-page.model';\r\nimport { Section } from '../../models/global-models/section.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HeaderService {\r\n\r\n    collections: Collection[] = []\r\n\r\n    womens = new Map<Category, SubCategory[]>();\r\n    mens = new Map<Category, SubCategory[]>();\r\n    kids = new Map<Category, SubCategory[]>();\r\n\r\n    \r\n    headersLoaded = new Subject<boolean>();\r\n\r\n    constructor(private http: HttpClient, private errorService: ErrorService) {}\r\n\r\n    assignHeaders(landingPage: LandingPage) {\r\n        let headers = landingPage.navBar\r\n        console.log('Navbar -->> ', headers)\r\n        \r\n        if(headers == null)\r\n            throw new Error('header object should not be null');\r\n        \r\n        Object.keys(headers).forEach(\r\n            (key) => {\r\n                var section: Section = JSON.parse(key);\r\n                if( section.sectionName.toLowerCase() === 'womens') {\r\n                    this.womens = this.getObjectForMap(headers, key);\r\n                    console.log('Women headers --> ', this.womens)\r\n                }\r\n                else if( section.sectionName.toLowerCase() === 'mens') {\r\n                    this.mens = this.getObjectForMap(headers, key)\r\n                    console.log('Mens headers --> ', this.mens)\r\n                } \r\n                else  if( section.sectionName.toLowerCase() === 'kids') {\r\n                    this.kids = this.getObjectForMap(headers, key)\r\n                    console.log('Kids headers --> ', this.kids)\r\n                }\r\n            }\r\n        )\r\n\r\n        this.collections = landingPage.globalCollectionList\r\n\r\n        \r\n        this.headersLoaded.next(true);\r\n    }\r\n\r\n    getObjectForMap(headers, key) {\r\n        var localMap = new Map<Category, SubCategory[]>();\r\n\r\n        var localHeader = headers[key]\r\n\r\n        if(localHeader == null)\r\n            throw new Error('header object should not be null');\r\n\r\n        Object.keys(headers[key]).forEach(\r\n            (catKey) => {\r\n                var category: Category = JSON.parse(catKey);\r\n                localMap.set(category, headers[key][catKey])\r\n            }\r\n        )\r\n        return localMap\r\n    }\r\n\r\n    getWomensHeaders() {\r\n        return this.womens;\r\n    }\r\n\r\n    getMensHeaders() {\r\n        return this.mens;\r\n    }\r\n\r\n    getKidsHeaders() {\r\n        return this.kids;\r\n    }\r\n\r\n    getCollectionsHeaders() {\r\n        return this.collections.slice();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HeaderService } from './header.service';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { GlobalModelsService } from '../global/global-models.service';\r\nimport { LandingPage } from '../../models/landing-page/landing-page.model';\r\n\r\n@Injectable()\r\nexport class LandingPageService {\r\n\r\n    LANDING_URL = '/landing-page'\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private headerService: HeaderService,\r\n        private globalService: GlobalModelsService,\r\n        private errorService: ErrorService\r\n    ) {}\r\n\r\n    landingPage: LandingPage = null;\r\n\r\n    landingPageLoaded = new Subject<boolean>();\r\n\r\n    fetchAllInfo() {\r\n        let check = true\r\n        this.http.get(this.LANDING_URL).subscribe(\r\n            (response: LandingPage) => {\r\n                console.log('Landing Page response ===> ', response);\r\n                this.landingPage = response;\r\n                try {\r\n                    this.globalService.assignGlobalModels(this.landingPage)\r\n                    this.headerService.assignHeaders(this.landingPage)\r\n                    this.landingPageLoaded.next(true)\r\n                } catch(err) {\r\n                    this.landingPageLoaded.next(false)\r\n                    this.errorService.logError('Error while assigning global models or headers', err)\r\n                }\r\n            },\r\n            error => {\r\n                this.landingPageLoaded.next(false)\r\n                this.errorService.logError('Error while loading landing page', error)\r\n            }\r\n        )\r\n    }\r\n\r\n    getLandingPage() {\r\n        return this.landingPage;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n    notifId = 0;\r\n\r\n    NOTIF_INFO = 'NOTIF-INFO'\r\n    NOTIF_SUCCESS = 'NOTIF_SUCCESS'\r\n    NOTIF_WARNING = 'NOTIF_WARNING'\r\n    NOTIF_DANGER = 'NOTIF_DANGER'\r\n\r\n    /**\r\n     * [id, type, message] --> only use this observable for notifications\r\n     */\r\n    notificationObservable = new Subject<string[]>();\r\n\r\n    // These are for internal calls\r\n    removeNotificationObservable = new Subject<string>();\r\n    notificationReArrangeObservable = new Subject<boolean>();\r\n\r\n    getNewId() {\r\n        return '' + this.notifId++;\r\n    }\r\n\r\n    decrementNotificationCount() {\r\n      if(this.notifId > 0)\r\n        this.notifId--;\r\n      return this.notifId;\r\n    }\r\n\r\n    pushNotification(type: string, message: string) {\r\n      this.notificationObservable.next( [ this.getNewId(), type, message ] )\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../../error/error-handler.service';\r\nimport { NotificationService } from '../../notfications/notification.service';\r\nimport { ChargeRequest } from 'src/app/Utilities/models/products/orders/charge-request.mode';\r\nimport { Checkout } from 'src/app/Utilities/models/products/orders/check-out.model';\r\n\r\n@Injectable()\r\nexport class CheckOutService {\r\n    \r\n    PYMT_API = 'payments/'\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService\r\n    ){}\r\n\r\n    checkOut: Checkout;\r\n\r\n    checkOutObservable = new Subject<boolean>();\r\n    paymentSuccessObservable = new Subject<boolean>();\r\n\r\n    performCheckout() {\r\n        this.http.get(this.PYMT_API + 'checkout').subscribe(\r\n            (checkOut: Checkout) => {\r\n                this.checkOut = checkOut\r\n                this.checkOutObservable.next(true)\r\n            },\r\n            error => {\r\n                this.checkOutObservable.next(false)\r\n                this.errorService.logError('Error while checkout ', error)\r\n            }\r\n        )\r\n    }\r\n\r\n    getCheckOutDetails() {\r\n        return this.checkOut\r\n    }\r\n    \r\n    chargeCustomer(chargeRequest: ChargeRequest) {\r\n        console.log('checkout request ===> ', chargeRequest)\r\n        this.http.post(this.PYMT_API + 'charge', chargeRequest).subscribe(\r\n            (response: Response) => {\r\n                console.log('checkout response ==>', response)\r\n                this.paymentSuccessObservable.next(true)\r\n                this.pushPaymentNotification(true, 'Payment successfull !!!');\r\n            },\r\n            error => {\r\n                this.paymentSuccessObservable.next(false)\r\n                this.pushPaymentNotification(false, 'Payment Failed !!!');\r\n                this.errorService.logError('Error while payment ', error)\r\n            }\r\n        )\r\n    }\r\n\r\n    pushPaymentNotification(status: boolean, msg: string) {\r\n        this.notifService.pushNotification(\r\n            status ? this.notifService.NOTIF_SUCCESS : this.notifService.NOTIF_WARNING,\r\n            msg\r\n        )\r\n    }\r\n  \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ProductKart } from 'src/app/Utilities/models/products/orders/product-kart.model';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../../error/error-handler.service';\r\nimport { NotificationService } from '../../notfications/notification.service';\r\nimport { ProductService } from '../product.service';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\n\r\n@Injectable()\r\nexport class ProductKartService {\r\n\r\n    KART_API = 'cart/'\r\n\r\n    kartProducts: ProductKart[] = [];\r\n    kartCountLoadedObserver = new Subject<number>();\r\n\r\n    totalKartAmount = 0;\r\n\r\n    kartCount = 0\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private productService: ProductService,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService\r\n    ) {}\r\n\r\n    fetchUserKart() {\r\n        this.http.get(this.KART_API + 'get-cart/').subscribe(\r\n            (localKartProducts: ProductKart[]) => {\r\n                this.setPreViewForKartProducts(localKartProducts)\r\n            },\r\n            error => {\r\n                this.kartHandleError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    setPreViewForKartProducts(localKartProducts: ProductKart[]) {\r\n        this.totalKartAmount = 0;\r\n        if(localKartProducts != null)\r\n            this.kartProducts = localKartProducts\r\n        else\r\n            this.kartProducts = []\r\n\r\n        this.kartProducts.forEach(\r\n            pk => this.setPreViewValues(pk)\r\n        )\r\n        \r\n        this.kartCount = this.kartProducts.length\r\n        console.log('Kart Products ---> ', this.kartProducts)\r\n        this.kartCountLoadedObserver.next(this.kartCount)\r\n    }\r\n\r\n    setPreViewValues(pk: ProductKart) {\r\n        // Set the product data first, avoid discount related issues\r\n        this.productService.setPreViewValues(pk.product)\r\n\r\n        if(pk.quantity > pk.product.inStockQuantity) {\r\n            pk.quantity = pk.product.inStockQuantity\r\n            pk.product.cartQuantity = pk.product.inStockQuantity\r\n        } else if (pk.quantity < 0) {\r\n            pk.quantity = 1\r\n            pk.product.cartQuantity = 1\r\n        }\r\n\r\n        pk.product.cartQuantity = pk.quantity\r\n        let amount = this.getTotalAmount(pk.product.discountedPrice, pk.quantity)\r\n        this.totalKartAmount += amount\r\n        pk.product.totalAmount = amount\r\n    }\r\n\r\n    getTotalAmount(discountedPrice: number, quantity: number): number {\r\n        let finalAmount = 0;\r\n\r\n        finalAmount = Math.round((discountedPrice * quantity) * 100) / 100;\r\n    \r\n        return finalAmount;\r\n    }\r\n\r\n    getKartProducts(): ProductKart[] {\r\n        if(this.kartProducts == null)\r\n            this.kartProducts = []\r\n\r\n        return this.kartProducts.slice();\r\n    }\r\n\r\n    getTotalKartAmount() {\r\n        console.log('Total kart Amount --> ', this.totalKartAmount)\r\n        return Math.round(this.totalKartAmount * 100) / 100;\r\n    }\r\n\r\n    addToKart(productId: string, cartQty: number, type: string) {\r\n        let localProdId = +productId;\r\n\r\n        this.http.post(this.KART_API + 'add-to-cart/'+ localProdId + '/' + cartQty, {}).subscribe(\r\n            (localKartProducts: ProductKart[]) => {\r\n                this.setPreViewForKartProducts(localKartProducts)\r\n                this.pushAddNotification('new')\r\n            },\r\n            error => {\r\n                this.kartHandleError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    pushAddNotification(type: string) {\r\n        let msg = ''\r\n\r\n        if(type === 'new')\r\n            msg = 'Item Added to the Cart Successfully'\r\n        else if(type === 'old')\r\n            msg = 'Qunatity increased on item Successfully'\r\n\r\n        if(msg !== '')\r\n            this.notifService.pushNotification(this.notifService.NOTIF_SUCCESS, msg)\r\n    }\r\n\r\n    deleteKartItems(productId: string, quantity: number) {\r\n        let localApi = ''\r\n\r\n        if(productId == null && quantity == 0)\r\n            localApi = 'empty-cart/'\r\n        else if(productId != null && quantity == 0)\r\n            localApi = 'delete-cart-item/' + productId\r\n        else if(productId != null && quantity > 0)\r\n            localApi = 'decrease-cart-item/' + productId + \"/\" + quantity\r\n\r\n        this.http.delete(this.KART_API + localApi).subscribe (\r\n            (localKartProducts: ProductKart[]) => {\r\n                this.setPreViewForKartProducts(localKartProducts)\r\n                this.pushDeletNotification(localApi);\r\n            },\r\n            error => {\r\n                this.kartHandleError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    pushDeletNotification(localApi: string) {\r\n        let msg = ''\r\n        if(localApi.startsWith('empty-cart'))\r\n            msg = 'Successfully removed all items from cart...!!'\r\n        else if(localApi.startsWith('delete-cart-item'))\r\n            msg = 'Successfully removed item from cart...!!'\r\n        else if(localApi.startsWith('decrease-cart-item'))\r\n            msg = 'Successfully decreased quantity of cart item...!!'\r\n\r\n        if(msg !== '')\r\n            this.notifService.pushNotification(this.notifService.NOTIF_WARNING, msg)\r\n    }\r\n\r\n    updateKartProducts(kartProducts: ProductKart[]) {\r\n        return this.http.put(this.KART_API + 'updateCart', kartProducts)\r\n    }\r\n\r\n    kartHandleError(error) {\r\n        this.kartProducts = []\r\n        this.kartCountLoadedObserver.next(this.kartCount)\r\n        this.errorService.logError('Error while loading all cart items ', error)\r\n    }\r\n\r\n    logoutHandler() {\r\n        this.kartProducts = []\r\n        this.kartCount = 0\r\n        this.totalKartAmount = 0\r\n        this.kartCountLoadedObserver.next(0)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { WishList } from 'src/app/Utilities/models/products/orders/wish-list.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorService } from '../../error/error-handler.service';\r\nimport { Subject } from 'rxjs';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { ProductService } from '../product.service';\r\nimport { ProductUtilService } from '../product-util.service';\r\nimport { NotificationService } from '../../notfications/notification.service';\r\n\r\n@Injectable()\r\nexport class WishListService {\r\n\r\n    WISHLIST_API = 'wishlist/'\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private productUtilService: ProductUtilService,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService\r\n    ){}\r\n\r\n    wishList: WishList;\r\n    wishListLoaded = false\r\n    wishListLoadedObservable = new Subject<boolean>()\r\n\r\n    fetchUserWishList() {\r\n        this.http.get(this.WISHLIST_API + 'getByLoggedUser').subscribe(\r\n            (localWishList: WishList) => {\r\n                this.successResponse(localWishList, false, '')\r\n            },\r\n            error => {\r\n                this.errorResponse(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    getWishList() {\r\n        return this.wishList\r\n    }\r\n\r\n    updateServerWishList(product: Product) {\r\n        if(!product.isWishListed) {\r\n            this.http.post(this.WISHLIST_API + 'postWishListItem/' + product.productID, '').subscribe(\r\n                (localWishList: WishList) => {\r\n                    this.successResponse(localWishList, true, 'Item successfully added to wishlist')\r\n                },\r\n                error => {\r\n                    this.errorResponse(error)\r\n                }\r\n            )\r\n        } else {\r\n            this.notifService.pushNotification(this.notifService.NOTIF_INFO, 'Item already in wishlist')\r\n        }\r\n\r\n    }\r\n\r\n    isProductWishListed(product: Product): boolean {\r\n        if(this.wishList != null && this.wishList.wishListProducts.length > 0) {\r\n            for(let i = 0; i < this.wishList.wishListProducts.length; i++) {\r\n                if(this.wishList.wishListProducts[i].productID === product.productID) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deleteProductFromWishList(productId: number) {\r\n      this.http.delete(this.WISHLIST_API + 'deleteWishListItem/' + productId).subscribe(\r\n        (localWishList: WishList) => {\r\n            this.successResponse(localWishList, true, 'Item successfully deleted from wishlist')\r\n        },\r\n        error => {\r\n            this.errorResponse(error)\r\n        }\r\n      )\r\n    }\r\n\r\n    deleteAllItems() {\r\n      this.http.delete(this.WISHLIST_API + 'deleteWishList').subscribe(\r\n          (wishListDeleted: boolean) => {\r\n              this.wishListLoaded = false\r\n              this.wishListLoadedObservable.next(false)\r\n              this.notifService.pushNotification(this.notifService.NOTIF_WARNING, 'Wishlist removed !!!')\r\n          },\r\n          error => {\r\n              this.errorResponse(error)\r\n          }\r\n      )\r\n    }\r\n    \r\n    errorResponse(error) {\r\n        this.wishListLoaded = false\r\n        this.wishListLoadedObservable.next(this.wishListLoaded)\r\n        this.errorService.logError('Error while loading wishlist ', error)\r\n    }\r\n\r\n    successResponse(localWishList: WishList, check: boolean, message: string) {\r\n        if(localWishList !== null && localWishList.wishListProducts !== null && localWishList.wishListProducts.length > 0 ) {\r\n            this.wishList = localWishList\r\n            console.log(\"WishList items ---> \", localWishList);\r\n            \r\n            this.wishList.wishListProducts.forEach(\r\n                p => { \r\n                    this.productUtilService.setPreViewValues(p)\r\n                    p.isWishListed = true\r\n                }\r\n            )\r\n\r\n            if(check)\r\n                this.notifService.pushNotification(this.notifService.NOTIF_SUCCESS, message)\r\n            this.wishListLoaded = true\r\n            this.wishListLoadedObservable.next(this.wishListLoaded)\r\n        } else {\r\n            if(check)\r\n                this.notifService.pushNotification(this.notifService.NOTIF_WARNING, 'Operation failed on wishlist')\r\n            this.wishListLoaded = false\r\n            this.wishListLoadedObservable.next(this.wishListLoaded)\r\n        }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProductFilter } from '../../models/products/filter-sort-model/product-filter.model';\r\nimport { ProductSort } from '../../models/products/filter-sort-model/product-sort.model';\r\nimport { GlobalProductDetails } from '../../models/products/filter-sort-model/global-product-details.model';\r\nimport { Product } from '../../models/products/product.model';\r\nimport { ProductService } from './product.service';\r\nimport { GlobalModelsService } from '../global/global-models.service';\r\n\r\n@Injectable()\r\nexport class ProductSearchService {\r\n    \r\n    constructor(\r\n        private productService: ProductService\r\n    ){}\r\n\r\n    searchForCriteria(section: string, categoryType: string, catergorySubType: string) {\r\n        \r\n        let globalProductDetails = this.prepareGlobalProductDetails(\r\n            section, \r\n            categoryType, \r\n            catergorySubType, \r\n            'new listed'\r\n        );\r\n\r\n        this.productService.fetchProductsBasedOnFilter(globalProductDetails);\r\n    }\r\n    \r\n    searchForKeyword(query: string) {\r\n        this.productService.fetchProductsBasedOnKeyword(query);\r\n    }\r\n\r\n    sortProducts(allProducts: Product[], sortCriteria: string): Product[] {\r\n        return allProducts.sort(\r\n            (product1: Product, product2: Product) => {\r\n                if(sortCriteria === 'Newly Listed')\r\n                    return (product1.updateDate > product2.updateDate) ? -1 : 1;\r\n                else if(sortCriteria === 'Price - High to Low')\r\n                    return (product1.price > product2.price) ? -1 : 1;\r\n                else if(sortCriteria === 'Price - Low to High')\r\n                    return (product1.price < product2.price) ? -1 : 1;\r\n                else if('Discount')\r\n                    return (product1.discount > product2.discount) ? -1 : 1;\r\n                \r\n                return 0;\r\n            }\r\n        )\r\n    }\r\n\r\n    prepareGlobalProductDetails(section: string, categoryName: string, subCategoryName: string, sortBy: string) {\r\n        var filters = {};\r\n\r\n        var priceFilter = [new ProductFilter(0, '', true, 0, 0, 10000)];\r\n        filters['price-filter'] = priceFilter;\r\n\r\n        if(categoryName != null && categoryName.length > 0) {\r\n            var categoryFilter = [new ProductFilter(0, categoryName, true, 0, 0, 0)];\r\n            filters['category-filter'] = categoryFilter;\r\n        }\r\n\r\n        if(subCategoryName != null && subCategoryName.length > 0) {\r\n            var subCategoryFilter = [new ProductFilter(0, subCategoryName, true, 0, 0, 0)];\r\n            filters['sub-category-filter'] = subCategoryFilter;\r\n        }\r\n\r\n        if(section != null && section.length > 0) {\r\n            var sectionFilter = [new ProductFilter(0, section, true, 0, 0, 0)];\r\n            filters['gender'] = sectionFilter;\r\n        }\r\n\r\n        var sort = [new ProductSort(0, sortBy.toLowerCase(), true, 0)]\r\n        var globalProduct = new GlobalProductDetails(filters, sort);\r\n\r\n        return globalProduct;\r\n    }\r\n\r\n    prepareGlobalProductDetailsForFilter(\r\n        selectedFilters: Map<string, string[]>,\r\n        selectedSort: string,\r\n        priceMin: string,\r\n        priceMax: string\r\n    ) {\r\n        var filters = {};\r\n\r\n        var priceFilter = [new ProductFilter(0, '', true, 0, +priceMin, +priceMax)];\r\n        filters['price-filter'] = priceFilter;\r\n\r\n        selectedFilters.forEach(\r\n            (filterValue: string[], filterKey: string) => {\r\n                switch (filterKey) {\r\n                    case 'Categories':\r\n                        var categoryFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                categoryFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['category-filter'] = categoryFilter;\r\n                        break;\r\n                    case 'Sub Categories':\r\n                        var subCategoryFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                subCategoryFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['sub-category-filter'] = subCategoryFilter;\r\n                        break;\r\n                    case 'Materials':\r\n                        var materialFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                materialFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['materials'] = materialFilter;\r\n                        break;\r\n                    case 'Section':\r\n                        var sectionFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                sectionFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['gender'] = sectionFilter;\r\n                        break;\r\n                    case 'Metal Purity':\r\n                        var purityFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                purityFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['materials_purity'] = purityFilter;\r\n                        break;\r\n                    case 'Offers':\r\n                        var offersFilter = []\r\n                        filterValue.forEach(\r\n                            (filter) => {\r\n                                offersFilter.push(new ProductFilter(0, filter, true, 0, 0, 0))\r\n                            }\r\n                        )\r\n                        filters['discount'] = offersFilter;\r\n                        break;\r\n                    default:\r\n                        filters['category-filter'] = [];\r\n                        filters['Materials'] = [];\r\n                        filters['gender'] = [];\r\n                        filters['materials_purity'] = [];\r\n                        filters['offers'] = [];\r\n                        break;\r\n                }\r\n            }\r\n        )\r\n\r\n        var sort = []\r\n        switch (selectedSort) {\r\n            case 'Discount':\r\n                sort.push(new ProductSort(0, 'discount', true, 0));\r\n                break;\r\n            case 'Price - High to Low':\r\n                sort.push(new ProductSort(0, 'price high to low', true, 0));\r\n                break;\r\n            case 'Price - Low to High':\r\n                sort.push(new ProductSort(0, 'price low to high', true, 0));\r\n                break;\r\n            case 'Newly Listed':\r\n                sort.push(new ProductSort(0, 'new listed', true, 0));\r\n                break;\r\n            default:\r\n                sort.push(new ProductSort(0, 'new listed', true, 0));\r\n                break;\r\n        }\r\n        var globalProduct = new GlobalProductDetails(filters, sort);\r\n\r\n        return globalProduct;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Product } from '../../models/products/product.model';\r\nimport { GlobalModelsService } from '../global/global-models.service';\r\nimport { WishListService } from './orders/wish-list.service';\r\n\r\n@Injectable()\r\nexport class ProductUtilService {\r\n\r\n    constructor(\r\n        private globalModalsService: GlobalModelsService\r\n    ){}\r\n\r\n    setPreViewValues(p: Product) {\r\n        p.cartQuantity = p.inStockQuantity > 0 ? 1 : 0;\r\n        p.totalAmount = p.price;\r\n\r\n        let category = this.globalModalsService.getCategoryByID(p.categoryID)\r\n        p.categoryName = category !== null ? category.categoryName : ''\r\n\r\n        let subCategory = this.globalModalsService.getSubCategoryByID(p.subCategoryID)\r\n        p.subCategoryName = subCategory !== null ? subCategory.subCategoryName : ''\r\n\r\n        let section = this.globalModalsService.getSectionByID(p.sectionID)\r\n        p.sectionName = section !== null ? section.sectionName : ''\r\n\r\n        let collection = this.globalModalsService.getCollectionByID(p.collectionID)\r\n        p.collectionName = collection !== null ? collection.collectionName : ''\r\n\r\n        let materials = this.globalModalsService.getMaterialByID(p.materialID)\r\n        p.materialName = materials !== null ? materials.materialType : 'Change it!!'\r\n\r\n        let metalPurity = this.globalModalsService.getMetalPurityByID(p.metalPurityID)\r\n        p.metalPurityName = metalPurity !== null ? metalPurity.purity : 'Change it!!'\r\n\r\n        let discount = this.globalModalsService.getDiscountByID(p.discountID)\r\n        p.discount = discount !== null ? discount.percentage : 0\r\n\r\n        p.discountedPrice = this.getDiscountPrice(p.price, p.discount)\r\n\r\n    }\r\n\r\n    getDiscountPrice(price: number, discount: number): number {\r\n        let discountedPrice = price\r\n\r\n        if (discount !== 0) {\r\n            discountedPrice = price * (discount / 100)\r\n            discountedPrice = price - discountedPrice;\r\n        }\r\n        \r\n        discountedPrice = Math.round(discountedPrice * 100) / 100;\r\n\r\n        return discountedPrice;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ProductWishListService {\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { GlobalProductDetails } from 'src/app/Utilities/models/products/filter-sort-model/global-product-details.model';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { Product } from '../../models/products/product.model';\r\nimport { ProductUtilService } from './product-util.service';\r\nimport { WishListService } from './orders/wish-list.service';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    PRODUCTS_URL = 'products/';\r\n\r\n    constructor(\r\n        private http: HttpClient, \r\n        private errorService: ErrorService,\r\n        private productUtilService: ProductUtilService,\r\n        private wishListService: WishListService\r\n    ) {}\r\n\r\n    productsPage = 0;\r\n    productsForPage = 100;\r\n\r\n    allProducts: Product[] = [];\r\n    allProductsObserver = new Subject<boolean>();\r\n    sortCurrentProductsObserver = new Subject<string>();\r\n\r\n    fetchProductsBasedOnFilter(globalProductDetails: GlobalProductDetails) {\r\n        console.log('request', globalProductDetails)\r\n        this.http.post(this.PRODUCTS_URL + 'getAllProductsByFilters/' + this.productsPage + '/' + this.productsForPage, globalProductDetails).subscribe(\r\n            (response) => {\r\n                console.log('response', response)\r\n                const localProducts = response['results'];\r\n                this.onSuccess(localProducts)\r\n            },\r\n            error => {\r\n                this.onError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    fetchProductsBasedOnKeyword(query: string) {\r\n        console.log('request product query ---> ', query)\r\n        this.http.get(this.PRODUCTS_URL + 'searchProductByKeyWord/' + query).subscribe(\r\n            (localProducts) => {\r\n                console.log('query products ===> ', localProducts)\r\n                this.onSuccess(localProducts)\r\n            },\r\n            error => {\r\n                this.onError(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    onSuccess(localProducts) {\r\n        console.log('localProducts', localProducts)\r\n        this.allProducts = localProducts;\r\n\r\n        if(this.allProducts == null)\r\n            this.allProducts = []\r\n        // Set product cart quantity as 1\r\n        this.allProducts.forEach(\r\n            p => this.setPreViewValues(p)\r\n        )\r\n        this.allProductsObserver.next(true);\r\n        console.log('final products ===> ', this.allProducts)\r\n    }\r\n\r\n    setPreViewValues(p: Product) {\r\n        this.productUtilService.setPreViewValues(p)\r\n        p.isWishListed = this.wishListService.isProductWishListed(p)\r\n    }\r\n    \r\n    getAllProducts() { \r\n\r\n        if(this.allProducts == null)\r\n            this.allProducts = []\r\n\r\n        return this.allProducts.slice();\r\n    }\r\n\r\n    onError(error) {\r\n        this.allProducts = [];\r\n        this.allProductsObserver.next(false);\r\n        this.errorService.logError('Error occured while pulling filtered products ', error)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UILoaderService {\r\n\r\n    // Increment here when you add a new loader screen for effective use\r\n    totalLoaders = 3;\r\n\r\n    apiLoadingScreen = 'API-LOADER-SCREEN'\r\n    routeLoadingScreen = 'ROUTE-LOADER-SCREEN'\r\n    loginLoaderScreen = 'LOGIN-LOADER-SCREEN'\r\n\r\n    /**\r\n     * [loadername, boolean]\r\n     * Pick loader name from above screen variables\r\n     * Send true or false to stop or start the loader screen\r\n     */\r\n    loaderObservable = new Subject<any[]>();\r\n\r\n    loaderErrorObservable = new Subject<boolean>();\r\n\r\n    constructor() {}\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { Customer } from '../../models/users/customer.model';\r\nimport { Address } from '../../models/users/address.model';\r\nimport { NotificationService } from '../notfications/notification.service';\r\n\r\n@Injectable()\r\nexport class AddressService {\r\n    \r\n    ADDR_URL = 'addresses/'\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private http: HttpClient,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService\r\n    ) { }\r\n\r\n    customerDetails: Customer;\r\n\r\n    userAddresses: Address[] = [];\r\n    addressLoadedObserver = new Subject<boolean>();\r\n\r\n\r\n    fetchUserAddress() {\r\n        if(this.userService.customerLoggedIn) {\r\n\r\n            this.customerDetails = this.userService.getCustomerDetails();\r\n            this.http.get(this.ADDR_URL + this.customerDetails.customerID).subscribe(\r\n                (addresses: Address[]) => {\r\n                    this.userAddresses = addresses;\r\n                    console.log('User Addresses --> ', this.userAddresses)\r\n                    this.addressLoadedObserver.next(true)\r\n                },\r\n                error => {\r\n                    this.addressLoadedObserver.next(false);\r\n                    this.errorService.logError('error occured loading customer addresses ', error);\r\n                }\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    getUserAddresses() {\r\n        let localAddr = JSON.parse(JSON.stringify(this.userAddresses));\r\n        return localAddr;\r\n    }\r\n\r\n    \r\n    saveAddress(address: Address) {\r\n        var msg = 'Address updated failed !!'\r\n        var type = this.notifService.NOTIF_WARNING\r\n        this.http.post(this.ADDR_URL, address).subscribe(\r\n            (address: Address) => {\r\n                if(address != null) {\r\n                    this.fetchUserAddress()\r\n                    msg = 'Address update success !!'\r\n                    type = this.notifService.NOTIF_SUCCESS\r\n                }\r\n\r\n                this.notifService.pushNotification(type, msg)\r\n            },\r\n            error => {\r\n                this.errorService.logError('error occured loading customer addresses ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { Customer } from '../../models/users/customer.model';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n  LOGIN_API = 'login';\r\n\r\n  constructor(private http: HttpClient, \r\n    private userService: UserService,\r\n    private errorService: ErrorService) { }\r\n\r\n  authTokenLogin(username: string, password: string) {\r\n\r\n    this.http.post(this.LOGIN_API, {'userName': username, 'password': password}, {responseType: 'text'}).subscribe(\r\n      (response: string) => {\r\n        console.log('user loggedin his token - ', response)\r\n        localStorage.setItem('token', response);\r\n        this.userService.fetchLogginCustomer();\r\n      },\r\n      error => {\r\n        this.errorService.logError('Please enter valid credentials', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  sessionBasedlogin(username: string, password: string) {\r\n    var formData = new FormData()\r\n    formData.append('password', password)\r\n    formData.append('username', username)\r\n\r\n    const headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'multipart/form-data');\r\n    headers.append('Accept', 'application/json');\r\n\r\n    this.http.post(this.LOGIN_API, formData, {headers: headers}).subscribe(\r\n      (customer: Customer) => {\r\n        console.log('user loggedin - ', customer)\r\n        this.userService.setLoggedInCustomer(customer, 'login')\r\n      },\r\n      error => {\r\n        this.errorService.logError('error occured while loggin in ', error);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { ProductKartService } from '../products/orders/product-kart.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { NotificationService } from '../notfications/notification.service';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class LogoutService {\r\n\r\n    constructor(        \r\n        private http: HttpClient,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService,\r\n        private userService: UserService,\r\n        private kartService: ProductKartService\r\n    ) {}\r\n    \r\n    logoutUser() {\r\n        this.http.get(this.userService.BASE_CUSTOMER_API + 'logout').subscribe(\r\n            (custId: number) => {\r\n                this.logoutHandler()\r\n            },\r\n            error => {\r\n                this.logoutHandler()\r\n                this.errorService.logError('Error while logout', error)\r\n            }\r\n        )\r\n    }\r\n\r\n    logoutHandler() {\r\n        let msg = 'You\\'re logged out successfully !!!'\r\n        console.log(msg)\r\n        localStorage.removeItem('token');\r\n        this.informAllServices()\r\n        this.notifService.pushNotification(this.notifService.NOTIF_INFO, msg)\r\n    }\r\n\r\n    informAllServices() {\r\n        this.kartService.logoutHandler()\r\n        this.userService.logoutHandler()\r\n    }\r\n\r\n} ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorService } from '../error/error-handler.service';\r\nimport { NotificationService } from '../notfications/notification.service';\r\nimport { Customer } from '../../models/users/customer.model';\r\nimport { CustomerRegister } from '../../models/users/customer-register.model';\r\nimport { ProductKartService } from '../products/orders/product-kart.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { WishListService } from '../products/orders/wish-list.service';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    BASE_CUSTOMER_API = 'customers/';\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private errorService: ErrorService,\r\n        private notifService: NotificationService,\r\n        private kartService: ProductKartService,\r\n        private wishListService: WishListService\r\n    ) {}\r\n\r\n    customer: Customer;\r\n\r\n    customerLoggedInObserver = new Subject<boolean>();\r\n    customerRegisteredObserver = new Subject<boolean>();\r\n\r\n    customerLoggedIn = false;\r\n\r\n    \r\n    registerUser(customerRegister: CustomerRegister) {\r\n        this.http.post(this.BASE_CUSTOMER_API + \"registerCustomer\", customerRegister).subscribe(\r\n            (customer: Customer) => {\r\n                console.log('Registered ===> ', this.customer)\r\n                this.customerRegisteredObserver.next(true)\r\n                this.notifService.pushNotification(\r\n                    this.notifService.NOTIF_SUCCESS, 'User create successfully'\r\n                )\r\n            },\r\n            error => {\r\n                this.customerRegisteredObserver.next(false)\r\n                this.errorService.logError('error occured loading customer ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n    fetchLogginCustomer() {\r\n        this.http.get(this.BASE_CUSTOMER_API + 'login').pipe(\r\n            finalize(\r\n               () => {\r\n                   console.log('I\\'ll be fired always')\r\n                    this.kartService.fetchUserKart();\r\n               }\r\n            )\r\n        ).subscribe(\r\n            (localCustomer: Customer) => {\r\n                console.log('customer Object received - ', localCustomer)\r\n                this.setLoggedInCustomer(localCustomer, 'login')\r\n            },\r\n            error => {\r\n                console.log('error occured loading customer ', error)\r\n                this.errorService.logError('error occured loading customer ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n    checkCustomerLogin() {\r\n        console.log(\"checking if customer already logged in\");\r\n\r\n        this.http.get(this.BASE_CUSTOMER_API + 'login/reload')\r\n        .pipe(\r\n            finalize(\r\n               () => {\r\n                   console.log('I\\'ll be fired always')\r\n                    this.kartService.fetchUserKart();\r\n               }\r\n            )\r\n        )\r\n        .subscribe(\r\n            (localCustomer: Customer) => {\r\n                console.log('customer Object received - ', localCustomer)\r\n                this.setLoggedInCustomer(localCustomer, 'reload')\r\n            },\r\n            error => {\r\n                console.log('error occured loading customer ', error)\r\n                // this.errorService.logError('error occured loading customer ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n    setLoggedInCustomer(localCustomer: Customer, type: string) {\r\n        this.customer = localCustomer;\r\n        this.customerLoggedIn = true;\r\n        this.customerLoggedInObserver.next(this.customerLoggedIn);\r\n        let userName = this.customer.customerLastName + ' ' + this.customer.customerFirstName\r\n        this.pushLoginNotification(userName, type)\r\n        this.wishListService.fetchUserWishList();\r\n    }\r\n\r\n    pushLoginNotification(user: string, type: string) {\r\n        let msg = ''\r\n        let notif = ''\r\n        if(user !== null && type === 'login') {\r\n            msg = 'Welcome ' + user + ', you\\'re logged in !!!'\r\n            notif = this.notifService.NOTIF_SUCCESS\r\n        }\r\n        else if (user !== null && type === 'reload') {\r\n            msg = 'Welcome back ' + user + ' !!!'\r\n            notif = this.notifService.NOTIF_INFO\r\n        }\r\n        else {\r\n            msg = 'Welcome User !!!'\r\n        }\r\n        \r\n        this.notifService.pushNotification(notif, msg)\r\n    }\r\n\r\n    getCustomerDetails() : Customer {\r\n        let localCust = JSON.parse(JSON.stringify(this.customer));\r\n        return localCust;\r\n    }\r\n\r\n    changeUserDetails(customer: Customer) {\r\n        this.http.put(this.BASE_CUSTOMER_API + 'updateCustomer', customer).subscribe(\r\n            (localCustomer: Customer) => {\r\n                this.customer = localCustomer\r\n                this.notifService.pushNotification(\r\n                    this.notifService.NOTIF_SUCCESS, 'User details updated successfully'\r\n                )\r\n                this.customerLoggedInObserver.next(true)\r\n            },\r\n            error => {\r\n                this.errorService.logError('error occured updating customer ', error);\r\n            }\r\n        )\r\n    }\r\n\r\n    changeUserPassword(customerID: number, oldPassword: string, newPassword: string) {\r\n        let passModel = {customerID: customerID, oldPassword: oldPassword, newPassword: newPassword, status: ''}\r\n        console.log('Password update request ===> ', passModel)\r\n\r\n        this.http.put(this.BASE_CUSTOMER_API + 'updateUserPersonal', passModel).subscribe(\r\n            (response) => {\r\n                this.pushPasswordNotification(response['status'])\r\n            },\r\n            error => {\r\n                this.errorService.logError('error occured updating password ', error);\r\n            }\r\n        )\r\n    }\r\n    \r\n    pushPasswordNotification(message: string) {\r\n        let type = ''\r\n        if(message.toLowerCase().includes('failed') || message.toLowerCase().includes('incorrect'))\r\n            type = this.notifService.NOTIF_WARNING\r\n        else\r\n            type = this.notifService.NOTIF_SUCCESS\r\n        \r\n        this.notifService.pushNotification(type, message)\r\n    }\r\n\r\n    logoutHandler() {\r\n        this.customerLoggedIn = false;\r\n        this.customerLoggedInObserver.next(false)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ValidationService {\r\n\r\n    TEXT_REGEX = /^[a-z\\sA-Z]+$/\r\n    USER_REGEX = /^[a-zA-Z0-9.!#$%&;’*+/=?^_`{|}~-]+$/\r\n    EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&;’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n    PASS_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\r\n    NUM_REGEX = /^[0-9]+$/\r\n    PHN_REGEX = /^[0-9]{10}$/\r\n    ADDR_REGEX = /^[a-zA-Z0-9\\s.:-]+$/\r\n\r\n    validateText(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.TEXT_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validateUserName(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n        return false\r\n    \r\n        var matches = value.trim().match(this.USER_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validateEmail(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.EMAIL_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validateNumber(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.NUM_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validatePhone(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.PHN_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validatePassword(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        \r\n        var matches = value.trim().match(this.PASS_REGEX)\r\n        console.log('Regex details ----> ', value, matches)\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n    validateAddress(value: string, max: number, min: number) {\r\n        if(value ==null || value.length < min || value.length > max)\r\n            return false\r\n        var matches = value.trim().match(this.ADDR_REGEX)\r\n        console.log('Regex details ---> ', value, matches)\r\n\r\n        if(matches == null)\r\n            return false\r\n        else if(matches.length == 1)\r\n            return true\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../Utilities/services/users/user.service';\r\nimport { Customer } from '../Utilities/models/users/customer.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account-block',\r\n  templateUrl: './account-block.component.html',\r\n  styleUrls: ['./account-block.component.css']\r\n})\r\nexport class AccountBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  customerLoggedIn: boolean = false;\r\n  customer: Customer\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.customer == null) {\r\n      this.customer = new Customer(0, '', '', '', '', '')\r\n    }\r\n\r\n    if(this.userService.customerLoggedIn) {\r\n      this.customer = this.userService.getCustomerDetails()\r\n      this.customerLoggedIn = true;\r\n    }\r\n    \r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (userLoggedIn) => {\r\n        if(userLoggedIn) {\r\n          this.customer = this.userService.getCustomerDetails()\r\n        } else {\r\n          this.router.navigate(['/', 'home'])\r\n        }\r\n        this.customerLoggedIn = userLoggedIn\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"container untouchable\">\r\n    <div class=\"account-container\">\r\n        <div class=\"row justify-content-md-center\">\r\n            <div class=\"col-md-3 sticky-user-det animate wow rollIn\">\r\n                <div class=\"user-nav\">\r\n                    <div class=\"user-det\">\r\n                        <div class=\"user-img\">\r\n                            <span>S</span>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"user-info\">\r\n                            <h4 class=\"name-info\">{{customer.customerLastName}} {{customer.customerFirstName}}</h4>\r\n                            <span class=\"email-info\">{{customer.emailAddress}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"user-nav-links\">\r\n                        <div class=\"nav-item\" mdbWavesEffect>\r\n                            <span>My Orders</span>\r\n                        </div>\r\n                        <div class=\"nav-item\" [routerLink]=\"['edit', 'address']\" mdbWavesEffect>\r\n                            <span>Change Address</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-7 dyn-user-det\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, Renderer2 } from '@angular/core';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\nimport { CollapseComponent } from 'angular-bootstrap-md';\r\nimport { AddressService } from 'src/app/Utilities/services/users/address.service';\r\nimport { Address } from 'src/app/Utilities/models/users/address.model';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Customer } from 'src/app/Utilities/models/users/customer.model';\r\n\r\n@Component({\r\n  selector: 'app-edit-address',\r\n  templateUrl: './edit-address.component.html',\r\n  styleUrls: ['./edit-address.component.css']\r\n})\r\nexport class EditAddressComponent implements OnInit {\r\n\r\n  @ViewChild('addressForm') addressFrom: CollapseComponent;\r\n\r\n  fieldMax = 255\r\n  fieldMin = 5\r\n\r\n  showingCollapse = -1;\r\n  userViewAddresses: Address[] = [];\r\n  userEditAddresses: Address[] = [];\r\n  addressLoaded = false;\r\n\r\n  editAddress: Address;\r\n  customerLoggedIn: boolean = false;\r\n  customerID: number = 0\r\n\r\n  errorMsg = ''\r\n  errorField = ''\r\n\r\n  constructor(\r\n    private validationService: ValidationService,\r\n    private addressService: AddressService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.userService.customerLoggedIn) {\r\n      this.customerLoggedIn = true\r\n      this.customerID = this.userService.getCustomerDetails().customerID\r\n      this.editAddress = new Address(0 , this.customerID, ' ', ' ', ' ', ' ', ' ', ' ', false, false, ' ');\r\n    }\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (userLoggedIn) => {\r\n        if(userLoggedIn) {\r\n          this.addressService.fetchUserAddress();\r\n          this.customerID = this.userService.getCustomerDetails().customerID\r\n          this.editAddress = new Address(0 , this.customerID, ' ', ' ', ' ', ' ', ' ', ' ', false, false, ' ');\r\n        }\r\n        this.customerLoggedIn = userLoggedIn\r\n      }\r\n    )\r\n\r\n    this.addressService.addressLoadedObserver.subscribe(\r\n      (addressLoaded: boolean) => {\r\n        if(addressLoaded)\r\n          this.userViewAddresses = this.addressService.getUserAddresses()\r\n          this.userEditAddresses = this.addressService.getUserAddresses()\r\n        \r\n        if(this.userViewAddresses == null || this.userEditAddresses == null) {\r\n          this.userViewAddresses = []\r\n          this.userEditAddresses = []\r\n        }\r\n        this.addressLoaded = addressLoaded;\r\n      }\r\n    )\r\n\r\n    this.addressService.fetchUserAddress();\r\n\r\n  }\r\n\r\n  setAndEditAddress(id: number) {\r\n    console.log('Address edit --> ', id, this.showingCollapse)\r\n    this.errorField = ''\r\n    this.errorMsg = ''\r\n\r\n    if(id == this.showingCollapse) {\r\n      this.addressFrom.hide()\r\n      this.showingCollapse = -1\r\n    } else if(id == 0) {\r\n      this.editAddress = new Address(0 , this.customerID, ' ', ' ', ' ', ' ', ' ', ' ', false, false, ' ');\r\n      this.addressFrom.show()\r\n      this.showingCollapse = id\r\n    } else if(this.showingCollapse == -1) {\r\n      this.editAddress = this.userEditAddresses[id-1];\r\n      this.addressFrom.show()\r\n      this.showingCollapse = id\r\n    } else {\r\n      this.editAddress = this.userEditAddresses[id-1];\r\n      this.addressFrom.show()\r\n      this.showingCollapse = id\r\n    }\r\n  }\r\n\r\n  validateAndUpdate() {\r\n    let check = false\r\n\r\n    check = this.validateAddressFields()\r\n    console.log('Address validation ---> ', check, this.editAddress)\r\n\r\n    if(check)\r\n      this.addressService.saveAddress(this.editAddress);\r\n\r\n  }\r\n\r\n  validateAddressFields() {\r\n    this.errorMsg = 'Please follow address policy'\r\n    if(!this.validationService.validateAddress(this.editAddress.apartmentNumber, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'APN'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.street, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'STR'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.city, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'CTY'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.state, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'STA'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.country, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'CTR'\r\n      return false;\r\n    }\r\n    \r\n    if(!this.validationService.validateAddress(this.editAddress.zipCode, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'ZIP'\r\n      return false;\r\n    }\r\n\r\n    this.errorField = ''\r\n    this.errorMsg = ''\r\n    return true;\r\n  }\r\n\r\n}\r\n","<div class=\"addr-cont untouchable animate wow fadeInRightBig\">\r\n    <div class=\"bac-ret\" [routerLink]=\"['/', 'ui-account', 'edit']\">\r\n        <mdb-icon fas icon=\"angle-double-left\" class=\"back-arrows\"></mdb-icon>\r\n        <span class=\"back-span\">\r\n             Back\r\n        </span>\r\n    </div>\r\n    <div class=\"addr-blk\">\r\n        <div class=\"addr-hdr\" *ngIf=\"customerLoggedIn\">\r\n            <span class=\"addr-lbl\">Edit Address:</span>\r\n            <button class=\"btn j-btn j-btn-allow new-addr-btn\" (click)=\"setAndEditAddress(0)\" mdbWavesEffect>Add New Address</button>\r\n        </div>\r\n        <div class=\"old-addr-blk\">\r\n            <div class=\"addr-det-old\">\r\n                <div class=\"addr-list-item animate wow slideInUp\" data-wow-delay=\".8s\" [class.addr-list-item-edit]=\"this.showingCollapse == (i+1)\" (click)=\"setAndEditAddress(i+1)\" *ngFor=\"let address of userViewAddresses; let i=index\" mdbWavesEffect>\r\n                    <span class=\"addr-list-head\">{{address.apartmentNumber}}, {{address.street}}</span>\r\n                    <mdb-icon class=\"addr-edit-icon addr-edit-open\" *ngIf=\"showingCollapse != (i+1)\" fas icon=\"plus\"></mdb-icon>\r\n                    <mdb-icon class=\"addr-edit-icon addr-edit-close\" *ngIf=\"showingCollapse == (i+1)\" fas icon=\"minus\"></mdb-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"addr-body\" mdbCollapse #addressForm=\"bs-collapse\" *ngIf=\"customerLoggedIn\">\r\n            <div class=\"row\">\r\n                <form (submit)=\"validateAndUpdate()\">\r\n                    <div class=\"col-md-12 addr-row error-msg-row\" *ngIf=\"errorMsg\">\r\n                        <span class=\"error-msg \">{{errorMsg}}</span>\r\n                    </div>\r\n                    <div class=\" col-md-12 addr-row \">\r\n                        <span class=\"comma-wrng \">*Don't use comma(,) in the address fields</span>\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">Apartment</label>\r\n                        <input type=\"text\" name=\"apartmentNumber\" [(ngModel)]=\"editAddress.apartmentNumber \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'APN'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">Street</label>\r\n                        <input type=\"text\" name=\"street\" [(ngModel)]=\"editAddress.street \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'STR'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">City</label>\r\n                        <input type=\"text\" name=\"city\" [(ngModel)]=\"editAddress.city \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'CTY'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">State</label>\r\n                        <input type=\"text\" name=\"state\" [(ngModel)]=\"editAddress.state \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'STA'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">Country</label>\r\n                        <input type=\"text\" name=\"country\" [(ngModel)]=\"editAddress.country \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'CTR'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row \">\r\n                        <label class=\"addr-input-lbl \">Zip Code / Postal Code</label>\r\n                        <input type=\"text\" name=\"zipCode\" [(ngModel)]=\"editAddress.zipCode \" maxlength=\"6 \" class=\"form-control addr-input\" [class.addr-input-error]=\"errorField === 'ZIP'\" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-3 addr-row add-check-box-row \">\r\n                        <label class=\"addr-check-box-lbl \">Default Shipping</label>\r\n                        <input type=\"checkbox\" [(ngModel)]=\"editAddress.defaultShipping \" name=\"defaultShipping \" class=\"form-control addr-check-box \" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-3 addr-row add-check-box-row \">\r\n                        <label class=\"addr-check-box-lbl \">Default Billing</label>\r\n                        <input type=\"checkbox\" [(ngModel)]=\"editAddress.defaultBilling \" name=\"defaultBilling \" class=\"form-control addr-check-box \" autocomplete=\"no \">\r\n                    </div>\r\n                    <div class=\"col-md-6 addr-row text-right update-addr-blk \">\r\n                        <button type=\"submit\" class=\"btn j-btn j-btn-allow update-addr-btn \" mdbWavesEffect>Change Address</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"addr-policy\">\r\n                <div>\r\n                    <span class=\"policy-head\">Password Policy</span>\r\n                </div>\r\n                <div class=\"addr-policy-body\">\r\n                    <ul class=\"policy-ul\">\r\n                        <li>Address fields should contain only <pre>. : -</pre> as special characters</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Customer } from 'src/app/Utilities/models/users/customer.model';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\nimport { UILoaderService } from 'src/app/Utilities/services/ui-loader/ui-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-personal-details',\r\n  templateUrl: './edit-personal-details.component.html',\r\n  styleUrls: ['./edit-personal-details.component.css']\r\n})\r\nexport class EditPersonalDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private validationService: ValidationService,\r\n    private uiLoaderService: UILoaderService\r\n  ) { }\r\n\r\n  fieldMax = 255\r\n  fieldMin = 5\r\n\r\n  bkpCustomer: Customer;\r\n\r\n  password: {oldPassword: string, newPassword: string, rePassword: string}\r\n\r\n  customerDetails: Customer;\r\n  userLoggedIn = false\r\n\r\n  customerDetailsError = ''\r\n  customerErrorField = ''\r\n  passwordError = ''\r\n  passwordErrorField = ''\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.password = {oldPassword: '', newPassword: '', rePassword: ''}\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localUserStatus) => {\r\n        if(localUserStatus) {\r\n          // UI loader stopped for customer details update\r\n          this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, false])\r\n\r\n          this.bkpCustomer = this.userService.getCustomerDetails()\r\n          this.customerDetails = this.userService.getCustomerDetails()\r\n          this.userLoggedIn = localUserStatus\r\n        }\r\n      }\r\n    )\r\n\r\n    this.userLoggedIn = this.userService.customerLoggedIn\r\n\r\n    if(this.userLoggedIn)\r\n      this.customerDetails = this.userService.getCustomerDetails()\r\n  }\r\n\r\n  validateAndUpdateDetails() {\r\n\r\n    if(!this.checkValidity(this.customerDetails.customerFirstName, 'firstname')) {\r\n        this.customerDetailsError = 'Please provide only alphabet character in firstname field'\r\n        this.customerErrorField = 'CFN'\r\n        return false\r\n    }\r\n\r\n    if(!this.checkValidity(this.customerDetails.customerLastName, 'lastname')) {\r\n        this.customerDetailsError = 'Please provide only alphabet character in lastname field'\r\n        this.customerErrorField = 'CLN'\r\n        return false\r\n    }\r\n\r\n    if(!this.checkValidity(this.customerDetails.emailAddress, 'email')) {\r\n        this.customerDetailsError = 'Please provide valid email id'\r\n        this.customerErrorField = 'EML'\r\n        return false\r\n    }\r\n\r\n    if(!this.checkValidity(this.customerDetails.phone, 'phone')) {\r\n        this.customerDetailsError = 'Please provide only 10 digit phone number'\r\n        this.customerErrorField = 'PHN'\r\n        return false\r\n    }\r\n\r\n    // UI loader started for customer details update\r\n    this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true])\r\n    console.log('Request Customer ===> ', this.customerDetails)\r\n    this.userService.changeUserDetails(this.customerDetails)\r\n\r\n    this.customerDetailsError = ''\r\n    this.customerErrorField = ''\r\n    return true;\r\n  }\r\n\r\n  checkValidity(value: string, type: string) {\r\n    let check = false;\r\n    switch(type) {\r\n      case 'firstname':\r\n        check = this.validationService.validateText(value, this.fieldMax, this.fieldMin)\r\n        break\r\n      case 'lastname':\r\n        check =  this.validationService.validateText(value, this.fieldMax, this.fieldMin)\r\n        break\r\n      case 'email':\r\n        check = this.validationService.validateEmail(value, this.fieldMax, this.fieldMin)\r\n        break\r\n      case 'phone':\r\n        check = this.validationService.validatePhone(value, this.fieldMax, this.fieldMin)\r\n        break\r\n      default:\r\n        check = false;\r\n        break\r\n    }\r\n    return check;\r\n  }\r\n\r\n  checkPasswordChanged() {\r\n    if(this.password.newPassword === this.password.rePassword) {\r\n      if(this.validationService.validatePassword(this.password.oldPassword, 30, 8)) {\r\n        if(this.validationService.validatePassword(this.password.newPassword, 30, 0)) {\r\n          this.userService.changeUserPassword(this.customerDetails.customerID, this.password.oldPassword, this.password.newPassword)\r\n          this.password = {oldPassword: '', newPassword: '', rePassword: ''}\r\n          this.passwordError = ''\r\n          this.passwordErrorField = ''\r\n          return true;\r\n        }\r\n        else {\r\n          this.passwordError = 'New password should match below policy'\r\n          this.passwordErrorField = 'NPS'\r\n          return false;\r\n        }\r\n      } else {\r\n        this.passwordError = 'Old password should match below policy'\r\n        this.passwordErrorField = 'OPS'\r\n        return false;\r\n      }\r\n    } else {\r\n      this.passwordError = 'New Password doesn\\'t match'\r\n      this.passwordErrorField = 'RPS'\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"user-edit-det untouchable animate wow fadeInRightBig\" *ngIf=\"userLoggedIn\">\r\n    <div class=\"user-main-info\">\r\n        <span class=\"info-head\">Personal Details:</span>\r\n        <br>\r\n        <mdb-icon class=\"error-icon\" *ngIf=\"customerDetailsError\" fas icon=\"exclamation-triangle\"></mdb-icon>\r\n        <span class=\"error-msg\" *ngIf=\"customerDetailsError\">{{customerDetailsError}}</span>\r\n        <div class=\"row edit-det-row\">\r\n            <form (submit)=\"validateAndUpdateDetails()\">\r\n                <div class=\"col-md-6 user-first-name det-row\">\r\n                    <label>First Name:</label>\r\n                    <input type=\"text\" name=\"customerFirstName\" [(ngModel)]=\"customerDetails.customerFirstName\" class=\"form-control form-control user-input\" [class.user-input-error]=\"customerErrorField === 'CFN'\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-last-name det-row\">\r\n                    <label>Last Name:</label>\r\n                    <input type=\"text\" name=\"customerLastName\" [(ngModel)]=\"customerDetails.customerLastName\" class=\"form-control user-input\" [class.user-input-error]=\"customerErrorField === 'CLN'\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-email det-row\">\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" name=\"emailAddress\" [(ngModel)]=\"customerDetails.emailAddress\" class=\"form-control user-input\" [class.user-input-error]=\"customerErrorField === 'EML'\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-phn det-row\">\r\n                    <label>Phone:</label>\r\n                    <input type=\"tel\" name=\"phone\" [(ngModel)]=\"customerDetails.phone\" class=\"form-control user-input\" maxlength=\"10\" [class.user-input-error]=\"customerErrorField === 'PHN'\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-12 text-right update-blk\">\r\n                    <button type=\"submit\" class=\"btn j-btn j-btn-allow\" mdbWavesEffect>Update</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div class=\"user-per-info\">\r\n        <span class=\"info-head\">Change Password:</span>\r\n        <br>\r\n        <mdb-icon class=\"error-icon\" *ngIf=\"passwordError\" fas icon=\"exclamation-triangle\"></mdb-icon>\r\n        <span class=\"error-msg\" *ngIf=\"passwordError\">{{passwordError}}</span>\r\n        <div class=\"row edit-det-row\">\r\n            <form (submit)=\"checkPasswordChanged()\">\r\n                <div class=\"col-md-6 user-phn det-row\">\r\n                    <label>Old Password:</label>\r\n                    <input type=\"password\" name=\"oldPassword\" [(ngModel)]=\"password.oldPassword\" class=\"form-control user-input pass-input\" [class.user-input-error]=\"passwordErrorField === 'OPS'\" minlength=\"8\" maxlength=\"25\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-pass det-row\">\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" name=\"newPassword\" [(ngModel)]=\"password.newPassword\" class=\"form-control user-input pass-input\" [class.user-input-error]=\"passwordErrorField === 'NPS'\" minlength=\"8\" maxlength=\"25\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 user-re-pass det-row\">\r\n                    <label>Re-Enter Password:</label>\r\n                    <input type=\"password\" name=\"rePassword\" [(ngModel)]=\"password.rePassword\" class=\"form-control user-input pass-input\" [class.user-input-error]=\"passwordErrorField === 'RPS'\" minlength=\"8\" maxlength=\"25\" autocomplete=\"no\">\r\n                </div>\r\n                <div class=\"col-md-6 det-row text-right pass-blk\">\r\n                    <button type=\"submit\" class=\"btn j-btn j-btn-allow\" mdbWavesEffect>Change Password</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div class=\"pass-details\">\r\n        <div>\r\n            <span class=\"info-head\">Password Policy</span>\r\n        </div>\r\n        <div class=\"pass-body\">\r\n            <ul class=\"pass-ul\">\r\n                <li> Your password must be between 8 and 25 characters. </li>\r\n                <li> Your password must contain at least one uppercase, or capital, letter (ex: A, B, etc.) </li>\r\n                <li> Your password must contain at least one lowercase letter. </li>\r\n                <li> Your password must contain at least one number digit (ex: 0, 1, 2, 3, etc.) </li>\r\n                <li> Your password must contain at least one special character <pre>Example: !, @, #, $, %, ^, &, * </pre> mainly the special characters are located on the top row of the keyboard on the same line as the numbers 0 through 9. </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeBlocksComponent } from './home-blocks/home-blocks.component';\r\nimport { ProductBlocksComponent } from './product-blocks/product-blocks.component';\r\nimport { ItemsBlockComponent } from './product-blocks/items-block/items-block.component';\r\nimport { ProductKartComponent } from './product-kart/product-kart.component';\r\nimport { AccountBlockComponent } from './account-block/account-block.component';\r\nimport { EditPersonalDetailsComponent } from './account-block/edit-personal-details/edit-personal-details.component';\r\nimport { EditAddressComponent } from './account-block/edit-address/edit-address.component';\r\nimport { CheckOutComponent } from './check-out/check-out.component';\r\nimport { WishlistBlockComponent } from './wishlist-block/wishlist-block.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', pathMatch: 'full', redirectTo: 'home'\r\n  },\r\n  {\r\n    path: 'home', component: HomeBlocksComponent\r\n  },\r\n  {\r\n    path: 'ui-products', component: ProductBlocksComponent, children: [\r\n      {\r\n        path: 'search', component: ItemsBlockComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'ui-kart', component: ProductKartComponent\r\n  },\r\n  {\r\n    path: 'ui-account', component: AccountBlockComponent, children: [\r\n      {\r\n        path: 'edit/address', component: EditAddressComponent\r\n      },\r\n      {\r\n        path: 'edit', component: EditPersonalDetailsComponent\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'ui-checkout', component: CheckOutComponent\r\n  },\r\n  {\r\n    path: 'ui-wishlist', component: WishlistBlockComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})], //, {useHash: true}\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, AfterViewInit, Renderer2 } from '@angular/core';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { UILoaderService } from './Utilities/services/ui-loader/ui-loader.service';\r\nimport { Router, RouterEvent, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { NotificationService } from './Utilities/services/notfications/notification.service';\r\nimport { LandingPageService } from './Utilities/services/landing-page/landing-page.service';\r\nimport { UserService } from './Utilities/services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  routeUILoaderType = 'three-strings';\r\n  apiUILoaderType = 'square-jelly-box';\r\n  loginUILoaderType = 'wandering-cubes'\r\n  uiLoaderColor = 'rgb(230, 200, 110)'\r\n\r\n  showNotification = [];\r\n  notificationType = '';\r\n  notificationMessage = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private landingPageService: LandingPageService,\r\n    private ngxService: NgxUiLoaderService,\r\n    public uiLoaderService: UILoaderService, \r\n    private notifService: NotificationService,\r\n    private renderer: Renderer2,\r\n    private userService: UserService\r\n  ) {\r\n    this.router.events.subscribe((e: RouterEvent) => {\r\n      window.scrollTo(0, 0)\r\n      this.navigationInterceptor(e);\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngxService.startLoader(this.uiLoaderService.routeLoadingScreen);\r\n\r\n    this.setTheObservables();\r\n  }\r\n\r\n\r\n  setTheObservables() {\r\n    \r\n    // Loads all Global Models\r\n    this.userService.checkCustomerLogin();\r\n    this.landingPageService.fetchAllInfo();\r\n\r\n    // Below Observable controls display and stopping of Loader UI\r\n    this.uiLoaderService.loaderObservable.subscribe(\r\n      (loader: string[]) => {\r\n        console.log('Ui Loader status --> ', loader)\r\n        if (loader[1]) {\r\n          window.scrollTo(0, 0)\r\n          // To stop user scroll while UI loader is playing\r\n          this.renderer.setStyle(document.documentElement, 'overflow', 'hidden')\r\n          this.ngxService.startLoader(loader[0]);\r\n        } else {\r\n          this.ngxService.stopLoader(loader[0]);\r\n          // To stop user scroll while UI loader is playing\r\n          setTimeout(() => {\r\n            this.renderer.setStyle(document.documentElement, 'overflow', 'auto')\r\n          }, 1000);\r\n        }\r\n      }\r\n    )\r\n\r\n    // Below Observable stops all the Loader UI's\r\n    this.uiLoaderService.loaderErrorObservable.subscribe(\r\n      (disable) => {\r\n        this.ngxService.stopAllLoader(this.uiLoaderService.routeLoadingScreen)\r\n        this.ngxService.stopAllLoader(this.uiLoaderService.apiLoadingScreen)\r\n        this.ngxService.stopAllLoader(this.uiLoaderService.loginLoaderScreen)\r\n        // To stop user scroll while UI loader is playing\r\n        setTimeout(() => {\r\n          this.renderer.setStyle(document.documentElement, 'overflow', 'auto')\r\n        }, 1000);\r\n      }\r\n    )\r\n\r\n    //Below Observable generates notification\r\n    this.notifService.notificationObservable.subscribe(\r\n      (notifDetails: string[]) => {\r\n        this.notificationType = notifDetails[1]\r\n        this.notificationMessage = notifDetails[2]\r\n        this.showNotification.push(notifDetails);\r\n        console.log('Elements in notif list --> ', this.showNotification);\r\n\r\n        setTimeout(() => {\r\n          this.notifService.removeNotificationObservable.next(notifDetails[0]);\r\n        }, 9300);\r\n\r\n        setTimeout(() => {\r\n          this.showNotification.splice(0, 1);\r\n          console.log('removed last item --> ', this.showNotification)\r\n          this.arrangeNotificationItems();\r\n        }, 10000);\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  // Not using now...!!!\r\n  checkAnyLoaderRunning(loaderName: string) {\r\n    if (this.ngxService.hasRunningTask(true, this.ngxService.getLoader(loaderName).loaderId))\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  removeNotification(notifId: string) {\r\n    this.notifService.removeNotificationObservable.next(notifId);\r\n    setTimeout(() => {\r\n      const index = this.showNotification.findIndex(x => x[0] === notifId);\r\n      console.log('deleted notification element index --> ', index);\r\n      if (index > -1) {\r\n        console.log('deleted notification element --> ', this.showNotification.splice(index, 1));\r\n        console.log('notification list --> ', this.showNotification);\r\n        this.arrangeNotificationItems();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n  arrangeNotificationItems() {\r\n    var count  = 0;\r\n    this.showNotification.forEach(\r\n      el => {\r\n        el[0] = count++;\r\n      }\r\n    )\r\n    console.log('Element after rearranging ', this.showNotification)\r\n    this.notifService.decrementNotificationCount();\r\n\r\n    setTimeout(() => {\r\n      this.notifService.notificationReArrangeObservable.next(true);\r\n    }, 500);\r\n  }\r\n\r\n  // Shows and hides the loading spinner during RouterEvent changes\r\n  navigationInterceptor(event: RouterEvent): void {\r\n    if (event instanceof NavigationStart) {\r\n      if (!event.url.startsWith('/ui-products/'))\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.routeLoadingScreen, true])\r\n    }\r\n    if (event instanceof NavigationEnd) {\r\n      this.uiLoaderService.loaderObservable.next([this.uiLoaderService.routeLoadingScreen, false])\r\n    }\r\n\r\n    // Set loading state to false in both of the below events to hide the spinner in case a request fails\r\n    if (event instanceof NavigationCancel) {\r\n      this.uiLoaderService.loaderObservable.next([this.uiLoaderService.routeLoadingScreen, false])\r\n    }\r\n    if (event instanceof NavigationError) {\r\n      this.uiLoaderService.loaderObservable.next([this.uiLoaderService.routeLoadingScreen, false])\r\n    }\r\n  }\r\n}\r\n","<!-- Toolbar -->\r\n<app-headers></app-headers>\r\n\r\n<app-notification-block *ngFor=\"let item of showNotification\" (click)='removeNotification(item[0])' [notifId]=\"item[0]\" [notifType]=\"item[1]\" [notifMsg]=\"item[2]\"></app-notification-block>\r\n\r\n<div class=\"home-blocks untouchable\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n<ngx-ui-loader class=\"loadin-screen route-loading-screen\" [loaderId]='uiLoaderService.routeLoadingScreen' [fgsType]='routeUILoaderType' [fgsColor]='uiLoaderColor' [pbColor]='uiLoaderColor'></ngx-ui-loader>\r\n<ngx-ui-loader class=\"loadin-screen api-loading-screen\" [loaderId]='uiLoaderService.apiLoadingScreen' [fgsType]='apiUILoaderType' [fgsColor]='uiLoaderColor' [pbColor]='uiLoaderColor'></ngx-ui-loader>\r\n<ngx-ui-loader class=\"loadin-screen login-loader-screen\" [loaderId]='uiLoaderService.loginLoaderScreen' [fgsType]='loginUILoaderType' [fgsColor]='uiLoaderColor' [pbColor]='uiLoaderColor'></ngx-ui-loader>\r\n<!-- Footer -->\r\n<app-contact-block></app-contact-block>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { NgxUiLoaderModule } from 'ngx-ui-loader';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeadersComponent } from './headers/headers.component';\r\nimport { TopHeaderComponent } from './headers/top-header/top-header.component';\r\nimport { BottomHeaderComponent } from './headers/bottom-header/bottom-header.component';\r\nimport { HomeBlocksComponent } from './home-blocks/home-blocks.component';\r\nimport { CarouselBlockComponent } from './home-blocks/carousel-block/carousel-block.component';\r\nimport { PopularCollectionBlockComponent } from './home-blocks/popular-collection-block/popular-collection-block.component';\r\nimport { NewArrivalsBlockComponent } from './home-blocks/new-arrivals-block/new-arrivals-block.component';\r\nimport { BestSellingBlockComponent } from './home-blocks/best-selling-block/best-selling-block.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ProductBlocksComponent } from './product-blocks/product-blocks.component';\r\nimport { ContactBlockComponent } from './contact-block/contact-block.component';\r\nimport { SortFilterBlockComponent } from './product-blocks/sort-filter-block/sort-filter-block.component';\r\nimport { ItemsBlockComponent } from './product-blocks/items-block/items-block.component';\r\n\r\nimport { ProductService } from './Utilities/services/products/product.service';\r\nimport { ProductItemComponent } from './product-blocks/items-block/product-item/product-item.component';\r\nimport { LoginService } from './Utilities/services/users/login.service';\r\nimport { UserService } from './Utilities/services/users/user.service';\r\nimport { AuthHelpers } from './interceptors/auth-helpers.interceptor';\r\nimport { UILoaderService } from './Utilities/services/ui-loader/ui-loader.service';\r\nimport { ErrorService } from './Utilities/services/error/error-handler.service';\r\nimport { NotificationBlockComponent } from './notification-block/notification-block.component';\r\nimport { NotificationService } from './Utilities/services/notfications/notification.service';\r\nimport { ProductKartService } from './Utilities/services/products/orders/product-kart.service';\r\nimport { ProductKartComponent } from './product-kart/product-kart.component';\r\nimport { AccountBlockComponent } from './account-block/account-block.component';\r\nimport { EditPersonalDetailsComponent } from './account-block/edit-personal-details/edit-personal-details.component';\r\nimport { EditAddressComponent } from './account-block/edit-address/edit-address.component';\r\nimport { ValidationService } from './Utilities/services/validation/validation.service';\r\nimport { AddressService } from './Utilities/services/users/address.service';\r\nimport { LandingPageService } from './Utilities/services/landing-page/landing-page.service';\r\nimport { HeaderService } from './Utilities/services/landing-page/header.service';\r\nimport { GlobalModelsService } from './Utilities/services/global/global-models.service';\r\nimport { ProductWishListService } from './Utilities/services/products/product-wishlist.service';\r\nimport { CheckOutComponent } from './check-out/check-out.component';\r\nimport { StripeBlockComponent } from './check-out/stripe-block/stripe-block.component';\r\nimport { SummaryBlockComponent } from './check-out/summary-block/summary-block.component';\r\nimport { UserAddressBlockComponent } from './check-out/stripe-block/user-address-block/user-address-block.component';\r\nimport { GuestDetailsBlockComponent } from './check-out/stripe-block/guest-details-block/guest-details-block.component';\r\nimport { CheckOutService } from './Utilities/services/products/orders/check-out.service';\r\nimport { LogoutService } from './Utilities/services/users/logout.service';\r\nimport { ProductSearchService } from './Utilities/services/products/product-search.service';\r\nimport { WishlistBlockComponent } from './wishlist-block/wishlist-block.component';\r\nimport { WishListService } from './Utilities/services/products/orders/wish-list.service';\r\nimport { ProductUtilService } from './Utilities/services/products/product-util.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeadersComponent,\r\n    TopHeaderComponent,\r\n    BottomHeaderComponent,\r\n    HomeBlocksComponent,\r\n    CarouselBlockComponent,\r\n    PopularCollectionBlockComponent,\r\n    NewArrivalsBlockComponent,\r\n    BestSellingBlockComponent,\r\n    ContactBlockComponent,\r\n    ProductBlocksComponent,\r\n    SortFilterBlockComponent,\r\n    ItemsBlockComponent,\r\n    ProductItemComponent,\r\n    NotificationBlockComponent,\r\n    ProductKartComponent,\r\n    AccountBlockComponent,\r\n    EditPersonalDetailsComponent,\r\n    EditAddressComponent,\r\n    CheckOutComponent,\r\n    StripeBlockComponent,\r\n    SummaryBlockComponent,\r\n    UserAddressBlockComponent,\r\n    GuestDetailsBlockComponent,\r\n    WishlistBlockComponent\r\n  ],\r\n  imports: [\r\n    NgxUiLoaderModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MDBBootstrapModule.forRoot()\r\n  ],\r\n  providers: [\r\n    // {provide: HTTP_INTERCEPTORS, useClass: AuthHelpers, multi: true}, \r\n    LandingPageService,\r\n    GlobalModelsService,\r\n    HeaderService,\r\n    NotificationService,\r\n    ErrorService,\r\n    UILoaderService,\r\n    ValidationService,\r\n    LoginService, \r\n    UserService,\r\n    AddressService,\r\n    ProductService,\r\n    ProductUtilService,\r\n    ProductSearchService,\r\n    ProductKartService,\r\n    WishListService,\r\n    ProductWishListService,\r\n    CheckOutService,\r\n    LogoutService\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../Utilities/services/users/user.service';\r\nimport { CheckOutService } from '../Utilities/services/products/orders/check-out.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-check-out',\r\n  templateUrl: './check-out.component.html',\r\n  styleUrls: ['./check-out.component.css']\r\n})\r\nexport class CheckOutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private checkOutService: CheckOutService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  totalAmount = 0\r\n  stripePublicKey = ''\r\n  currency = ''\r\n  checkOutCompleted = false;\r\n\r\n  customerLoggedIn: boolean\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.customerLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (userLoggedIn: boolean) => {\r\n        this.customerLoggedIn = userLoggedIn\r\n\r\n        if(!userLoggedIn) {\r\n          this.router.navigate(['/', 'home'])\r\n        }\r\n\r\n      }\r\n    )\r\n\r\n    this.checkOutService.checkOutObservable.subscribe(\r\n      (checkOutDone) => {\r\n        if(checkOutDone) {\r\n          let checkOut = this.checkOutService.getCheckOutDetails()\r\n          this.totalAmount = checkOut.amount\r\n          this.stripePublicKey = checkOut.stripePublicKey\r\n          this.currency = checkOut.currency\r\n        }\r\n        this.checkOutCompleted = checkOutDone\r\n      }\r\n    )\r\n\r\n    this.checkOutService.performCheckout();\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid stripe-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5 summary-block\">\r\n            <app-summary-block [totalCheckoutAmount]=\"totalAmount\"></app-summary-block>\r\n        </div>\r\n        <div class=\"col-md-7 stripe-block\">\r\n            <app-stripe-block *ngIf=\"checkOutCompleted\" [totalAmount]=\"totalAmount\" [currency]=\"currency\" [stripePublicKey]=\"stripePublicKey\"></app-stripe-block>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Guest } from 'src/app/Utilities/models/users/guest.model';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-guest-details-block',\r\n  templateUrl: './guest-details-block.component.html',\r\n  styleUrls: ['./guest-details-block.component.css']\r\n})\r\nexport class GuestDetailsBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private validationService: ValidationService\r\n  ) { }\r\n\r\n  @Output() guestModelEmitter = new EventEmitter<Guest>();\r\n  @Output() paymentReadyEmitter = new EventEmitter<boolean>();\r\n\r\n  editGuest: Guest\r\n  isEditable = true\r\n\r\n  errorMsg = ''\r\n  errorField =''\r\n\r\n  ngOnInit(): void {\r\n    this.editGuest = new Guest(0, '', '', '', '', '', '', '', '', '', 0)\r\n  }\r\n\r\n  validateAndProceed() {\r\n    this.errorMsg = 'Please follow the input field policy'\r\n    if(!this.validationService.validateText(this.editGuest.firstName, 120, 1)) {\r\n      this.errorField = 'firstName'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateText(this.editGuest.lastName, 120, 5)) {\r\n      this.errorField = 'lastName'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateEmail(this.editGuest.emailAddress, 255, 5)) {\r\n      this.errorField = 'emailAddress'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.streetAddress, 255, 1)) {\r\n      this.errorField = 'streetAddress'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.apartmentNumber, 10, 0)) {\r\n      this.errorField = 'apartmentNumber'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.city, 25, 1)) {\r\n      this.errorField = 'city'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.state, 30, 1)) {\r\n      this.errorField = 'state'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.country, 20, 1)) {\r\n      this.errorField = 'country'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editGuest.zipCode, 5, 0)) {\r\n      this.errorField = 'zipCode'\r\n      return false\r\n    }\r\n\r\n    this.guestModelEmitter.emit(this.editGuest)\r\n    this.paymentReadyEmitter.emit(true)\r\n    this.isEditable = false\r\n\r\n    this.errorMsg = ''\r\n    this.errorField = ''\r\n    return true;\r\n  }\r\n\r\n  makeEditable() {\r\n    this.isEditable = true;\r\n    this.paymentReadyEmitter.emit(false)\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid guest-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 guest-col\">\r\n            <div class=\"guest-det-blk\">\r\n                <fieldset class=\"field-set\">\r\n                    <legend>Please provide your shipping and payment details below</legend>\r\n                    <div class=\"edit-btn\" *ngIf=\"!isEditable\" (click)=\"makeEditable()\">\r\n                        <mdb-icon fas icon=\"edit\"></mdb-icon>\r\n                    </div>\r\n                    <div class=\"inpt-policy\">\r\n                        <div>\r\n                            <span class=\"policy-head\">Input Field Policy:</span>\r\n                        </div>\r\n                        <div class=\"inpt-policy-body\">\r\n                            <ul class=\"policy-ul\">\r\n                                <li>Name field should contain only alphabets</li>\r\n                                <li>Email should be valid</li>\r\n                                <li>Address fields should contain only <pre>. : -</pre> as special characters</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <span class=\"error-msg\">{{errorMsg}}</span>\r\n                    <form class=\"guest-form\" (submit)=\"validateAndProceed()\">\r\n                        <table class=\"table\">\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">First Name:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'firstName'\" name=\"firstName\" [(ngModel)]=\"editGuest.firstName\" placeholder=\"Rick\" [disabled]='!isEditable' maxlength='120' minlength='5'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Last Name:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'lastName'\" name=\"lastName\" [(ngModel)]=\"editGuest.lastName\" placeholder=\"Grimes\" [disabled]='!isEditable' maxlength='120' minlength='5'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Email:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'emailAddress'\" name=\"emailAddress\" [(ngModel)]=\"editGuest.emailAddress\" placeholder=\"rick.grimes@gmail.com\" [disabled]='!isEditable' maxlength='255' minlength='5'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Apartment:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'apartmentNumber'\" name=\"apartmentNumber\" [(ngModel)]=\"editGuest.apartmentNumber\" placeholder=\"221B\" [disabled]='!isEditable' maxlength='10' minlength='0'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Street:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'streetAddress'\" name=\"streetAddress\" [(ngModel)]=\"editGuest.streetAddress\" placeholder=\"Baker Street\" [disabled]='!isEditable' maxlength='255' minlength='1'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">City:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'city'\" name=\"city\" [(ngModel)]=\"editGuest.city\" placeholder=\"London\" [disabled]='!isEditable' maxlength='25' minlength='1'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">State:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'state'\" name=\"state\" [(ngModel)]=\"editGuest.state\" placeholder=\"Marylebone\" [disabled]='!isEditable' maxlength='30' minlength='1'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Country:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'country'\" name=\"country\" [(ngModel)]=\"editGuest.country\" placeholder=\"United Kingdom\" [disabled]='!isEditable' maxlength='20' minlength='1'>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"guest-row\">\r\n                                <td>\r\n                                    <label class=\"guest-lbl\">Zip Code:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input class=\"guest-input\" [class.input-error]=\"errorField === 'zipCode'\" name=\"zipCode\" [(ngModel)]=\"editGuest.zipCode\" placeholder=\"NW16XE\" [disabled]='!isEditable' maxlength='5' minlength='0'>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                        <div class=\"col-md-12 save-guest-blk\">\r\n                            <span class=\"save-info\">*Save before proceeding for payment</span>\r\n                            <button type=\"submit\" class=\"btn j-btn j-btn-allow save-guest-btn\" mdbWavesEffect>Save</button>\r\n                        </div>\r\n                    </form>\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<div class=\"container-fluid stripe-cntr untouchable\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 check-out-header\">\r\n            <div class=\"head-label\">\r\n                <h2>Checkout</h2>\r\n            </div>\r\n            <hr class=\"check-out-hr hr-1\">\r\n        </div>\r\n        <div class=\"col-md-12 check-out-body\">\r\n            <app-user-address-block *ngIf=\"userLoggedIn\" (paymentReadyEmitter)=\"readyPayment($event)\" (addressIDEmitter)=\"getUserAddressID($event)\"></app-user-address-block>\r\n            <app-guest-details-block *ngIf=\"!userLoggedIn\" (paymentReadyEmitter)=\"readyPayment($event)\" (guestModelEmitter)=\"getGuest($event)\"></app-guest-details-block>\r\n        </div>\r\n        <div class=\"col-md-12 stripe-blk\">\r\n            <form class=\"form\" (submit)=\"handleForm($event)\">\r\n\r\n                <label class=\"card-lbl\" for=\"card-element\">Use Credit or debit card</label>\r\n                <!-- Used to display Element errors. -->\r\n                <p class=\"card-error-msg\">{{ cardErrors }}</p>\r\n                <div class=\"stripe-card-blk\" #cardElement>\r\n                    <!-- A Stripe Element will be inserted here. -->\r\n                </div>\r\n\r\n                <button class=\"btn j-btn card-button\" [class.j-btn-allow]=\"paymentReady\" mdbWavesEffect>Pay ${{ 1000 / 100 }}.00</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { Guest } from 'src/app/Utilities/models/users/guest.model';\r\nimport { CheckOutService } from 'src/app/Utilities/services/products/orders/check-out.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Customer } from 'src/app/Utilities/models/users/customer.model';\r\nimport { ChargeRequest } from 'src/app/Utilities/models/products/orders/charge-request.mode';\r\n\r\ndeclare var Stripe: stripe.StripeStatic;\r\n\r\n@Component({\r\n  selector: 'app-stripe-block',\r\n  templateUrl: './stripe-block.component.html',\r\n  styleUrls: ['./stripe-block.component.css']\r\n})\r\nexport class StripeBlockComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(\r\n    private checkOutService: CheckOutService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  @Input() totalAmount = 0\r\n  @Input() currency = 'USD'\r\n  @Input() stripePublicKey = ''\r\n\r\n  userLoggedIn = false;\r\n\r\n  customerDetails: Customer\r\n\r\n  userAddressID = 0;\r\n  guest: Guest;\r\n  paymentReady = false;\r\n\r\n  @ViewChild('cardElement') cardElement: ElementRef;\r\n\r\n  stripe: stripe.Stripe;\r\n  card;\r\n  \r\n  cardErrors;\r\n\r\n  loading = false;\r\n  confirmation;\r\n\r\n  ngOnInit(): void {\r\n    this.userLoggedIn = this.userService.customerLoggedIn\r\n\r\n    if(this.userLoggedIn) {\r\n      this.customerDetails = this.userService.getCustomerDetails()\r\n    }\r\n\r\n    this.userService.customerLoggedInObserver.subscribe (\r\n      (localUserLoggedIn) => {\r\n        this.userLoggedIn = localUserLoggedIn\r\n\r\n        if(this.userLoggedIn)\r\n          this.customerDetails = this.userService.getCustomerDetails()\r\n      }\r\n    )\r\n\r\n  }\r\n    \r\n  ngAfterViewInit(): void {\r\n    console.log(this.cardElement)\r\n  \r\n    this.stripe = Stripe(this.stripePublicKey);\r\n    const elements = this.stripe.elements();\r\n    this.card = elements.create('card');\r\n\r\n    this.card.mount(this.cardElement.nativeElement);\r\n\r\n    this.card.addEventListener('change', ({ error }) => {\r\n        this.cardErrors = error && error.message;\r\n    });\r\n\r\n  }\r\n\r\n  async handleForm(e) {\r\n    e.preventDefault();\r\n\r\n    if(this.paymentReady) {\r\n\r\n      let email = ''\r\n      if(this.guest != null && !this.userLoggedIn) {\r\n        email = this.guest.emailAddress\r\n      } else {\r\n        email = this.customerDetails.emailAddress\r\n      }\r\n\r\n      const { token, error } = await this.stripe.createToken(\r\n        this.card,\r\n        {\r\n          name: email,\r\n          currency: this.currency\r\n        }\r\n      );\r\n  \r\n      if (error) {\r\n        this.cardErrors = error.message;\r\n      } else {\r\n        console.log('Token response ==> ', token)\r\n        let chargeRequest = new ChargeRequest('' , this.totalAmount ,'' ,'' ,'' , 0, null)\r\n        if(this.userLoggedIn)\r\n          chargeRequest = new ChargeRequest('', this.totalAmount, '', email, token.id, this.userAddressID, null)\r\n        else\r\n          chargeRequest = new ChargeRequest('', this.totalAmount, '', email, token.id, 0, this.guest)\r\n\r\n          this.checkOutService.chargeCustomer(chargeRequest)\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  readyPayment(paymentStatus: boolean) {\r\n    this.paymentReady = paymentStatus\r\n    console.log('payment status ====> ',  this.paymentReady)\r\n  }\r\n\r\n  getGuest(guestDetails: Guest) {\r\n    this.guest = guestDetails\r\n  }\r\n\r\n  getUserAddressID(addressID: number) {\r\n    this.userAddressID = addressID\r\n    console.log('Address ID ====> ', this.userAddressID)\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Renderer2, Output, EventEmitter } from '@angular/core';\r\nimport { Address } from 'src/app/Utilities/models/users/address.model';\r\nimport { AddressService } from 'src/app/Utilities/services/users/address.service';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-address-block',\r\n  templateUrl: './user-address-block.component.html',\r\n  styleUrls: ['./user-address-block.component.css']\r\n})\r\nexport class UserAddressBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private addressService: AddressService,\r\n    private userService: UserService,\r\n    private validationService: ValidationService\r\n  ) { }\r\n\r\n  fieldMax = 255\r\n  fieldMin = 5\r\n\r\n  @Output() addressIDEmitter = new EventEmitter<number>();\r\n  @Output() paymentReadyEmitter = new EventEmitter<boolean>();\r\n\r\n  legend = 'Click to add new address..!!!'\r\n\r\n  editAddress: Address;\r\n  errorMsg = ''\r\n  errorField = ''\r\n\r\n  userAddresses: Address[] = []\r\n  checkedAddrID = 0\r\n\r\n  addrFormOpen = false;\r\n\r\n  ngOnInit(): void {\r\n    let customer = this.userService.getCustomerDetails()\r\n    this.editAddress = new Address(0, customer.customerID, '', '', '', '', '', '', false, false, '')\r\n\r\n    this.addressService.addressLoadedObserver.subscribe(\r\n      (localAddressesLoaded) => {\r\n        if(localAddressesLoaded)\r\n          this.userAddresses = this.addressService.getUserAddresses()\r\n          \r\n        if(this.userAddresses != null && this.userAddresses.length > 0) {\r\n          this.emitNewAddressID(this.userAddresses[0], 0)\r\n        }\r\n      }\r\n    )\r\n\r\n    this.addressService.fetchUserAddress()\r\n\r\n  }\r\n\r\n  \r\n  openCloseNewAddressForm() {\r\n    let addrFrom = document.getElementById('entire-form-id')\r\n    let addrFieldSet = document.getElementById('field-set-1')\r\n\r\n    if(!this.addrFormOpen) {\r\n      this.renderer.addClass(addrFrom, 'entire-form-open')\r\n      this.renderer.addClass(addrFieldSet, 'field-set-border')\r\n    }\r\n    else {\r\n      this.renderer.removeClass(addrFrom, 'entire-form-open')\r\n      this.renderer.removeClass(addrFieldSet, 'field-set-border')\r\n    }\r\n\r\n    this.addrFormOpen = !this.addrFormOpen\r\n  }\r\n\r\n  emitNewAddressID(addr: Address, index: number) {\r\n    this.checkedAddrID = index\r\n    this.addressIDEmitter.emit(addr.addressID)\r\n    this.paymentReadyEmitter.emit(true)\r\n  }\r\n\r\n  addNewAddress() {\r\n    let check = this.validateAddressFields()\r\n    console.log('User address check ==> ', check)\r\n    if(check) {\r\n      this.addressService.saveAddress(this.editAddress);\r\n      this.openCloseNewAddressForm()\r\n      this.legend = 'Select the new address above'\r\n    }\r\n  }\r\n  \r\n  validateAddressFields() {\r\n    this.errorMsg = 'Please follow input field policy'\r\n    if(!this.validationService.validateAddress(this.editAddress.apartmentNumber, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'APN'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.street, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'STR'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.city, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'CTY'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.state, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'STA'\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateAddress(this.editAddress.country, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'CTR'\r\n      return false;\r\n    }\r\n    \r\n    if(!this.validationService.validateAddress(this.editAddress.zipCode, this.fieldMax, this.fieldMin)) {\r\n      this.errorField = 'ZIP'\r\n      return false;\r\n    }\r\n\r\n    this.errorField = ''\r\n    this.errorMsg = ''\r\n    return true;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"col-md-12 addr-blk\">\r\n    <div class=\"user-addr\">\r\n        <div class=\"check-out-hdr\">\r\n            <span class=\"info-head\">Choose address and proceed to payment</span>\r\n        </div>\r\n        <div class=\"prev-addr\">\r\n            <!-- Default unchecked -->\r\n            <div class=\"custom-control custom-radio addr-radio\" *ngFor=\"let addr of userAddresses; let i = index\" mdbWavesEffect (click)=\"emitNewAddressID(addr, i)\">\r\n                <input type=\"radio\" class=\"custom-control-input addr-radio-input\" [id]=\"'defaultUnchecked' + addr.addressID\" name=\"defaultExampleRadios\" [checked]=\"i == checkedAddrID\" mdbInput>\r\n                <label class=\"custom-control-label addr-radio-label\" [for]=\"'defaultUnchecked' + addr.addressID\">{{addr.apartmentNumber}}, {{addr.street}}</label>\r\n            </div>\r\n        </div>\r\n        <fieldset id=\"field-set-1\" class=\"field-set\">\r\n            <legend (click)=\"openCloseNewAddressForm()\" mdbWavesEffect>{{legend}}</legend>\r\n            <div id=\"entire-form-id\" class=\"entire-form\">\r\n                <div class=\"addr-policy\">\r\n                    <div>\r\n                        <span class=\"policy-head\">Input Field Policy</span>\r\n                    </div>\r\n                    <div class=\"addr-policy-body\">\r\n                        <ul class=\"policy-ul\">\r\n                            <li>Address fields should contain only <pre>. : -</pre> as special characters</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"error-msg\">\r\n                    <span>{{errorMsg}}</span>\r\n                </div>\r\n                <form (submit)=\"addNewAddress()\" class=\"form\" id=\"new-addr-form\">\r\n                    <table class=\"user-form-table\">\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>Apartment</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.apartmentNumber\" [class.error-input]=\"errorField === 'APN'\" type=\"text\" name=\"apartment\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>Street</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.street\" [class.error-input]=\"errorField === 'STR'\" type=\"text\" name=\"Street\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>City</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.city\" [class.error-input]=\"errorField === 'CTY'\" type=\"text\" name=\"City\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>State</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.state\" [class.error-input]=\"errorField === 'STA'\" type=\"text\" name=\"State\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>Country</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.country\" [class.error-input]=\"errorField === 'CTR'\" type=\"text\" name=\"Country\">\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"user-form-row\">\r\n                            <td class=\"user-form-label\"><span>Zip Code/ Postal Code</span></td>\r\n                            <td class=\"user-form-input\">\r\n                                <input class=\"form-control addr-input\" [(ngModel)]=\"editAddress.zipCode\" [class.error-input]=\"errorField === 'ZIP'\" type=\"text\" name=\"zipCode\">\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <div class=\"save-addr-btn\">\r\n                        <button class=\"btn j-btn j-btn-allow save-btn\" type=\"submit\" mdbWavesEffect>Add New Address</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ProductKart } from 'src/app/Utilities/models/products/orders/product-kart.model';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\n\r\n@Component({\r\n  selector: 'app-summary-block',\r\n  templateUrl: './summary-block.component.html',\r\n  styleUrls: ['./summary-block.component.css']\r\n})\r\nexport class SummaryBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private kartService: ProductKartService\r\n  ) { }\r\n\r\n  kartProducts: ProductKart[] = []\r\n\r\n  @Input() totalCheckoutAmount: number = 0\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.kartService.kartCountLoadedObserver.subscribe(\r\n      (kartCount: number) => {\r\n        if(kartCount > 0)\r\n          this.kartProducts = this.kartService.getKartProducts()\r\n        else\r\n          this.kartProducts = []\r\n      }\r\n    )\r\n\r\n    this.kartService.fetchUserKart();\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid summary-container untouchable wow animate slideInLeft\" data-wow-duration=\"1s\" data-wow-delay=\"0.6s\">\r\n    <div class=\"co-pr\">\r\n        <div class=\"co-pr-head\">\r\n            <span class=\"info-head\">Summary: </span>\r\n            <p class=\"issue-head\">*something's odd, edit\r\n                <a [routerLink]=\"['/', 'ui-kart']\">here!!!</a>\r\n            </p>\r\n        </div>\r\n        <div class=\"co-pr-items\">\r\n            <div class=\"row co-pr-items\">\r\n                <div class=\"col-md-12 co-pr-item\" *ngFor=\"let cItem of kartProducts\">\r\n                    <div class=\"pr-item\">\r\n                        <div class=\"pr-item-vis-img\">\r\n                            <img class=\"pr-img\" [src]=\"cItem.product.imagePath\">\r\n                        </div>\r\n                        <div class=\"pr-item-vis-name\">\r\n                            <span class=\"pr-name\">{{cItem.product.productName}}</span>\r\n                        </div>\r\n                        <div class=\"pr-item-vis-price\">\r\n                            <span class=\"pr-price pr-dis\">${{cItem.product.discountedPrice}}</span>\r\n                            <span class=\"pr-price pr-mul\">x</span>\r\n                            <span class=\"pr-price pr-qty\">{{cItem.quantity}}</span>\r\n                            <span class=\"pr-price pr-eq\">=</span>\r\n                            <span class=\"pr-price pr-tot\">${{cItem.quantity * cItem.product.discountedPrice}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"amt-cont\">\r\n            <div class=\"f-sub\">\r\n                <table class=\"sub-table\">\r\n                    <tr class=\"sub-total\">\r\n                        <td class=\"sub-label\">Subtotal</td>\r\n                        <td class=\"sub-value\">${{totalCheckoutAmount}}/-</td>\r\n                    </tr>\r\n                    <tr class=\"sub-ship\">\r\n                        <td class=\"sub-label\">Shipping</td>\r\n                        <td class=\"sub-value free-val\">free</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n            <hr>\r\n            <div class=\"f-amt\">\r\n                <table class=\"f-table\">\r\n                    <tr class=\"f-tr\">\r\n                        <td class=\"f-label\">Total</td>\r\n                        <td class=\"f-value\">${{totalCheckoutAmount}}/-</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-block',\r\n  templateUrl: './contact-block.component.html',\r\n  styleUrls: ['./contact-block.component.css']\r\n})\r\nexport class ContactBlockComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid contact-container\">\r\n    <!-- Footer -->\r\n    <footer class=\"page-footer font-small mdb-color pt-4\">\r\n\r\n        <!-- Footer Links -->\r\n        <div class=\"container text-center text-md-left\">\r\n\r\n            <!-- Footer links -->\r\n            <div class=\"row text-center text-md-left mt-3 pb-3\">\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-3 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                    <h6 class=\"text-uppercase mb-4 font-weight-bold company-header\">JEWELERY</h6>\r\n                    <p>\r\n                        Here we sell exactly what you need...!!!\r\n                    </p>\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n                <hr class=\"w-100 clearfix d-md-none\">\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mt-3\">\r\n                    <h6 class=\"text-uppercase mb-4 font-weight-bold\">OVERVIEW</h6>\r\n                    <p>\r\n                        <a href=\"\">About Us</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"\">Contact Us</a>\r\n                    </p>\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n                <hr class=\"w-100 clearfix d-md-none\">\r\n\r\n                <div class=\"col-md-3 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                    <h6 class=\"text-uppercase mb-4 font-weight-bold\">CUSTOMER DELIGHT</h6>\r\n                    <p>\r\n                        <a href=\"#!\">Return, Exchange & Shipping Policy</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"#!\">FAQs</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"#!\">Track Your Order</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"#!\">Terms & Conditions and Privacy Policy</a>\r\n                    </p>\r\n                </div>\r\n\r\n                <!-- Grid column -->\r\n                <hr class=\"w-100 clearfix d-md-none\">\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                    <h6 class=\"text-uppercase mb-4 font-weight-bold\">GET IN TOUCH</h6>\r\n\r\n                    <p>\r\n                        <mdb-icon fas icon=\"phone\" class=\"mr-3\"></mdb-icon>\r\n                        <a href=\"tel:+1-303-499-7111\" class=\"tel\">+1 (303) 499-7111</a>\r\n                    </p>\r\n                    <hr class=\"add-div\">\r\n                    <p>\r\n                        <mdb-icon fas icon=\"envelope\" class=\"mr-3\"></mdb-icon>\r\n                        <a href=\"mailto:info@example.com\" class=\"email\">info@example.com</a>\r\n                    </p>\r\n                    <hr class=\"add-div\">\r\n                    <p>\r\n                        <mdb-icon fas icon=\"home\" class=\"mr-3\"></mdb-icon> New York, NY 10012, US\r\n                    </p>\r\n                    <hr class=\"add-div\">\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n            </div>\r\n            <!-- Footer links -->\r\n\r\n            <hr class=\"contact-div\">\r\n\r\n            <!-- Grid row -->\r\n            <div class=\"row d-flex align-items-center\">\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-7 col-lg-8\">\r\n\r\n                    <!--Copyright-->\r\n                    <p class=\"text-center text-md-left\">© 2020 Copyright:\r\n                        <a href=\"\">\r\n                            <strong>Jwellery</strong>\r\n                        </a>\r\n                    </p>\r\n\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-5 col-lg-4 ml-lg-0\">\r\n\r\n                    <!-- Social buttons -->\r\n                    <div class=\"text-center text-md-right\">\r\n                        <ul class=\"list-unstyled list-inline\">\r\n                            <li class=\"list-inline-item\">\r\n                                <a mdbBtn floating=\"true\" size=\"sm\" class=\"rgba-white-slight mx-1\" mdbWavesEffect>\r\n                                    <mdb-icon fab icon=\"facebook\"></mdb-icon>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"list-inline-item\">\r\n                                <a mdbBtn floating=\"true\" size=\"sm\" class=\"rgba-white-slight mx-1\" mdbWavesEffect>\r\n                                    <mdb-icon fab icon=\"twitter\"></mdb-icon>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"list-inline-item\">\r\n                                <a mdbBtn floating=\"true\" size=\"sm\" class=\"rgba-white-slight mx-1\" mdbWavesEffect>\r\n                                    <mdb-icon fab fab icon=\"instagram\"></mdb-icon>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n\r\n                <!-- Grid column -->\r\n                <div class=\"col-md-12 contact-dev-div\">\r\n                    <p class=\"text-center contact-dev-p\">\r\n                        Like what you see,\r\n                        <a class=\"mail-el\" href=\"mailto:info@example.com\">Give feedback to Developers..!!</a>\r\n                    </p>\r\n                </div>\r\n                <!-- Grid column -->\r\n\r\n            </div>\r\n            <!-- Grid row -->\r\n\r\n        </div>\r\n        <!-- Footer Links -->\r\n\r\n    </footer>\r\n    <!-- Footer -->\r\n</div>","import { Component, OnInit, Renderer2, Input } from '@angular/core';\r\nimport { Category } from 'src/app/Utilities/models/global-models/category.model';\r\nimport { SubCategory } from 'src/app/Utilities/models/global-models/sub-category.model';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\nimport { Collection } from 'src/app/Utilities/models/global-models/collection.model';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/Utilities/services/products/product.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\n\r\n@Component({\r\n  selector: 'app-bottom-header',\r\n  templateUrl: './bottom-header.component.html',\r\n  styleUrls: ['./bottom-header.component.css']\r\n})\r\nexport class BottomHeaderComponent implements OnInit {\r\n\r\n  \r\n  searchTerm: string = '';\r\n\r\n  activeHeader = 'home';\r\n  hoveredHeader = 'home';\r\n\r\n  bagCount = '00';\r\n  wishlistCount = '00';\r\n\r\n  productSearchActive = false;\r\n\r\n  @Input() womens = new Map<Category, SubCategory[]>();\r\n  @Input() mens = new Map<Category, SubCategory[]>();\r\n  @Input() kids = new Map<Category, SubCategory[]>();\r\n\r\n  @Input() womensLoaded: boolean;\r\n  @Input() mensLoaded: boolean;\r\n  @Input() kidsLoaded: boolean;\r\n  \r\n  @Input() collections: Collection[]\r\n\r\n  @Input() collectionsLoaded: boolean;\r\n\r\n  toolTipHtml = ''\r\n\r\n  navbar: {head: string, load: boolean, data: Map<Category, SubCategory[]>}[] = [];\r\n  isUserLoggedIn = false;\r\n\r\n  constructor(\r\n    private render: Renderer2,\r\n    private productService: ProductService,\r\n    private productKartService: ProductKartService,\r\n    private userService: UserService,\r\n    private wishListService: WishListService,\r\n    private router: Router\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isUserLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localCustomerLoggedIn) => this.isUserLoggedIn = localCustomerLoggedIn\r\n    )\r\n    \r\n    this.navbar.push(\r\n      {head: 'womens', load: this.womensLoaded, data: this.womens},\r\n      {head: 'mens', load: this.mensLoaded, data: this.mens},\r\n      {head: 'kids', load: this.kidsLoaded, data: this.kids}\r\n    )\r\n    \r\n    console.log('Local navbar ====> ', this.navbar)\r\n\r\n    this.productService.allProductsObserver.subscribe(\r\n      () => this.searchTerm = ''\r\n    )\r\n\r\n    if(this.productKartService.kartCount > 0) {\r\n      this.setKartCount(this.productKartService.kartCount)\r\n    }\r\n\r\n    if(this.wishListService.wishListLoaded) {\r\n      let localWishListCount = this.wishListService.getWishList().wishListProducts.length\r\n      this.setWishListCount(localWishListCount)\r\n    }\r\n\r\n    this.productKartService.kartCountLoadedObserver.subscribe (\r\n      (kartCount: number) => {\r\n        this.setKartCount(this.productKartService.kartCount)\r\n      }\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded) {\r\n          let localWishListCount = this.wishListService.getWishList().wishListProducts.length\r\n          this.setWishListCount(localWishListCount)\r\n        } else {\r\n          this.wishlistCount = '00'\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  setKartCount(localKartCount: number) {\r\n    if(localKartCount < 10)\r\n      this.bagCount = '0' + localKartCount.toString();\r\n    else if(localKartCount >= 10)\r\n      this.bagCount = localKartCount.toString()\r\n    else\r\n      this.bagCount = '00'\r\n  }\r\n\r\n  setWishListCount(wishListCount: number) {\r\n    if(wishListCount < 10)\r\n      this.wishlistCount = '0' + wishListCount.toString()\r\n    else\r\n      this.wishlistCount = wishListCount.toString()\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Please, DO NOT TOUCH THE BELOW METHOD !!!\r\n   * \r\n   * If user hover on one of the navbar's, then\r\n   * 1. Check if its not home, only perform operation on others\r\n   * 2. check if the hovered nav item has data to open\r\n   * 3. Then perform entire page operation for Womens, other for others \r\n   * \r\n   * @param status \r\n   */\r\n  setHovered(type: string, status: boolean) {\r\n    this.activeHeader = type\r\n    if(type !== 'home') {\r\n      const angleDown = document.getElementById(type + '-angle-down')\r\n      const optionstab = document.getElementById(type);\r\n\r\n      if(status) {\r\n        this.hoveredHeader = type;\r\n        this.render.setStyle(angleDown, 'transform', 'rotate(90deg)')\r\n      }\r\n      else {\r\n        this.hoveredHeader = ''\r\n        this.render.removeStyle(angleDown, 'transform',)\r\n      }\r\n\r\n      this.render.removeStyle(optionstab, 'height');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Please, DO NOT TOUCH THE BELOW METHOD !!!\r\n   * \r\n   * If user hover on one of the navbar's, then\r\n   * 1. Check if its not home, only perform operation on others\r\n   * 2. check if the hovered nav item has data to open\r\n   * 3. Check if the data is already open, perfrom differently when open & closed\r\n   * 4. Then perform entire page operation for Womens, other for others \r\n   * \r\n   * @param status \r\n   */\r\n  openOrCloseOptions(type: string) {\r\n    this.activeHeader = type\r\n    if(type !== 'home') {\r\n      const optionstab = document.getElementById(type);\r\n      const angleDown = document.getElementById(type + '-angle-down')\r\n      if(type !== 'collections') {\r\n        if(type === this.hoveredHeader) {\r\n          this.render.setStyle(optionstab, \"height\", '0px');\r\n          this.render.removeStyle(angleDown, 'transform',)\r\n          this.hoveredHeader = ''\r\n        } else {\r\n          this.render.setStyle(optionstab, \"height\", '320px');\r\n          this.render.setStyle(angleDown, 'transform', 'rotate(90deg)')\r\n          this.hoveredHeader = type\r\n        }\r\n      } else {\r\n        if(type === this.hoveredHeader) {\r\n          this.render.setStyle(optionstab, \"height\", '0px');\r\n          this.render.removeStyle(angleDown, 'transform',)\r\n          this.hoveredHeader = ''\r\n        } else {\r\n          this.render.setStyle(optionstab, \"height\", '200px');\r\n          this.render.setStyle(angleDown, 'transform', 'rotate(90deg)')\r\n          this.hoveredHeader = 'collections'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  changeSearchBoxColor(status: boolean) {\r\n    this.productSearchActive = status;\r\n  }\r\n\r\n  searchProducts() {\r\n    if(this.searchTerm != null && this.searchTerm.length >= 4) {\r\n      this.router.navigate(['/', 'ui-products', 'search'], {queryParams: {query: this.searchTerm}})\r\n    }\r\n  }\r\n\r\n  setTooltip(message: string) {\r\n    this.toolTipHtml = message\r\n  }\r\n\r\n}\r\n","<div class=\"container bottom-header-container untouchable\">\r\n    <div class=\"row\">\r\n        <!-- <div class=\"col-md-3 logo-contianer\">\r\n            <img id=\"logo\" src=\"assets/logo.png\">\r\n        </div> -->\r\n        <div class=\"col-md-12 header-items\">\r\n            <div class=\"row\">\r\n                <!--Navbar-->\r\n                <mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark bottom-header-color\" class=\"bottom-header-mdb\" [containerInside]=\"false\" mdbStickyHeader>\r\n\r\n                    <a class=\"navbar-brand\" [routerLink]=\"['home']\"><img id=\"logo\" src=\"assets/logo.png\"></a>\r\n                    <!-- Collapsible content -->\r\n                    <links>\r\n\r\n                        <!-- Links -->\r\n                        <ul class=\"navbar-nav mr-3\">\r\n                            <li class=\"nav-item nav-bar-item\">\r\n                                <a class=\"nav-link var-colors waves-light\" [routerLink]=\"['home']\" (mouseover)=\"setHovered('home', true)\" (mouseleave)=\"setHovered('home', false)\" mdbWavesEffect>\r\n                                    HOME\r\n                                    <span [class.ul-active]=\"activeHeader=='home'\" class=\"underline\"></span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item nav-bar-item\" *ngFor=\"let navBarItem of navbar\">\r\n                                <a class=\"nav-link var-colors waves-light\" (click)=\"openOrCloseOptions(navBarItem.head)\" (mouseover)=\"setHovered(navBarItem.head, true)\" (mouseleave)=\"setHovered(navBarItem.head, false)\" mdbWavesEffect> {{navBarItem.head | uppercase}}\r\n                                    <mdb-icon fas icon=\"angle-right\" class=\"angle-icon\" [id]=\"navBarItem.head + '-angle-down'\"></mdb-icon>\r\n                                    <span [class.ul-active]=\"activeHeader==navBarItem.head\" class=\"underline\"></span>\r\n                                </a>\r\n                                <div class=\"dropdown-content mega-dropdown-menu\" *ngIf=\"navBarItem.load\" [id]=\"navBarItem.head\">\r\n                                    <div class=\"row mega_list\">\r\n                                        <div class=\"column\" *ngFor=\" let item of navBarItem.data | keyvalue\">\r\n                                            <h3 class=\"col-header\" [routerLink]=\"['ui-products', 'search']\" [queryParams]=\"{'section': navBarItem.head, 'categoryType': item.key.categoryName}\">\r\n                                                {{item.key.categoryName}}\r\n                                            </h3>\r\n                                            <hr class=\"options-head-div\">\r\n                                            <a class=\"option-items\" [routerLink]=\"['ui-products', 'search']\" [queryParams]=\"{'section': navBarItem.head, 'categoryType': item.key.categoryName, 'catergorySubType': option.subCategoryName}\" *ngFor=\"let option of item.value\">\r\n                                                {{option.subCategoryName}}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <li class=\"nav-item nav-bar-item\">\r\n                                <a class=\"nav-link var-colors waves-light\" (mouseover)=\"setHovered('collections', true)\" (mouseleave)=\"setHovered('collections', false)\" (click)=\"openOrCloseOptions('collections')\" mdbWavesEffect>\r\n                                    COLLECTIONS\r\n                                    <mdb-icon fas icon=\"angle-right\"  class=\"angle-icon\" id=\"collections-angle-down\"></mdb-icon>\r\n                                    <span [class.ul-active]=\"activeHeader=='collections'\" class=\"underline\"></span>\r\n                                </a>\r\n                                <ul id=\"hovered-options\" id=\"collections\" *ngIf=\"collectionsLoaded\" class=\"col-mega-dropdown-menu list-unstyled\">\r\n                                    <li class=\"col-mega_list\">\r\n                                        <ul class=\"list-unstyled clct-list\">\r\n                                            <hr class=\"options-head-div\">\r\n                                            <li class=\"option-items\" [routerLink]=\"['ui-products', 'collections', option.collectionName]\" *ngFor=\"let option of collections\">\r\n                                                {{option.collectionName}}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <div class=\"md-form product-search my-0\" [class.product-search-active]=\"productSearchActive\">\r\n                            <input class=\"form-control mr-sm-2 search-box\" [(ngModel)]=\"searchTerm\" (focus)=\"changeSearchBoxColor(true)\" (blur)=\"changeSearchBoxColor(false)\" type=\"text\" placeholder=\"Search for products\" minlength=4 aria-label=\"Search\">\r\n                            <mdb-icon class=\"search-btn\" fas icon=\"search\" (click)=\"searchProducts()\"></mdb-icon>\r\n                        </div>\r\n                        <!-- Links -->\r\n\r\n                        <ul class=\"navbar-nav ml-auto nav-flex-icons\">\r\n                            <li class=\"nav-item\">\r\n                                <div class=\"wishlist-bag shop-icons\">\r\n                                    <a class=\"nav-link var-colors-icons\">\r\n                                        <mdb-icon *ngIf=\"!isUserLoggedIn\" far icon=\"heart\" [mdbTooltip]=\"popTemplate\" (mouseenter)=\"setTooltip('Login to see the wishlist')\" placement=\"left\" class=\"shop-icon wishlist-icon\"></mdb-icon>\r\n                                        <mdb-icon *ngIf=\"isUserLoggedIn\" [routerLink]=\"['ui-wishlist']\" [mdbTooltip]=\"popTemplate\" (mouseenter)=\"setTooltip('Click to see the wishlist')\" placement=\"left\" fas icon=\"heart\" class=\"shop-icon wishlist-icon\"></mdb-icon>\r\n                                        <span *ngIf=\"isUserLoggedIn && wishlistCount > '00'\" class=\"items-count wishlist-items-count\">{{wishlistCount}}</span>\r\n                                    </a>\r\n                                </div>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link var-colors-icons var-colors-icons-last\" [routerLink]=\"['ui-kart']\">\r\n                                    <div class=\"shopping-bag shop-icons\">\r\n                                        <mdb-icon fas icon=\"shopping-bag\" [mdbTooltip]=\"popTemplate\" (mouseenter)=\"setTooltip('Click to see the cart')\" placement=\"left\" class=\"shop-icon shopping-bag-icon\"></mdb-icon>\r\n                                        <span *ngIf=\"bagCount > '00'\" class=\"items-count bag-items-count\">{{bagCount}}</span>\r\n                                    </div>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </links>\r\n                    <!-- Collapsible content -->\r\n\r\n                </mdb-navbar>\r\n                <!--/.Navbar-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #popTemplate>\r\n    <div [innerHtml]=\"toolTipHtml\"></div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from '../Utilities/models/global-models/category.model';\r\nimport { SubCategory } from '../Utilities/models/global-models/sub-category.model';\r\nimport { LandingPageService } from '../Utilities/services/landing-page/landing-page.service';\r\nimport { Collection } from '../Utilities/models/global-models/collection.model';\r\nimport { HeaderService } from '../Utilities/services/landing-page/header.service';\r\n\r\n@Component({\r\n  selector: 'app-headers',\r\n  templateUrl: './headers.component.html',\r\n  styleUrls: ['./headers.component.css']\r\n})\r\nexport class HeadersComponent implements OnInit {\r\n\r\n  constructor(\r\n    private headerService: HeaderService\r\n  ) { }\r\n\r\n  womens = new Map<Category, SubCategory[]>();\r\n  mens = new Map<Category, SubCategory[]>();\r\n  kids = new Map<Category, SubCategory[]>();\r\n  \r\n  collections: Collection[]\r\n\r\n  womensLoaded:boolean = false;\r\n  mensLoaded:boolean = false;\r\n  kidsLoaded:boolean = false;\r\n  collectionsLoaded:boolean = false;\r\n\r\n  navBarLoaded = false;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.headerService.headersLoaded.subscribe (\r\n      (localLoaded) => {\r\n        if(localLoaded) {\r\n          this.womens = this.headerService.getWomensHeaders()\r\n\r\n          if(this.womens != null && this.womens.size > 0 )\r\n            this.womensLoaded = true\r\n          \r\n          this.mens = this.headerService.getMensHeaders()\r\n\r\n          if(this.mens != null && this.mens.size > 0 )\r\n            this.mensLoaded = true\r\n          \r\n          this.kids = this.headerService.getKidsHeaders()\r\n\r\n          if(this.kids != null && this.kids.size > 0 )\r\n            this.kidsLoaded = true\r\n          \r\n          this.collections = this.headerService.getCollectionsHeaders()\r\n\r\n          if(this.collections != null && this.collections.length > 0 )\r\n            this.collectionsLoaded = true\r\n        }\r\n\r\n        this.navBarLoaded = localLoaded\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<app-top-header></app-top-header>\r\n<app-bottom-header *ngIf=\"navBarLoaded\" [womensLoaded]=\"womensLoaded\" [mensLoaded]=\"mensLoaded\" [kidsLoaded]=\"kidsLoaded\" [collectionsLoaded]=\"collectionsLoaded\" [womens]=\"womens\" [mens]=\"mens\" [kids]=\"kids\" [collections]=\"collections\"></app-bottom-header>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/Utilities/services/users/login.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Customer } from 'src/app/Utilities/models/users/customer.model';\r\nimport { UILoaderService } from 'src/app/Utilities/services/ui-loader/ui-loader.service';\r\nimport { CustomerRegister } from 'src/app/Utilities/models/users/customer-register.model';\r\nimport { ValidationService } from 'src/app/Utilities/services/validation/validation.service';\r\nimport { LogoutService } from 'src/app/Utilities/services/users/logout.service';\r\n\r\n@Component({\r\n  selector: 'app-top-header',\r\n  templateUrl: './top-header.component.html',\r\n  styleUrls: ['./top-header.component.css']\r\n})\r\nexport class TopHeaderComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n  userLoggedIn: boolean = false;\r\n  userRegistered: boolean = false;\r\n\r\n  loggedInCustomer: Customer;\r\n\r\n  customerRegister: CustomerRegister\r\n  \r\n  loginErrorMsg = ''\r\n  loginErrField = ''\r\n\r\n  registerErrMsg = ''\r\n  registerErrField = ''\r\n\r\n  constructor(\r\n    private loginService: LoginService, \r\n    private userService: UserService,\r\n    private uiLoaderService: UILoaderService,\r\n    private validationService: ValidationService,\r\n    private logoutService: LogoutService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.username = 'seethend';\r\n    this.password = 'See12th3';\r\n\r\n    this.customerRegister = new CustomerRegister(0, '' ,'', '', '', false, '', '', '', 0);\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (customerLoggedIn: boolean) => {\r\n        this.userLoggedIn = customerLoggedIn;\r\n        if(customerLoggedIn)\r\n          this.loggedInCustomer = this.userService.getCustomerDetails();\r\n        \r\n        // Loader UI stopped after login request got response\r\n        console.log(this.uiLoaderService.loginLoaderScreen + ' set to ' + false)\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.loginLoaderScreen, false]);\r\n      }\r\n    )\r\n\r\n    this.userService.customerRegisteredObserver.subscribe(\r\n      (localCustomerRegistered) => {\r\n        if(!localCustomerRegistered)\r\n          this.registerErrMsg = 'User registration Failed, username or email already exists !!!'\r\n        this.userRegistered = localCustomerRegistered\r\n        // this.customerRegister = new CustomerRegister(0, '' ,'', '', '', false, '', '', '', 0);\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  login() {\r\n    if (this.username.length !== 0) {\r\n      if (this.password.length !== 0) {\r\n        // Loader UI started for login\r\n        console.log(this.uiLoaderService.loginLoaderScreen + ' set to ' + true)\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.loginLoaderScreen, true]);\r\n        // this.loginService.authTokenLogin(this.username, this.password);\r\n        this.loginService.sessionBasedlogin(this.username, this.password);\r\n\r\n        this.loginErrorMsg = ''\r\n        this.loginErrField = ''\r\n        return true;\r\n\r\n      } else {\r\n        this.loginErrorMsg = 'Please enter password'\r\n        this.loginErrField = 'PS'\r\n        return false;\r\n      }\r\n    } else {\r\n      this.loginErrorMsg = 'Please enter username'\r\n      this.loginErrField = 'UN'\r\n      return false;\r\n    }\r\n  }\r\n\r\n  register() {\r\n    this.registerErrMsg = 'Please follow the input field policy'\r\n    if(!this.validationService.validateUserName(this.customerRegister.userName, 30, 5)) {\r\n      this.registerErrField = 'UN'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateText(this.customerRegister.customerFirstName, 30, 5)) {\r\n      this.registerErrField = 'FN'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateText(this.customerRegister.customerLastName, 30, 5)) {\r\n      this.registerErrField = 'LN'\r\n      return false\r\n    }\r\n\r\n    if(!this.validationService.validateEmail(this.customerRegister.emailAddress, 125, 5)) {\r\n      this.registerErrField = 'EM'\r\n      return false\r\n    }\r\n    \r\n    if(!this.validationService.validatePhone(this.customerRegister.phone, 25, 10)) {\r\n      this.registerErrField = 'PH'\r\n      return false\r\n    }\r\n\r\n    if(this.customerRegister.repassword !== this.customerRegister.password) {\r\n      this.registerErrField = 'RP'\r\n      return false\r\n    } else if(!this.validationService.validatePassword(this.customerRegister.password, 30, 8)) {\r\n      this.registerErrField = 'PS'\r\n      return false\r\n    }\r\n\r\n    console.log('Customer register ---> ', this.customerRegister)\r\n    this.userService.registerUser(this.customerRegister)\r\n\r\n    this.registerErrField = ''\r\n    this.registerErrMsg = ''\r\n    return true;\r\n\r\n  }\r\n\r\n  registerAgain() {\r\n    this.userRegistered = false;\r\n  }\r\n\r\n  logoutUser() {\r\n    this.logoutService.logoutUser()\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark top-header-color\" [containerInside]=\"false\">\r\n    <!-- Collapsible content -->\r\n    <links>\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link waves-light var-colors\" mdbWavesEffect>\r\n                    <mdb-icon fas icon=\"map-marker-alt\"></mdb-icon> Store\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link waves-light var-colors\" mdbWavesEffect>\r\n                    <mdb-icon fas icon=\"phone-square-alt\"></mdb-icon> Phone\r\n                    <a class=\"tel\" href=\"tel:+1-303-499-7111\">+1 (303) 499-7111</a>\r\n                </a>\r\n            </li>\r\n\r\n        </ul>\r\n        <!-- Links -->\r\n\r\n        <ul class=\"navbar-nav ml-auto nav-flex-icons\">\r\n            <li class=\"nav-item\" *ngIf=\"!userLoggedIn\">\r\n                <!--(mouseover)='openLoginBox(true)' (mouseleave)=\"closeBoxes()\" -->\r\n                <a class=\"nav-link var-colors\">\r\n                    Login\r\n                </a>\r\n                <div class=\"box-wpr\">\r\n                    <div class=\"popup-box\" id=\"login-box\">\r\n                        <!-- *ngIf=\"loginBoxStatus\" -->\r\n                        <div class=\"error-form-field\" *ngIf=\"loginErrorMsg\">\r\n                            <mdb-icon fas icon=\"exclamation-triangle\"></mdb-icon>&nbsp;{{loginErrorMsg}}\r\n                        </div>\r\n                        <form (submit)=\"login()\">\r\n                            <input class=\"form-control\" [class.input-error]=\"loginErrField === 'UN'\" type=\"text\" [(ngModel)]=\"username\" name=\"userName\" autocomplete=\"no\" placeholder=\"Username\"> <br>\r\n                            <input class=\"form-control\" [class.input-error]=\"loginErrField === 'PS'\" type=\"password\" [(ngModel)]=\"password\" name=\"password\" autocomplete=\"no\" placeholder=\"Password\"> <br>\r\n                            <button type=\"submit\" class=\"btn top-header-popup-btn\">Login</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"!userLoggedIn\">\r\n                <!-- (mouseover)='openRegisterBox(true)' (mouseleave)=\"closeBoxes()\" -->\r\n                <a class=\"nav-link var-colors\">\r\n                    Register\r\n                </a>\r\n                <div class=\"box-wpr\">\r\n                    <div class=\"popup-box\" id=\"register-box\">\r\n                        <!-- *ngIf=\"registerBoxStatus\" -->\r\n                        <div class=\"row\">\r\n                            <div class=\"registration-status\" *ngIf=\"userRegistered\">\r\n                                <span class=\"outer-span\">  Please activate you're account thought the link sent to you mail, Click \r\n                                    <span class=\"inner-span\" (click)=\"registerAgain()\">here</span> to register again !!!\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\" *ngIf=\"!userRegistered\">\r\n                            <div class=\"error-form-field\" *ngIf=\"registerErrMsg\">\r\n                                <mdb-icon fas icon=\"exclamation-triangle\"></mdb-icon>&nbsp;{{registerErrMsg}}\r\n                            </div>\r\n                            <form (submit)=\"register()\">\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'UN'\" type=\"text\" name=\"userName\" [(ngModel)]=\"customerRegister.userName\" autocomplete=\"no\" placeholder=\"Username\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'FN'\" type=\"text\" name=\"customerFirstName\" [(ngModel)]=\"customerRegister.customerFirstName\" autocomplete=\"no\" placeholder=\"First Name\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'LN'\" type=\"text\" name=\"lastName\" [(ngModel)]=\"customerRegister.customerLastName\" autocomplete=\"no\" placeholder=\"Last Name\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'EM'\" type=\"text\" name=\"emailAddress\" [(ngModel)]=\"customerRegister.emailAddress\" autocomplete=\"no\" placeholder=\"email\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'PH'\" type=\"tel\" maxlength=10 name=\"phone\" [(ngModel)]=\"customerRegister.phone\" autocomplete=\"no\" placeholder=\"phone\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'PS'\" type=\"password\" name=\"password\" [(ngModel)]=\"customerRegister.password\" autocomplete=\"no\" placeholder=\"password\">\r\n                                </div>\r\n                                <div class=\"col-md-6 reg-input-row\">\r\n                                    <input class=\"form-control\" [class.input-error]=\"registerErrField === 'RP'\" type=\"password\" name=\"repassword\" [(ngModel)]=\"customerRegister.repassword\" autocomplete=\"no\" placeholder=\"Reenter password\">\r\n                                </div>\r\n                                <div class=\"col-md-12 register-btn\">\r\n                                    <button type=\"submit\" class=\"btn top-header-popup-btn\">Register</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"pass-details\" *ngIf=\"!userRegistered\">\r\n                            <div>\r\n                                <span class=\"info-head\">Register Policy</span>\r\n                            </div>\r\n                            <div class=\"pass-body\">\r\n                                <ul class=\"pass-ul\">\r\n                                    <li> Firstname & lastname should contain only alphabet characters</li>\r\n                                    <li> Email should be valid</li>\r\n                                    <li> Choose a strong username and password </li>\r\n                                    <li> Your password must be between 8 and 25 characters. </li>\r\n                                    <li> Your password must contain at least one uppercase, or capital, letter (ex: A, B, etc.) </li>\r\n                                    <li> Your password must contain at least one lowercase letter. </li>\r\n                                    <li> Your password must contain at least one number digit (ex: 0, 1, 2, 3, etc.) </li>\r\n                                    <li> Your password must contain at least one special character\r\n                                        <pre>Example: !, @, #, $, %, ^, &, * </pre>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"userLoggedIn\">\r\n                <a class=\"nav-link var-colors\">\r\n                    <mdb-icon fab icon=\"earlybirds\"></mdb-icon>\r\n                    {{loggedInCustomer.customerLastName}} {{loggedInCustomer.customerFirstName}}\r\n                </a>\r\n                <div class=\"box-wpr\">\r\n                    <div class=\"popup-box\" id=\"user-box\">\r\n                        <div class=\"user-options\">\r\n                            <p class=\"user-option\" [routerLink]=\"['ui-account', 'edit']\">Account</p>\r\n                            <p class=\"user-option\">Orders</p>\r\n                            <p class=\"user-option\" (click)=\"logoutUser()\">Logout</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link var-colors\">\r\n                    <mdb-icon fab icon=\"facebook\"></mdb-icon>\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link var-colors\">\r\n                    <mdb-icon fab icon=\"twitter\"></mdb-icon>\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link var-colors\">\r\n                    <mdb-icon fab icon=\"instagram\"></mdb-icon>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </links>\r\n    <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n<!--/.Navbar-->","import { Component, OnInit, Renderer2, AfterViewInit, Input, ViewChild } from '@angular/core';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { ProductService } from 'src/app/Utilities/services/products/product.service';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\n\r\n@Component({\r\n  selector: 'app-best-selling-block',\r\n  templateUrl: './best-selling-block.component.html',\r\n  styleUrls: ['./best-selling-block.component.css']\r\n})\r\nexport class BestSellingBlockComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private productService: ProductService,\r\n    private productKartService: ProductKartService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private wishListService: WishListService\r\n  ) {}\r\n\r\n  components = [];\r\n\r\n  @Input() bestSellers: Product[] = [];\r\n  @Input() topProducts: Product[] = [];\r\n\r\n  productItem: Product;\r\n  showProduct: boolean = false;\r\n\r\n  isUserLoggedIn = false\r\n\r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n  \r\n  ngOnInit(): void {\r\n\r\n    this.isUserLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localCustomerLoggedIn) => this.isUserLoggedIn = localCustomerLoggedIn\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded) {\r\n          this.bestSellers.forEach(\r\n            (p: Product) => p.isWishListed = this.wishListService.isProductWishListed(p)\r\n          )\r\n          this.topProducts.forEach(\r\n            (p: Product) => p.isWishListed = this.wishListService.isProductWishListed(p)\r\n          )\r\n        }\r\n      }\r\n    )\r\n\r\n    if(this.bestSellers != null)\r\n      this.bestSellers.forEach(\r\n        p => this.productService.setPreViewValues(p)\r\n      )\r\n\r\n    if(this.topProducts != null)\r\n      this.topProducts.forEach(\r\n        p => this.productService.setPreViewValues(p)\r\n      )\r\n\r\n    this.components.push(this.bestSellers);\r\n    this.components.push(this.topProducts);\r\n  }\r\n\r\n  showTabs(tab: number) {\r\n    const carouselTabs = document.getElementsByClassName('best-seller-carousel-item');\r\n\r\n    const controlItems = document.getElementsByClassName('heading-control-item');\r\n\r\n    if (tab === 1) {\r\n      this.renderer.addClass(carouselTabs[0], 'active');\r\n      this.renderer.removeClass(carouselTabs[1], 'active');\r\n\r\n      this.renderer.addClass(controlItems[0], 'active');\r\n      this.renderer.removeClass(controlItems[1], 'active');\r\n    } else if (tab === 2) {\r\n      this.renderer.addClass(carouselTabs[1], 'active');\r\n      this.renderer.removeClass(carouselTabs[0], 'active');\r\n\r\n      this.renderer.addClass(controlItems[1], 'active');\r\n      this.renderer.removeClass(controlItems[0], 'active');\r\n    }\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const columnDivs = document.getElementsByClassName('best-seller-column-items');\r\n\r\n    if (this.bestSellers.length < 4) {\r\n      for (let i = 0; i < this.bestSellers.length; i++) {\r\n        this.renderer.removeClass(columnDivs[i], 'col-md-3');\r\n        this.renderer.addClass(columnDivs[i], 'col-md-' + (12 / this.bestSellers.length));\r\n      }\r\n    }\r\n\r\n    if (this.topProducts.length < 4) {\r\n      for (let i = this.bestSellers.length; i < (this.bestSellers.length + this.topProducts.length) ; i++) {\r\n        this.renderer.removeClass(columnDivs[i], 'col-md-3');\r\n        this.renderer.addClass(columnDivs[i], 'col-md-' + (12 / this.topProducts.length));\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n  showModal(product: Product) {\r\n    if(product.inStockQuantity > 0) {\r\n      this.productItem = product;\r\n      this.showProduct = true;\r\n      this.basicModal.show();\r\n    }\r\n  }\r\n\r\n  addAndRedirectToKart(product: Product) {\r\n    this.productKartService.addToKart(product.productID, 1, 'new')\r\n    this.productKartService.kartCountLoadedObserver.subscribe(\r\n      (kartCountLoaded) => {\r\n        if(kartCountLoaded)\r\n          this.router.navigate(['ui-kart'])\r\n      }\r\n    )\r\n  }\r\n\r\n  addItemToWishList(product: Product) {\r\n    this.wishListService.updateServerWishList(product)\r\n    product.isWishListed = true\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"full-screen wow animate lightSpeedIn\" data-wow-delay=\".5s\" data-wow-duration=\"1s\">\r\n    <div class=\"container\">\r\n        <div class=\"text-center\">\r\n            <h3 class=\"best-section-heading\">OUR BESTSELLING ITEMS</h3>\r\n            <img class=\"line-stars\" src=\"assets/line_star.png\">\r\n        </div>\r\n        <mdb-carousel class=\"carousel\" [isControls]=\"false\" class=\"carousel-multi-item multi-animation second-carousel\" [type]=\"'carousel-multi-item'\" [animation]=\"'slide'\" [interval]=\"40000\" [keyboard]=\"true\">\r\n            <div class=\"heading-controls\">\r\n                <span class=\"heading-control-item active\" (click)=\"showTabs(1)\">Best Sellers</span>\r\n                <span class=\"heading-control-item\" (click)=\"showTabs(2)\">Top Products</span>\r\n            </div>\r\n            <hr>\r\n            <mdb-carousel-item class=\"best-seller-carousel-item\" *ngFor=\"let item of components; let i = index\">\r\n                <div class=\"col-md-3 best-seller-column-items\" *ngFor=\"let card of item; let cardIndex = index\">\r\n                    <mdb-card class=\"my-1 best-seller-card\">\r\n                        <mdb-card-img class=\"best-seller-img animate-color-left-right\" [src]=\"card.imagePath\" alt=\"Card image cap\">\r\n                        </mdb-card-img>\r\n                        <mdb-card-body class=\"best-seller-card-body\">\r\n                            <p class=\"type-text\" [routerLink]=\"['/','ui-products', 'search']\" [queryParams]=\"{'categoryType': card.categoryName}\">{{card.categoryName}}</p>\r\n                            <mdb-card-title>\r\n                                <h4 class=\"card-title\" (click)=\"showModal(card)\">{{card.productName}}</h4>\r\n                            </mdb-card-title>\r\n\r\n                            <div class=\"sub-items\">\r\n                                <!-- Card footer -->\r\n                                <div class=\"card-footer\">\r\n                                    <span class=\"price\" style=\"float: left;\">{{card.price}}$</span>\r\n                                    <span *ngIf=\"isUserLoggedIn\" (click)=\"addItemToWishList(card)\" class=\"heart wish-list\" style=\"float: right;\">\r\n                                        <mdb-icon *ngIf=\"card.isWishListed\" title=\"Item already in wishlist\" fas icon=\"heart\"></mdb-icon>\r\n                                        <mdb-icon *ngIf=\"!card.isWishListed\" title=\"add to wishlist\" far icon=\"heart\"></mdb-icon>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <button mdbBtn class=\"buy-btn\" type=\"button\" (click)=\"addAndRedirectToKart(card)\" gradient=\"peach\" rounded=\"true\" mdbWavesEffect>Buy</button>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n            </mdb-carousel-item>\r\n        </mdb-carousel>\r\n    </div>\r\n</div>\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [productItem]='productItem' [allowBuy]=\"true\"></app-product-item>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CarouselImage } from 'src/app/Utilities/models/landing-page/carousel_image.model';\r\n\r\n@Component({\r\n  selector: 'app-carousel-block',\r\n  templateUrl: './carousel-block.component.html',\r\n  styleUrls: ['./carousel-block.component.css']\r\n})\r\nexport class CarouselBlockComponent implements OnInit {\r\n\r\n  @Input() carouselImages: CarouselImage[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    let count = 1;\r\n    if(this.carouselImages != null)\r\n      this.carouselImages.forEach(\r\n        c => c.imageUrl = 'assets/carousel_' + (count++) + '.jpg'\r\n      )\r\n  }\r\n}\r\n","<mdb-carousel class=\"carousel slide carousel-fade main-carousel\" [animation]=\"'fade'\">\r\n    <mdb-carousel-item *ngFor=\"let item of carouselImages\">\r\n        <div class=\"view w-100\">\r\n            <img class=\"d-block w-100 carousel-img\" [src]=\"item.imageUrl\" alt=\"First slide\">\r\n            <div class=\"mask rgba-black-light waves-light\" mdbWavesEffect></div>\r\n        </div>\r\n        <div class=\"carousel-caption wow animate\" [ngClass]=\"{'slideInLeft carousel-caption-left': item.imageOrientation=='RIGHT', 'slideInRight carousel-caption-right': item.imageOrientation=='LEFT', 'slideInUp carousel-caption-center': item.imageOrientation=='UP'}\">\r\n            <h3 class=\"h3-responsive\">{{item.imageDescription}}</h3>\r\n            <p class=\"sub-para\">{{item.secondSentence}}</p>\r\n        </div>\r\n    </mdb-carousel-item>\r\n</mdb-carousel>","import { Component, OnInit } from '@angular/core';\r\nimport { UILoaderService } from '../Utilities/services/ui-loader/ui-loader.service';\r\nimport { CarouselImage } from '../Utilities/models/landing-page/carousel_image.model';\r\nimport { Category } from '../Utilities/models/global-models/category.model';\r\nimport { ProductsCombo } from '../Utilities/models/landing-page/products-combo.model';\r\nimport { LandingPageService } from '../Utilities/services/landing-page/landing-page.service';\r\nimport { LandingPage } from '../Utilities/models/landing-page/landing-page.model';\r\nimport { Product } from '../Utilities/models/products/product.model';\r\n\r\n@Component({\r\n  selector: 'app-home-blocks',\r\n  templateUrl: './home-blocks.component.html',\r\n  styleUrls: ['./home-blocks.component.css']\r\n})\r\nexport class HomeBlocksComponent implements OnInit {\r\n\r\n  constructor(\r\n    private landingPageService: LandingPageService,\r\n    private uiLoaderService: UILoaderService\r\n  ) { }\r\n\r\n  landingPage: LandingPage = null;\r\n\r\n  \r\n  carouselImagesLoaded = false;\r\n  carouselImages: CarouselImage[] = [];\r\n\r\n  categoryModelsLoaded = false;\r\n  popularCategories: Category[] = [];\r\n\r\n  newArrivalsLoaded = false;\r\n  newArrivals: Product[] = [];\r\n  newArrivalsComboLoaded = false;\r\n  newArrivalsCombo: ProductsCombo[]= [];\r\n\r\n  bestSellingLoaded = false;\r\n  bestSellers: Product[] = [];\r\n\r\n  topProductsLoaded = false;\r\n  topProducts: Product[] = [];\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.landingPageService.landingPageLoaded.subscribe(\r\n      (localLoaded) => {\r\n\r\n        if(localLoaded) {\r\n          this.setAllModels()\r\n        }\r\n\r\n      }\r\n    )\r\n\r\n    this.setAllModels()\r\n\r\n  }\r\n\r\n  setAllModels() {\r\n    this.landingPage = this.landingPageService.getLandingPage();\r\n\r\n    if(this.landingPage != null) {\r\n\r\n      var welcomeCarousel = this.landingPage.welcomePageCarousel\r\n      if(welcomeCarousel != null) {\r\n        this.carouselImages = this.landingPage.welcomePageCarousel\r\n        this.carouselImagesLoaded = true\r\n      }\r\n\r\n      var popularcategories = this.landingPage.popularCategories\r\n      if(popularcategories != null) {\r\n        this.popularCategories = popularcategories\r\n        this.categoryModelsLoaded = true\r\n      }\r\n\r\n      var newArrivals = this.landingPage.newArrivals\r\n      if(newArrivals != null) {\r\n        this.newArrivals = newArrivals\r\n        this.newArrivalsLoaded = true\r\n      }\r\n\r\n      var productsCombo = this.landingPage.combos\r\n      if(productsCombo != null) {\r\n        this.newArrivalsCombo = productsCombo\r\n        this.newArrivalsComboLoaded = true\r\n      }\r\n\r\n      var topProducts = this.landingPage.topProducts\r\n      if(topProducts != null) {\r\n        this.topProducts = topProducts\r\n        this.topProductsLoaded = true\r\n      }\r\n      \r\n      var bestSellers = this.landingPage.bestSellers\r\n      if(bestSellers != null) {\r\n        this.bestSellers = bestSellers\r\n        this.bestSellingLoaded = true\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n}\r\n","<app-carousel-block *ngIf=\"carouselImagesLoaded\" [carouselImages]=\"carouselImages\"></app-carousel-block>\r\n<app-popular-collection-block *ngIf=\"categoryModelsLoaded\" [popularCategories]=\"popularCategories\"></app-popular-collection-block>\r\n<app-new-arrivals-block *ngIf=\"newArrivalsLoaded\" [newArrivals]=\"newArrivals\" [newArrivalsCombo]=\"newArrivalsCombo\"></app-new-arrivals-block>\r\n<app-best-selling-block *ngIf=\"bestSellingLoaded || topProductsLoaded\" [bestSellers]=\"bestSellers\" [topProducts]=\"topProducts\"></app-best-selling-block>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { ProductsCombo } from 'src/app/Utilities/models/landing-page/products-combo.model';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { ProductService } from 'src/app/Utilities/services/products/product.service';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\nimport { Router } from '@angular/router';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-new-arrivals-block',\r\n  templateUrl: './new-arrivals-block.component.html',\r\n  styleUrls: ['./new-arrivals-block.component.css']\r\n})\r\nexport class NewArrivalsBlockComponent implements OnInit {\r\n\r\n  @Input() newArrivals: Product[] = [];\r\n\r\n  @Input() newArrivalsCombo: ProductsCombo[] = [];\r\n\r\n  allProducts: Product[] = [];\r\n\r\n  productItem: Product;\r\n  showProduct: boolean = false;\r\n\r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n\r\n  isUserLoggedIn = false;\r\n  \r\n  constructor(\r\n    private productService: ProductService,\r\n    private productKartService: ProductKartService,\r\n    private wishListService: WishListService,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.isUserLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localCustomerLoggedIn) => this.isUserLoggedIn = localCustomerLoggedIn\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded) {\r\n          this.newArrivals.forEach(\r\n            (p: Product) => p.isWishListed = this.wishListService.isProductWishListed(p)\r\n          )\r\n        }\r\n      }\r\n    )\r\n    \r\n    if(this.newArrivals != null) {\r\n      this.newArrivals.forEach(\r\n        p => this.productService.setPreViewValues(p)\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  addAndRedirectToKart(product: Product) {\r\n    this.productKartService.addToKart(product.productID, 1, 'new')\r\n    this.productKartService.kartCountLoadedObserver.subscribe(\r\n      (kartCountLoaded) => {\r\n        if(kartCountLoaded)\r\n          this.router.navigate(['ui-kart'])\r\n      }\r\n    )\r\n  }\r\n  \r\n  showModal(product: Product) {\r\n    if(product.inStockQuantity > 0) {\r\n      this.productItem = product;\r\n      this.showProduct = true;\r\n      this.basicModal.show();\r\n    }\r\n  }\r\n\r\n  addItemToWishList(product: Product) {\r\n    this.wishListService.updateServerWishList(product)\r\n    product.isWishListed = true\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid new-arrival-container\">\r\n    <div class=\"block-heading\">\r\n        <h3 class=\"block-title\">NEW ARRIVALS</h3>\r\n        <img class=\"line-stars\" src=\"assets/line_star.png\">\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 new-arrival-item\" *ngFor=\"let item of newArrivals\">\r\n            <!--Card-->\r\n            <mdb-card class=\"new-arrival-card animate-color-left-right wow animate flipInX\" data-wow-duration=\"1s\" data-wow-delay=\"0.6s\" cascade=\"true\" narrower=\"true\">\r\n\r\n                <!--Card image-->\r\n                <div class=\"view view-cascade overlay waves-light\" mdbWavesEffect>\r\n                    <mdb-card-img class=\"new-arrival-img\" [src]=\"item.imagePath\"></mdb-card-img>\r\n                    <a>\r\n                        <div class=\"mask rgba-white-slight\"></div>\r\n                    </a>\r\n                </div>\r\n                <!--/Card image-->\r\n\r\n                <div class=\"new-arrival-body\">\r\n                    <mdb-card-body cascade=\"true\" class=\"text-center pb-0 px-0\">\r\n                        <!--Card content-->\r\n                        <h5 class=\"type-text\" [routerLink]=\"['/','ui-products', 'search']\" [queryParams]=\"{'categoryType': item.categoryName}\">{{item.categoryName}}</h5>\r\n                        <!--Title-->\r\n                        <h4 class=\"card-title\" (click)=\"showModal(item)\">{{item.productName}}</h4>\r\n\r\n                        <button mdbBtn class=\"buy-btn\" type=\"button\" (click)=\"addAndRedirectToKart(item)\" gradient=\"peach\" rounded=\"true\" mdbWavesEffect>Buy</button>\r\n                        <!-- <button mdbBtn class=\"btn btn-primary buy-btn\" mdbWavesEffect>Buy</button> -->\r\n\r\n                        <div class=\"sub-items\">\r\n                            <!-- Card footer -->\r\n                            <div class=\"card-footer\">\r\n                                <span class=\"card-price\">{{item.price}}$</span>\r\n                                <span class=\"heart\" *ngIf=\"isUserLoggedIn\" (click)=\"addItemToWishList(item)\">\r\n                                    <mdb-icon class=\"wish-list-icon\" *ngIf=\"item.isWishListed\" title=\"Item already in wishlist\" fas icon=\"heart\"></mdb-icon>\r\n                                    <mdb-icon class=\"wish-list-icon\" *ngIf=\"!item.isWishListed\" title=\"add to wishlist\" far icon=\"heart\"></mdb-icon>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mdb-card-body>\r\n                </div>\r\n                <!--/.Card content-->\r\n\r\n            </mdb-card>\r\n            <!--/.Card-->\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 new-arrival-set-item\" *ngFor=\"let item of newArrivalsCombo\">\r\n            <!--Card-->\r\n            <mdb-card class=\"new-arrival-set-card animate-color-left-right wow animate flipInY\" data-wow-duration=\"1s\" data-wow-delay=\"0.6s\" cascade=\"true\" narrower=\"true\">\r\n\r\n                <!--Card image-->\r\n                <div class=\"view view-cascade overlay waves-light\" mdbWavesEffect>\r\n                    <mdb-card-img class=\"new-arrival-img\" [src]=\"item.comboImagePath\"></mdb-card-img>\r\n                    <a>\r\n                        <div class=\"mask rgba-white-slight\"></div>\r\n                    </a>\r\n                </div>\r\n                <!--/Card image-->\r\n\r\n                <div class=\"new-arrival-body\">\r\n                    <mdb-card-body cascade=\"true\" class=\"text-center pb-0 px-0\">\r\n                        <!--Title-->\r\n                        <h4 class=\"set-card-title\">{{item.comboName}}</h4>\r\n                        <div class=\"text-left\">\r\n                            <h5 class=\"learn-more\">Learn More</h5>\r\n                        </div>\r\n                    </mdb-card-body>\r\n                </div>\r\n                <!--/.Card content-->\r\n\r\n            </mdb-card>\r\n            <!--/.Card-->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [productItem]='productItem' [allowBuy]=\"true\"></app-product-item>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Category } from 'src/app/Utilities/models/global-models/category.model';\r\n\r\n@Component({\r\n  selector: 'app-popular-collection-block',\r\n  templateUrl: './popular-collection-block.component.html',\r\n  styleUrls: ['./popular-collection-block.component.css']\r\n})\r\nexport class PopularCollectionBlockComponent implements OnInit {\r\n\r\n  @Input() popularCategories: Category[] = [];\r\n\r\n  constructor(\r\n    \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    let count = 1;\r\n    \r\n    if(this.popularCategories != null)\r\n      this.popularCategories.forEach(\r\n        (pc) => {\r\n          pc.viewName = 'Popular ' + pc.categoryName.substring(0, 1).toUpperCase() + pc.categoryName.substring(1).toLowerCase()\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid popular-container\">\r\n    <div class=\"block-heading\">\r\n        <h3 class=\"block-title\">POPULAR CATEGORIES</h3>\r\n        <img class=\"line-stars\" src=\"assets/line_star.png\">\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3 popular-item\" *ngFor=\"let item of popularCategories\">\r\n            <!--Card-->\r\n            <mdb-card class=\"popular-card animated wow slideInUp\" data-wow-duration=\"1s\" data-wow-delay=\"0.6s\" cascade=\"true\" narrower=\"true\">\r\n\r\n                <!--Card image-->\r\n                <div class=\"view view-cascade overlay waves-light\" mdbWavesEffect>\r\n                    <mdb-card-img class=\"popular-img\" [src]=\"item.imagePath\">\r\n                    </mdb-card-img>\r\n                </div>\r\n                <!--/Card image-->\r\n\r\n                <mdb-card-body [routerLink]=\"['/','ui-products', 'search']\" [queryParams]=\"{'categoryType': item.categoryName}\" cascade=\"true\" class=\"text-center popular-card-body\">\r\n                    <!--Card content-->\r\n                    <h5 class=\"type-text\">\r\n                        {{item.categoryName}}\r\n                    </h5>\r\n                    <!--Title-->\r\n                    <h4 class=\"card-title\">{{item.viewName}}</h4>\r\n                    <!--Text-->\r\n\r\n                    <mdb-card-text>\r\n                        <mdb-icon class=\"card-forward \" fas icon=\"angle-right\"></mdb-icon>\r\n                    </mdb-card-text>\r\n\r\n                </mdb-card-body>\r\n                <!--/.Card content-->\r\n\r\n            </mdb-card>\r\n            <!--/.Card-->\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Renderer2, AfterViewInit, Input, ElementRef } from '@angular/core';\r\nimport { NotificationService } from '../Utilities/services/notfications/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-notification-block',\r\n  templateUrl: './notification-block.component.html',\r\n  styleUrls: ['./notification-block.component.css']\r\n})\r\nexport class NotificationBlockComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(public notifService: NotificationService, private renderer: Renderer2) { }\r\n\r\n  @Input() notifId: string = '';\r\n  @Input() notifType: string = '';\r\n  @Input() notifMsg: string = '';\r\n\r\n  notifEle: HTMLElement;\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.notifId == null || this.notifId.length === 0)\r\n      this.notifId = '0';\r\n\r\n    if(this.notifType == null || this.notifType.length === 0)\r\n      this.notifType = this.notifService.NOTIF_INFO;\r\n\r\n    console.log('Notification Type ==> ', this.notifType)\r\n\r\n    this.notifService.removeNotificationObservable.subscribe(\r\n      (notifId: string) => {\r\n        var notifEle = document.getElementById(this.getId(notifId));\r\n        if(notifEle != null)\r\n          this.renderer.setStyle(notifEle, 'opacity', '0.1');\r\n      }\r\n    )\r\n\r\n    this.notifService.notificationReArrangeObservable.subscribe(\r\n      (check) => {\r\n        if(this.notifEle != null)\r\n          this.renderer.setStyle(this.notifEle, 'top', this.getTopPx());\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.notifEle = document.getElementById(this.getId(this.notifId));\r\n    this.renderer.setStyle(this.notifEle, 'opacity', '0.7');\r\n    this.renderer.setStyle(this.notifEle, 'top', this.getTopPx())\r\n  }\r\n\r\n  getId(id: string) {\r\n    return 'notificationComponent_' + id;\r\n  }\r\n\r\n  getTopPx() {\r\n    var len = (+this.notifId * 60) + 100;\r\n    return len + 'px';\r\n  }\r\n\r\n  checkNotifType() {\r\n    this.notifType === this.notifService.NOTIF_WARNING\r\n  }\r\n\r\n}\r\n","<div [id]=\"getId(notifId)\" class=\"notif-body\">\r\n    <div class=\"jw-notif\" [ngClass]=\"{'notif-info': notifType === notifService.NOTIF_INFO, \r\n                    'notif-success': notifType === notifService.NOTIF_SUCCESS, \r\n                    'notif-warning': notifType === notifService.NOTIF_WARNING, \r\n                    'notif-danger': notifType === notifService.NOTIF_DANGER}\">\r\n        <div class=\"notif-info-msg\">{{notifMsg}}</div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { of } from 'rxjs';\r\nimport { concatMap, delay, repeat } from 'rxjs/operators';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\n\r\n@Component({\r\n  selector: 'app-items-block',\r\n  templateUrl: './items-block.component.html',\r\n  styleUrls: ['./items-block.component.css']\r\n})\r\nexport class ItemsBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private wishListService: WishListService\r\n  ) { }\r\n\r\n  userLoggedIn = false;\r\n\r\n  @Input() allProducts: Product[] = [];\r\n\r\n  productItem: Product;\r\n  showProduct: boolean = false;\r\n\r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localUserLoggedIn) => this.userLoggedIn = localUserLoggedIn\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded)\r\n          this.allProducts.forEach(\r\n            p => p.isWishListed = this.wishListService.isProductWishListed(p)\r\n          )\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  getDiscountPrice(priceLocal: number, discountLocal: number) {\r\n\r\n    let finalAmount = 0;\r\n\r\n    if(discountLocal !== 0) {\r\n      finalAmount = priceLocal * (discountLocal / 100)\r\n      finalAmount = priceLocal - finalAmount;\r\n    }\r\n\r\n    finalAmount = Math.round(finalAmount * 100) / 100;\r\n\r\n    return finalAmount;\r\n  }\r\n\r\n  showModal(product: Product) {\r\n    if(product.inStockQuantity > 0) {\r\n      this.productItem = product;\r\n      this.showProduct = true;\r\n      this.basicModal.show();\r\n    }\r\n  }\r\n\r\n  addItemToWishList(product: Product) {\r\n    this.wishListService.updateServerWishList(product)\r\n    product.isWishListed = true\r\n  }\r\n\r\n}\r\n","<div class=\"container products-container untouchable\">\r\n    <div class=\"adj-container\">\r\n        <div class=\"row adj-row\">\r\n            <div class=\"col-md-3\" *ngFor=\"let product of allProducts\">\r\n                <!-- Card -->\r\n                <div class=\"card product-card animate wow slideInUp\">\r\n\r\n                    <!-- Card image -->\r\n                    <div class=\"view overlay\" mdbWavesEffect (click)=\"showModal(product)\">\r\n                        <img class=\"card-img-top product-img\" [src]=\"product.imagePath\" alt=\"Card image cap\">\r\n                        <a>\r\n                            <div *ngIf=\"product.inStockQuantity > 0\" class=\"mask search-plus-mask rgba-white-slight\">\r\n                                <mdb-icon fas icon=\"search-plus\" class=\"product-open-icon\"></mdb-icon>\r\n                            </div>\r\n                            <div *ngIf=\"product.inStockQuantity <= 0\" class=\"mask out-of-stock-mask rgba-white-slight\">\r\n                                <p class=\"product-stock-icon\">OUT OF STOCK</p>\r\n                            </div>\r\n                        </a>\r\n                        <div *ngIf=\"product.discount > 0\" class=\"discount-wrp\">\r\n                            <span>{{product.discount}}%</span>\r\n                            <img src=\"assets/discount.png\" class=\"discount-img\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Button -->\r\n                    <!-- <a class=\"btn-floating btn-action ml-auto mr-4 mdb-color lighten-3\" id=\"show-product\">\r\n                        <i class=\"fas fa-chevron-right pl-1 right-arrow\"></i>\r\n                    </a> -->\r\n\r\n                    <!-- Card content -->\r\n                    <div class=\"card-body product-card-body\">\r\n                        <!-- Title -->\r\n                        <h4 class=\"card-title product-title\">{{product.productName}}</h4>\r\n                    </div>\r\n\r\n                    <!-- Card footer -->\r\n                    <div class=\"rounded-bottom mdb-color lighten-3 footer footer-text-padding\">\r\n                        <div class=\"footer-items footer-left text-left\">\r\n                            <div class=\"price-real\" [class.text-strikethrough]=\"product.discount > 0\">\r\n                                <span class=\"real-price-text\">${{product.price}}</span>\r\n                            </div>\r\n                            <div class=\"price-discount\" *ngIf=\"product.discount > 0\">\r\n                                <span class=\"discount-price-text\">${{getDiscountPrice(product.price, product.discount)}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"userLoggedIn\" (click)=\"addItemToWishList(product)\" class=\"footer-items footer-right text-right\">\r\n                            <a class=\"white-text\">\r\n                                <mdb-icon class=\"wish-list-icon\" *ngIf=\"product.isWishListed\" title=\"Item already in wishlist\" fas icon=\"heart\"></mdb-icon>\r\n                                <mdb-icon class=\"wish-list-icon\" *ngIf=\"!product.isWishListed\" title=\"add to wishlist\" far icon=\"heart\"></mdb-icon>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- Card -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--Modal-->\r\n<!-- <button type=\"button\" mdbBtn color=\"primary\" class=\"relative waves-light\" (click)=\"basicModal.show()\" mdbWavesEffect>Launch demo modal</button> -->\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [productItem]='productItem' [allowBuy]=\"true\"></app-product-item>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { UserService } from 'src/app/Utilities/services/users/user.service';\r\nimport { ProductKartService } from 'src/app/Utilities/services/products/orders/product-kart.service';\r\nimport { Product } from 'src/app/Utilities/models/products/product.model';\r\nimport { Router } from '@angular/router';\r\nimport { WishListService } from 'src/app/Utilities/services/products/orders/wish-list.service';\r\n\r\n@Component({\r\n  selector: 'app-product-item',\r\n  templateUrl: './product-item.component.html',\r\n  styleUrls: ['./product-item.component.css']\r\n})\r\nexport class ProductItemComponent implements OnInit {\r\n\r\n  userloggedIn = false;\r\n\r\n  @Input() basicModal: ModalDirective;\r\n  @Input() productItem: Product;\r\n  @Input() allowBuy: boolean\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private productKartService: ProductKartService,\r\n    private wishListService: WishListService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userloggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (customerLoggedIn) => {\r\n        this.userloggedIn = customerLoggedIn\r\n      }\r\n    )\r\n\r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoaded) => {\r\n        if(wishListLoaded) {\r\n          this.productItem.isWishListed = this.wishListService.isProductWishListed(this.productItem)\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  closeModal() {\r\n    this.basicModal.hide();\r\n  }\r\n\r\n  adjustTotalPrice() {\r\n    this.productItem.totalAmount = Math.round((this.productItem.discountedPrice * this.productItem.cartQuantity) * 100) / 100;\r\n  }\r\n\r\n  addToKart() {\r\n    this.productKartService.addToKart(this.productItem.productID, this.productItem.cartQuantity, 'new')\r\n  }\r\n\r\n  adjustProductDetails(type: string) {\r\n    if (type === 'add' && this.productItem.cartQuantity < +this.productItem.inStockQuantity)\r\n      this.productItem.cartQuantity++;\r\n\r\n    if (type === 'minus' && +this.productItem.cartQuantity > 1)\r\n      this.productItem.cartQuantity--;\r\n\r\n    if (this.productItem.cartQuantity > 1 && this.productItem.cartQuantity <= this.productItem.inStockQuantity)\r\n      this.adjustTotalPrice()\r\n  }\r\n\r\n  checkExceeded() {\r\n    if (this.productItem.cartQuantity > this.productItem.inStockQuantity)\r\n      this.productItem.cartQuantity = this.productItem.inStockQuantity\r\n\r\n    if (this.productItem.cartQuantity <= 0)\r\n      this.productItem.cartQuantity = 1\r\n  }\r\n\r\n  addAndRedirectToKart() {\r\n    this.productKartService.addToKart(this.productItem.productID, this.productItem.cartQuantity, 'new')\r\n    this.productKartService.kartCountLoadedObserver.subscribe(\r\n      (kartCountLoaded) => {\r\n        if(kartCountLoaded)\r\n          this.router.navigate(['ui-kart'])\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"modal-content untouchable\">\r\n    <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"closeModal()\">\r\n            <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\">{{productItem.productName}}</h4>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"container-fluid product-container\">\r\n            <div class=\"row product-row\">\r\n                <div class=\"col-md-6 product-col\">\r\n                    <div class=\"product-view\">\r\n                        <img [src]=\"productItem.imagePath\" class=\"product-img\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 product-data\">\r\n                    <div class=\"product-details\">\r\n                        <div class=\"product-head\">\r\n                            <h2 class=\"product-title\">{{productItem.productName}}</h2>\r\n                        </div>\r\n                        <hr class=\"hr-head-met\">\r\n                        <div class=\"product-meta\">\r\n                            <div class=\"product-price-det untouchable\">\r\n                                <div class=\"meta-div meta-div-sm\">\r\n                                    <span class=\"code-label label-sm\">Code:</span>\r\n                                    <h5 class=\"code-value value-sm\">{{productItem.productID}}</h5>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-md\" *ngIf=\"allowBuy\">\r\n                                    <span class=\"quantity-label label-md\">Quantity:</span>\r\n                                    <div class=\"quantity-minus label-md\" [class.quantity-fade]=\"productItem.cartQuantity <= 1\" (click)=\"adjustProductDetails('minus')\">-</div>\r\n                                    <div class=\"quantity-value\">\r\n                                        <input type=\"number\" [max]='productItem.inStockQuantity' min=\"1\" (keyup)=\"checkExceeded()\" [(ngModel)]=\"productItem.cartQuantity\">\r\n                                    </div>\r\n                                    <div class=\"quantity-plus label-md\" [class.quantity-fade]=\"productItem.cartQuantity >= productItem.inStockQuantity\" (click)=\"adjustProductDetails('add')\">+</div>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-md\">\r\n                                    <span class=\"price-label label-md\">Price:</span>\r\n                                    <h5 class=\"price-value value-md\" [class.price-dis-can]=\"productItem.discount > 0\">${{productItem.price}}</h5>\r\n                                    <h5 class=\"price-value value-md disc-price-value\" *ngIf=\"productItem.discount > 0\">${{productItem.discountedPrice}}</h5>\r\n\r\n                                    <div *ngIf=\"productItem.discount > 0\" class=\"price-save\">\r\n                                        <span>{{productItem.discount}}% OFF</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-md\" *ngIf=\"productItem.cartQuantity > 1\">\r\n                                    <span class=\"price-label label-md\">Total Price:</span>\r\n                                    <h5 class=\"price-value value-md disc-price-value\">${{productItem.totalAmount}}</h5>\r\n                                </div>\r\n                            </div>\r\n                            <hr class=\"hr-price-det\">\r\n                            <div class=\"product-otr-det\">\r\n                                <div class=\"meta-div meta-div-sm det-sm\">\r\n                                    <span class=\"cat-label label-sm\">Category:</span>\r\n                                    <h5 class=\"cat-value value-sm det-val-sm\">{{productItem.categoryName}}</h5>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-sm det-sm\">\r\n                                    <span class=\"sub-cat-label label-sm\">Sub Category:</span>\r\n                                    <h5 class=\"sub-cat-value value-sm det-val-sm\">{{productItem.subCategoryName}}</h5>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-sm det-sm\">\r\n                                    <span class=\"mat-label label-sm\">Material:</span>\r\n                                    <h5 class=\"mat-value value-sm det-val-sm\">{{productItem.materialName}}</h5>\r\n                                </div>\r\n                                <div class=\"meta-div meta-div-sm det-sm\">\r\n                                    <span class=\"mat-pur-label label-sm\">Metal Purity:</span>\r\n                                    <h5 class=\"mat-pur-value value-sm det-val-sm\">{{productItem.metalPurityName}}</h5>\r\n                                </div>\r\n                            </div>\r\n                            <hr class=\"hr-det-imp\">\r\n                            <div class=\"product-imp\" *ngIf=\"allowBuy\">\r\n                                <button class=\"bag-btn\" mdbBtn type=\"button\" rounded=\"true\" mdbWavesEffect (click)=\"addToKart()\">Add to Bag</button>\r\n                                <button class=\"buy-btn\" mdbBtn type=\"button\" rounded=\"true\" mdbWavesEffect (click)=\"addAndRedirectToKart()\">Buy</button>\r\n                                <!-- <mdb-icon *ngIf=\"userloggedIn\" far icon=\"heart\" class=\"wish-list-icon\"></mdb-icon> -->\r\n                                <div class=\"wish-list-blk\">\r\n                                    <mdb-icon *ngIf=\"productItem.isWishListed\" class=\"wish-list-icon\" title=\"Item already in wishlist\" fas icon=\"heart\"></mdb-icon>\r\n                                    <mdb-icon *ngIf=\"!productItem.isWishListed\" class=\"wish-list-icon\" title=\"add to wishlist\" far icon=\"heart\"></mdb-icon>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { UserService } from '../Utilities/services/users/user.service';\r\nimport { UILoaderService } from '../Utilities/services/ui-loader/ui-loader.service';\r\nimport { ProductService } from '../Utilities/services/products/product.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Product } from '../Utilities/models/products/product.model';\r\nimport { GlobalModelsService } from '../Utilities/services/global/global-models.service';\r\nimport { ProductSearchService } from '../Utilities/services/products/product-search.service';\r\n\r\n@Component({\r\n  selector: 'app-product-blocks',\r\n  templateUrl: './product-blocks.component.html',\r\n  styleUrls: ['./product-blocks.component.css']\r\n})\r\nexport class ProductBlocksComponent implements OnInit {\r\n\r\n  query: string = '';\r\n\r\n  section: string = '';\r\n  categoryType: string = '';\r\n  catergorySubType: string = '';\r\n\r\n  allProducts: Product[] = [];\r\n  allProductsLoaded = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private uiLoaderService: UILoaderService,\r\n    private productService: ProductService,\r\n    private productSearchService: ProductSearchService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(\r\n      (params: Params) => {\r\n        console.log(params)\r\n        this.query = params['query']\r\n        this.section = params['section'];\r\n        this.categoryType = params['categoryType'];\r\n        this.catergorySubType = params['catergorySubType'];\r\n\r\n        // UI Loader is started before requesting products from user\r\n        console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + true)\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n        \r\n        if(this.query == null || this.query.length < 4)\r\n          this.productSearchService.searchForCriteria(this.section, this.categoryType, this.catergorySubType);\r\n        else {\r\n          this.productSearchService.searchForKeyword(this.query);\r\n        }\r\n      }\r\n    )\r\n    \r\n    this.productService.allProductsObserver.subscribe(\r\n      (allProductsLoadedLocal: boolean) => {\r\n        this.allProducts = this.productService.getAllProducts();\r\n        this.allProductsLoaded = allProductsLoadedLocal;\r\n\r\n        \r\n        if(this.allProducts.length == 0)\r\n          this.allProductsLoaded = false\r\n\r\n        // UI Loader is stopped as the response is received\r\n        console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + false)\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, false]);\r\n      }\r\n    )\r\n\r\n    this.productService.sortCurrentProductsObserver.subscribe(\r\n      (sortCriteria: string) => {\r\n        console.log('Sort products check ==> ', this.allProducts)\r\n        if(this.allProducts != null && this.allProducts.length > 0) {\r\n          \r\n          // UI Loader is started before sort started on products\r\n          console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + true)\r\n          this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n          \r\n          this.allProducts = this.productSearchService.sortProducts(this.allProducts, sortCriteria);\r\n          \r\n          // UI Loader is stopped as the products are sorted\r\n          console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + false)\r\n          this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, false]);\r\n        }\r\n      }\r\n    )\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"into-nav-div untouchable\" mdbWavesEffect>\r\n    <img class=\"intro-bg-img\" src=\"assets/products/main-bg/diamonds.jpg\">\r\n    <div class=\"nav-body\">\r\n        <div class=\"nav-breadcrumbs\">\r\n            <span class=\"nav-item\" [routerLink]=\"['/', 'home']\">Home</span>\r\n            <mdb-icon class=\"right-angle-icon\" fas icon=\"angle-double-right\" *ngIf=\"section\"></mdb-icon>\r\n            <span class=\"nav-item\" [routerLink]=\"['search']\" [queryParams]=\"{'section': section}\">{{section}}</span>\r\n            <mdb-icon class=\"right-angle-icon\" fas icon=\"angle-double-right\" *ngIf=\"categoryType\"></mdb-icon>\r\n            <span class=\"nav-item\" [routerLink]=\"['search']\" [queryParams]=\"{'categoryType': categoryType}\">{{categoryType}}</span>\r\n            <mdb-icon class=\"right-angle-icon\" fas icon=\"angle-double-right\" *ngIf=\"catergorySubType\"></mdb-icon>\r\n            <span class=\"nav-item\" [routerLink]=\"['search']\" [queryParams]=\"{'catergorySubType': catergorySubType}\">{{catergorySubType}}</span>\r\n        </div>\r\n        <div class=\"product-heading\">\r\n            <h3 *ngIf=\"!section && !categoryType && !catergorySubType\">SEARCH ITEMS</h3>\r\n            <h3 *ngIf=\"!categoryType && !catergorySubType\">{{section | uppercase}}</h3>\r\n            <h3 *ngIf=\"!catergorySubType\">{{categoryType | uppercase}}</h3>\r\n            <h3 *ngIf=\"catergorySubType\">{{catergorySubType | uppercase}}</h3>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"container-fluid products-container\">\r\n    <hr>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 col-filter-sort\">\r\n            <app-sort-filter-block *ngIf=\"allProductsLoaded\"></app-sort-filter-block>\r\n        </div>\r\n        <hr class=\"filter-products-divider\">\r\n        <div class=\"col-md-12 col-product-items\">\r\n            <app-items-block [allProducts]=\"allProducts\" *ngIf=\"allProductsLoaded\"></app-items-block>\r\n\r\n            <div class=\"container products-container sorry-text\" *ngIf=\"!allProductsLoaded\">\r\n                <h2>We're Sorry!</h2>\r\n                <h4>We can't seem find any product that match you're search...</h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from 'src/app/Utilities/services/products/product.service';\r\nimport { UILoaderService } from 'src/app/Utilities/services/ui-loader/ui-loader.service';\r\nimport { GlobalModelsService } from 'src/app/Utilities/services/global/global-models.service';\r\nimport { ProductSearchService } from 'src/app/Utilities/services/products/product-search.service';\r\n\r\n@Component({\r\n  selector: 'app-sort-filter-block',\r\n  templateUrl: './sort-filter-block.component.html',\r\n  styleUrls: ['./sort-filter-block.component.css']\r\n})\r\nexport class SortFilterBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private uiLoaderService: UILoaderService,\r\n    private globalModelsService: GlobalModelsService,\r\n    private productSearchService: ProductSearchService\r\n  ) { }\r\n\r\n  globalModelsLoaded = false\r\n\r\n  leftSteps = 4;\r\n  rightSteps = 4;\r\n  \r\n  priceDropMinIndex = 0;\r\n  priceDropMaxIndex = 4;\r\n\r\n  priceDropMin: string = '0';\r\n  priceDropMax: string = '100000';\r\n\r\n  _main_priceMinValues = ['0', '1500', '3000', '5000', '10000'];\r\n  _main_priceMaxValues = ['1500', '3000', '5000', '10000', '100000'];\r\n\r\n  priceMinValues = ['0', '1500', '3000', '5000', '10000'];\r\n  priceMaxValues = ['1500', '3000', '5000', '10000', '100000'];\r\n\r\n  allFilters: any = new Map<string, string[]>();\r\n\r\n  catergories = [];\r\n  materials = [];\r\n  section = [];\r\n  metalPurity = [];\r\n  offers = [];\r\n\r\n  allSort = ['Newly Listed', 'Price - High to Low', 'Price - Low to High', 'Discount'];\r\n\r\n  \r\n  selectedFilters = new Map<string, string[]>();\r\n  selectedSort: string = '';\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.globalModelsService.globalModelsLoaded) {\r\n      this.loadComponentData()\r\n      this.globalModelsLoaded = this.globalModelsService.globalModelsLoaded;\r\n    }\r\n\r\n    this.globalModelsService.globalModelsLoadedObservable.subscribe(\r\n      (globalModelsLoaded) => {\r\n        if(globalModelsLoaded) {\r\n          this.loadComponentData();\r\n        }\r\n        this.globalModelsLoaded = globalModelsLoaded;\r\n      }\r\n    )\r\n  }\r\n\r\n  loadComponentData() {\r\n    this.catergories = this.globalModelsService.getCategoryNamesAsList()\r\n    this.materials = this.globalModelsService.getMaterialNamesAsList()\r\n    this.section = this.globalModelsService.getSectionNamesAsList()\r\n    this.metalPurity = this.globalModelsService.getMetalPurtiesAsList()\r\n    this.offers = this.globalModelsService.getDiscountPercentsAsList()\r\n\r\n    console.log('Categories filter ==> ', this.catergories)\r\n\r\n    this.allFilters.set('Categories', this.catergories);\r\n    this.allFilters.set('Section', this.section);\r\n    this.allFilters.set('Materials', this.materials);\r\n    this.allFilters.set('Metal Purity', this.metalPurity);\r\n    this.allFilters.set('Offers', this.offers);\r\n\r\n    this.selectedSort = this.allSort[0];\r\n  }\r\n\r\n  checkIfSelected(key: string, checkValue: string) {\r\n    if (this.selectedFilters.size <= 0)\r\n      return false;\r\n\r\n    if(this.selectedFilters.has(key))\r\n      return this.selectedFilters.get(key).includes(checkValue);\r\n    \r\n    return false;\r\n\r\n  }\r\n\r\n  addToFilter(key: string, value: string) {\r\n    if(!this.selectedFilters.has(key)) {\r\n      this.selectedFilters.set(key, [value]);\r\n    }\r\n    else if(!this.checkIfSelected(key, value)) {\r\n      let values = this.selectedFilters.get(key);\r\n      values.push(value);\r\n      this.selectedFilters.set(key, values);\r\n    } else if(this.checkIfSelected(key, value)) {\r\n      this.deleteFromFilter(key, value);\r\n    }\r\n\r\n  }\r\n  \r\n  deleteFromFilter(key: string, value: string) {\r\n\r\n    if (this.selectedFilters.has(key)) {\r\n      let values = this.selectedFilters.get(key);\r\n\r\n      if(values.length === 1) {\r\n        this.selectedFilters.delete(key)\r\n      } else {\r\n        const index = values.indexOf(value, 0);\r\n        if (index > -1) {\r\n          values.splice(index, 1);\r\n        }\r\n        this.selectedFilters.set(key, values);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  deleteFilter(key: string) {\r\n    if (this.selectedFilters.has(key))\r\n      this.selectedFilters.delete(key)\r\n  }\r\n\r\n  resetAllFilters() {\r\n    this.selectedFilters = new Map<string, string[]>();\r\n    this.selectedSort = this.allSort[0];\r\n  }\r\n\r\n  setSortCriteria(item: string) {\r\n    this.selectedSort = item;\r\n    this.productService.sortCurrentProductsObserver.next(item);\r\n  }\r\n\r\n  validatePriceValues() {\r\n    const maxNumber = this._main_priceMaxValues.indexOf(this.priceDropMax, 0);\r\n    const minNumber = this._main_priceMinValues.indexOf(this.priceDropMin, 0);\r\n\r\n    this.priceMinValues = this._main_priceMinValues.slice(0, maxNumber+1)\r\n    this.priceMaxValues = this._main_priceMaxValues.slice(minNumber)\r\n  }\r\n\r\n  applyAllFilters() {\r\n\r\n    // UI Loader is started before calling for products\r\n    console.log(this.uiLoaderService.apiLoadingScreen + ' set to ' + true)\r\n    this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n    const globalProductDetails = this.productSearchService.prepareGlobalProductDetailsForFilter(\r\n      this.selectedFilters,\r\n      this.selectedSort,\r\n      this.priceDropMin,\r\n      this.priceDropMax\r\n    );\r\n\r\n    this.productService.fetchProductsBasedOnFilter(globalProductDetails);\r\n  }\r\n\r\n  getTitle(collection: string) {\r\n    return 'Remove ' + collection;\r\n  }\r\n\r\n}\r\n ","<div class=\"sort-and-filter-blk untouchable\" *ngIf=\"globalModelsLoaded\">\r\n    <div class=\"filter-box\">\r\n        <div class=\"category-brws\">\r\n            <div class=\"pull-left font-medium filterhead visible-md visible-lg\"><span>FILTER BY </span></div>\r\n            <div class=\"filters clearfix\">\r\n                <div class=\"dropdown pull-left list-first\">\r\n                    <button class=\"btn dropdown-toggle text-overflow\" type=\"button\" data-toggle=\"dropdown\">Price</button>\r\n                    <div class=\"price-dropdown dropdown-menu \">\r\n                        <ul class=\"padding\">\r\n                            <li class=\"font-medium visible-sm visible-xs\">Price</li>\r\n                            <li class=\"price-list\">\r\n                                <div id=\"price-amount\">\r\n                                    ${{priceDropMin}} - ${{priceDropMax}}\r\n                                </div>\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"margin-top price-select row\">\r\n                                    <div class=\"col-xs-6 padding-right-half\">\r\n                                        <select class=\"form-control\" [(ngModel)]=\"priceDropMin\" (change)=\"validatePriceValues()\">\r\n                                            <option [value]=\"item\" *ngFor=\"let item of priceMinValues\">{{item}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"col-xs-6 padding-left-half\">\r\n                                        <select class=\"form-control\" [(ngModel)]=\"priceDropMax\" (change)=\"validatePriceValues()\">\r\n                                            <option [value]=\"item\" *ngFor=\"let item of priceMaxValues\">{{item}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dropdown pull-left list-first\" *ngFor=\"let filterItem of allFilters | keyvalue; let i=index\">\r\n                    <button class=\"btn dropdown-toggle text-overflow\" type=\"button\" data-toggle=\"dropdown\" *ngIf=\"filterItem.value.length > 0\">\r\n                        {{filterItem.key}}\r\n                    </button>\r\n                    <div class=\"dropdown-menu \" *ngIf=\"filterItem.value.length > 0\">\r\n                        <ul class=\"padding\">\r\n                            <li *ngFor=\"let item of filterItem.value; let j=index\" (click)=\"addToFilter(filterItem.key, item)\">\r\n                                <label class=\"attributeSearchLabel\" [id]=\"item + i + j\">\r\n                                    <a href=\"Javascript:void(0);\" class=\"attrFilterURL\"\r\n                                        [ngClass]=\"{'font-small': !checkIfSelected(filterItem.key, item), 'bpfc': checkIfSelected(filterItem.key, item) , 'font-medium': checkIfSelected(filterItem.key, item) }\"\r\n                                        hrefurl=\"\">{{item}}</a>\r\n                                </label>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"pull-left\">\r\n                    <button class=\"btn btn-outline-dark apply-btn text-overflow\" (click)=\"applyAllFilters()\" type=\"button\" data-toggle=\"dropdown\">Apply</button>\r\n                    <button class=\"btn btn-outline-dark reset-btn text-overflow\" (click)=\"resetAllFilters()\" type=\"button\" data-toggle=\"dropdown\">Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"sort-box\">\r\n        <span class=\"pull-left sort-label font-small hidden-xs hidden-sm\">Sort By</span>\r\n        <div class=\"dropdown pull-right rmv-margin-right list-first\">\r\n            <button class=\"btn dropdown-toggle text-overflow hidden-xs hidden-sm sort-btn\" type=\"button\" data-toggle=\"dropdown\">\r\n                <span class=\"sortelement\">{{selectedSort}}</span>\r\n            </button>\r\n            <button class=\"btn dropdown-toggle text-overflow visible-xs visible-sm\" type=\"button\" data-toggle=\"dropdown\">\r\n                <span class=\"sortelement\">Sort By</span>\r\n            </button>\r\n            <div class=\"dropdown-menu\">\r\n                <ul class=\"padding-vertical\">\r\n                    <li *ngFor=\"let item of allSort; let i=index\" (click)=\"setSortCriteria(item)\">\r\n                        <a href=\"Javascript:void(0);\" class=\"sortby\" [class.active]=\"item==selectedSort\" id=\"popularity\">{{item}}</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n    <div class=\"refined-box-content\">\r\n        <div class=\"filter-items-box\">\r\n            <span class=\"font-semibold\" id=\"filterby-products\">FILTERED BY </span>\r\n            <div class=\"filters-top-selected\">\r\n                <span class=\"deleteFilterHead\">Price</span> :\r\n                <a class=\"deleteFilter\">\r\n                    ${{priceDropMin}} - ${{priceDropMax}}\r\n                </a>\r\n            </div>\r\n            <div class=\"filters-top-selected\" *ngFor=\"let filters of selectedFilters | keyvalue\">\r\n                <span class=\"deleteFilterHead deleteFilterKey\" [title]=\"getTitle(filters.key)\" (click)=\"deleteFilter(filters.key)\">{{filters.key}}</span> :\r\n                <a class=\"deleteFilter\" [title]=\"getTitle(item)\" *ngFor=\"let item of filters.value\">\r\n                    {{item}}\r\n                    <mdb-icon fas icon=\"times-circle\" class=\"delete-filter\" (click)=\"deleteFromFilter(filters.key, item)\"></mdb-icon>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"sort-item-box\">\r\n            <span class=\"font-semibold\" id=\"filterby-products\">SORTED BY </span> :\r\n            <div class=\"filters-top-selected\">\r\n                <span class=\"deleteFilterHead\">{{selectedSort}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../Utilities/services/users/user.service';\r\nimport { ProductKartService } from '../Utilities/services/products/orders/product-kart.service';\r\nimport { ProductKart } from '../Utilities/models/products/orders/product-kart.model';\r\nimport { UILoaderService } from '../Utilities/services/ui-loader/ui-loader.service';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\nimport { Product } from '../Utilities/models/products/product.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-kart',\r\n  templateUrl: './product-kart.component.html',\r\n  styleUrls: ['./product-kart.component.css']\r\n})\r\nexport class ProductKartComponent implements OnInit {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private kartService: ProductKartService,\r\n    private uiLoaderService: UILoaderService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  disableBtn = false;\r\n  minusFade = false;\r\n  plusFade = false;\r\n\r\n  kartProducts: ProductKart[] = [];\r\n  kartLoaded = false;\r\n\r\n  totalKartAmount = 0;\r\n\r\n  isUserLoggedIn = false;\r\n\r\n  productItem: Product;\r\n\r\n  showProduct: boolean = false;\r\n  \r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.isUserLoggedIn = this.userService.customerLoggedIn\r\n\r\n    this.userService.customerLoggedInObserver.subscribe(\r\n      (localUserloggedIn) => {\r\n        this.isUserLoggedIn = localUserloggedIn\r\n\r\n        if(this.isUserLoggedIn) {\r\n          this.kartService.fetchUserKart()\r\n        } else {\r\n          this.router.navigate(['/', 'home'])\r\n        }\r\n\r\n      }\r\n    )\r\n\r\n    this.kartService.kartCountLoadedObserver.subscribe(\r\n      (kartCount: number) => {\r\n        if(kartCount > 0) {\r\n          this.disableBtn = false\r\n          this.kartProducts = this.kartService.getKartProducts()\r\n        \r\n          this.totalKartAmount = this.kartService.getTotalKartAmount()\r\n        } else {\r\n          this.totalKartAmount = 0\r\n          this.disableBtn = true\r\n        }\r\n\r\n        this.kartLoaded = kartCount > 0\r\n\r\n        if(this.kartProducts == null || this.kartProducts.length == 0) {\r\n          this.kartLoaded = false;\r\n          this.disableBtn = true\r\n        }\r\n\r\n        // Stops UI Loader for Kart Items\r\n        this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, false]);\r\n      }\r\n    )\r\n\r\n    this.kartService.fetchUserKart()\r\n  }\r\n\r\n  openProductModel(product: Product) {\r\n    this.productItem = product\r\n    this.showProduct = true\r\n    this.basicModal.show()\r\n  }\r\n\r\n  deleteAllKart() {\r\n    if(this.kartProducts != null && this.kartProducts.length > 0) {\r\n      // Starts UI Loader for Kart Items\r\n      this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n      this.kartService.deleteKartItems(null, 0)\r\n    }\r\n  }\r\n\r\n  deleteKartItemByID(productId: string) {\r\n    this.uiLoaderService.loaderObservable.next([this.uiLoaderService.apiLoadingScreen, true]);\r\n    this.kartService.deleteKartItems(productId, 0)\r\n  }\r\n\r\n  adjustProductDetails(type: string, index: number) {\r\n    this.minusFade = this.plusFade = false\r\n    if(type === 'add') {\r\n      this.kartProducts[index].product.cartQuantity++;\r\n    } else if(type === 'minus') {\r\n      this.kartProducts[index].product.cartQuantity--;\r\n    }\r\n\r\n    if (this.kartProducts[index].product.cartQuantity > this.kartProducts[index].product.inStockQuantity) {\r\n      this.kartProducts[index].product.cartQuantity = this.kartProducts[index].product.inStockQuantity\r\n      this.plusFade = true;\r\n    }\r\n\r\n    if (this.kartProducts[index].product.cartQuantity <= 0) {\r\n      this.kartProducts[index].product.cartQuantity = 1\r\n      this.minusFade = true;\r\n    }\r\n\r\n    this.kartProducts[index].quantity = this.kartProducts[index].product.cartQuantity\r\n    \r\n    this.adjustKartList()\r\n  }\r\n\r\n  adjustKartList() {\r\n    this.totalKartAmount = 0\r\n    this.kartProducts.forEach(\r\n      (kp) => {\r\n          let amount = this.kartService.getTotalAmount(kp.product.discountedPrice, kp.quantity)\r\n          this.totalKartAmount += amount\r\n          kp.product.totalAmount = amount\r\n      }\r\n    )\r\n    this.totalKartAmount = Math.round(this.totalKartAmount * 100) / 100;\r\n  }\r\n\r\n  updateKartAndCheckout() {\r\n\r\n    this.kartService.updateKartProducts(this.kartProducts).subscribe (\r\n      (localKartProducts: ProductKart[]) => {\r\n          this.router.navigate(['/', 'ui-checkout']).catch(\r\n            error => {\r\n              console.log(\"error while redirecting to checkout --> \", error)\r\n            }\r\n          )\r\n      },\r\n      error => {\r\n        this.kartService.kartHandleError(error)\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid kart-container untouchable\">\r\n    <div class=\"cont-breadcrumbs\">\r\n        <span class=\"nav-item\" [routerLink]=\"['/', 'home']\">Home</span>\r\n        <mdb-icon class=\"right-angle-icon\" fas icon=\"angle-double-right\"></mdb-icon>\r\n        <span class=\"nav-item\">Cart</span>\r\n    </div>\r\n    <div class=\"kart-heading-block\">\r\n        <h2>Shopping Cart Details</h2>\r\n    </div>\r\n    <hr>\r\n    <div class=\"row kart-row\">\r\n        <div class=\"col-md-8 p-col animate wow slideInLeft\">\r\n            <div class=\"del-entire-cart\">\r\n                <button mdbBtn class=\"btn j-btn j-btn-allow del-btn\" color=\"danger\" [disabled]=\"disableBtn\" (click)=\"deleteAllKart()\" mdbWavesEffect>Remove All</button>\r\n            </div>\r\n            <div class=\"all-kart-pro\" *ngIf=\"kartLoaded\">\r\n                <!-- News jumbotron -->\r\n                <div class=\"jumbotron text-center hoverable p-4 kart-pro animate wow slideInUp\" *ngFor=\"let item of kartProducts; let i = index\">\r\n                    <!-- Grid row -->\r\n                    <div class=\"row\">\r\n                        <!-- Grid column -->\r\n                        <div class=\"col-md-4 offset-md-1 mx-3 my-3\">\r\n                            <!-- Featured image -->\r\n                            <div class=\"view overlay waves-light\" mdbWavesEffect>\r\n                                <img [src]=\"item.product.imagePath\" class=\"img-fluid kart-img\" [alt]=\"item.product.productName\">\r\n                            </div>\r\n                        </div>\r\n                        <!-- Grid column -->\r\n                        <!-- Grid column -->\r\n                        <div class=\"col-md-7 text-md-left ml-3 mt-3\">\r\n\r\n                            <!-- Excerpt -->\r\n                            <a [routerLink]=\"['/', 'ui-products']\" [queryParams]=\"{'categoryType': item.product.categoryName}\" class=\"green-text\">\r\n                                <h6 class=\"h6 pb-1\">\r\n                                    <mdb-icon fas icon=\"folder-open\" class=\"pr-1\"></mdb-icon>{{item.product.categoryName}}\r\n                                </h6>\r\n                            </a>\r\n\r\n                            <h4 class=\"h4 prod-name\" (click)=\"openProductModel(item.product)\">{{item.product.productName}}</h4>\r\n                            <h6 class=\"h6 mb-3 prod-code\">code: {{item.product.productID}}</h6>\r\n\r\n                            <span class=\"font-weight-normal prod-price\">price: \r\n                                <span class=\"grey-price\"><strong>{{item.product.price}}$</strong></span>\r\n                            <span class=\"disc-price\"><strong>{{item.product.discountedPrice}}$</strong></span>\r\n                            </span>\r\n                            <span class=\"font-weight-normal prod-price\">InStock: \r\n                                <span class=\"stock-amt\"><strong>{{item.product.inStockQuantity}}</strong></span>\r\n                            </span>\r\n\r\n                            <div class=\"input-blk\">\r\n                                <span class=\"quantity-minus label-md\" [class.quantity-fade]=\"minusFade\" (click)=\"adjustProductDetails('minus', i)\">-</span>\r\n                                <input class=\"qty-input-number\" type=\"number\" [value]=\"item.quantity\" disabled>\r\n                                <span class=\"quantity-plus label-md\" [class.quantity-fade]=\"plusFade\" (click)=\"adjustProductDetails('add', i)\">+</span>\r\n                            </div>\r\n\r\n                            <a mdbBtn class=\"del-item-btn\" color=\"warning\" (click)=\"deleteKartItemByID(item.product.productID)\" mdbWavesEffect>Delete</a>\r\n\r\n\r\n                            <a *ngIf=\"isUserLoggedIn\" mdbBtn color=\"success\" class=\"wish-list-btn\" mdbWavesEffect>Move to Wishlist</a>\r\n\r\n                        </div>\r\n                        <!-- Grid column -->\r\n                    </div>\r\n                    <!-- Grid row -->\r\n                </div>\r\n            </div>\r\n            <!-- News jumbotron -->\r\n            <div class=\"no-kart\" *ngIf=\"!kartLoaded\">\r\n                <span class=\"no-kart-items\">Please add items in the cart to see here..!!</span>\r\n                <img src=\"assets/empty_kart.png\" width=\"250px\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4 s-col animate wow slideInRight\">\r\n            <button [disabled]=\"disableBtn\" (click)=\"updateKartAndCheckout()\" mdbBtn mdbWavesEffect class=\"btn place-order\">Checkout</button>\r\n            <div class=\"kart-summary-block\">\r\n                <div class=\"kart-summ-head\">\r\n                    <h2>Cart Summary:</h2>\r\n                </div>\r\n                <hr>\r\n                <div class=\"kart-amt-summ\">\r\n                    <div class=\"amt-summ-item\">\r\n                        <span class=\"item-label summ-item-label\">Sub Total:</span>\r\n                        <div class=\"sum-val-adj\">\r\n                            <span class=\"item-val summ-item-val\">${{totalKartAmount}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"amt-summ-item\">\r\n                        <span class=\"item-label summ-item-label\">Shipping:</span>\r\n                        <div class=\"sum-val-adj\">\r\n                            <span class=\"item-val summ-item-val\">Free</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n                <div class=\"kart-amt-tot\">\r\n                    <span class=\"item-label summ-item-label\">Total Amount:</span>\r\n                    <div class=\"sum-val-adj\">\r\n                        <span class=\"item-val summ-item-val\" style=\"font-weight: 900;\">${{totalKartAmount}} /-</span>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n                <div class=\"kart-promo-block\">\r\n                    <div class=\"pro-det\">\r\n                        <span class=\"item-label coupon-label\">Apply Coupon</span>\r\n                        <input class=\"coupon-input\" type=\"text\">\r\n                        <button class=\"btn coupon-btn\" disabled>Apply</button>\r\n                    </div>\r\n                </div>\r\n                <button [disabled]=\"disableBtn\" (click)=\"updateKartAndCheckout()\" mdbBtn mdbWavesEffect class=\"btn place-order\">Checkout</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [allowBuy]=\"false\" [productItem]='productItem'>\r\n        </app-product-item>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Product } from '../Utilities/models/products/product.model';\r\nimport { WishListService } from '../Utilities/services/products/orders/wish-list.service';\r\nimport { WishList } from '../Utilities/models/products/orders/wish-list.model';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\n\r\n@Component({\r\n  selector: 'app-wishlist-block',\r\n  templateUrl: './wishlist-block.component.html',\r\n  styleUrls: ['./wishlist-block.component.css']\r\n})\r\nexport class WishlistBlockComponent implements OnInit {\r\n\r\n  constructor(\r\n    private wishListService: WishListService\r\n  ) { }\r\n\r\n  isUserLoggedIn = false\r\n\r\n  wishList: WishList;\r\n  wishListLoaded = false;\r\n\r\n  disableBtn = true\r\n\r\n  productItem: Product;\r\n  showProduct: boolean = false;\r\n  @ViewChild('basicModal') basicModal: ModalDirective;\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.wishListService.wishListLoadedObservable.subscribe(\r\n      (wishListLoadedLocal) => {\r\n        if(wishListLoadedLocal)\r\n          this.wishList = this.wishListService.getWishList()\r\n\r\n        this.disableBtn = !wishListLoadedLocal\r\n        this.wishListLoaded = wishListLoadedLocal\r\n      }\r\n    )\r\n\r\n    this.wishListService.fetchUserWishList()\r\n  }\r\n\r\n  openProductModel(product: Product) {\r\n    this.productItem = product\r\n    this.showProduct = true\r\n    this.basicModal.show()\r\n  }\r\n\r\n  deleteItemByID(productId: number) {\r\n    if(this.wishList != null && this.wishList.wishListProducts != null && this.wishList.wishListProducts.length > 1)\r\n      this.wishListService.deleteProductFromWishList(productId)\r\n    else if(this.wishList != null && this.wishList.wishListProducts != null && this.wishList.wishListProducts.length == 1)\r\n      this.deleteAllItems()\r\n  }\r\n\r\n  deleteAllItems() {\r\n    if(this.wishList != null && this.wishList.wishListProducts != null && this.wishList.wishListProducts.length > 0) \r\n      this.wishListService.deleteAllItems()\r\n  }\r\n\r\n}\r\n","<div class=\"wl-con\">\r\n    <div class=\"wl-head\">\r\n        <span>Your Wishlist</span>\r\n    </div>\r\n    <div class=\"wl-block\">\r\n        <div class=\"wlb-body\">\r\n            <div class=\"del-wish-list\">\r\n                <button mdbBtn class=\"btn j-btn j-btn-allow del-btn\" color=\"danger\" [disabled]=\"disableBtn\" (click)=\"deleteAllItems()\" mdbWavesEffect>Remove All</button>\r\n            </div>\r\n            <div class=\"row wlb-row\">\r\n                <div class=\"col-md-10 wlb-item\">\r\n                    <div class=\"wlb-item-inr\" *ngIf=\"wishListLoaded\">\r\n                        <div class=\"jumbotron text-center hoverable wish-list-pro animate wow slideInUp\" *ngFor=\"let item of wishList.wishListProducts; let i = index\">\r\n                            <!-- Grid row -->\r\n                            <div class=\"row\">\r\n                                <!-- Grid column -->\r\n                                <div class=\"col-md-4 offset-md-1 mx-3 my-3\">\r\n                                    <!-- Featured image -->\r\n                                    <div class=\"view overlay waves-light\" mdbWavesEffect>\r\n                                        <img [src]=\"item.imagePath\" class=\"img-fluid wish-list-img\" [alt]=\"item.productName\">\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Grid column -->\r\n                                <!-- Grid column -->\r\n                                <div class=\"col-md-7 text-md-left ml-3 mt-3\">\r\n\r\n                                    <!-- Excerpt -->\r\n                                    <a [routerLink]=\"['/', 'ui-products']\" [queryParams]=\"{'categoryType': item.categoryName}\" class=\"green-text\">\r\n                                        <h6 class=\"h6 pb-1\">\r\n                                            <mdb-icon fas icon=\"folder-open\" class=\"pr-1\"></mdb-icon>{{item.categoryName}}\r\n                                        </h6>\r\n                                    </a>\r\n\r\n                                    <h4 class=\"h4 prod-name\" (click)=\"openProductModel(item)\">{{item.productName}}</h4>\r\n                                    <h6 class=\"h6 mb-3 prod-code\">code: {{item.productID}}</h6>\r\n\r\n                                    <span class=\"font-weight-normal prod-price\">price: \r\n                                        <span class=\"grey-price\"><strong>{{item.price}}$</strong></span>\r\n                                    <span class=\"disc-price\"><strong>{{item.discountedPrice}}$</strong></span>\r\n                                    </span>\r\n                                    <span class=\"font-weight-normal prod-price\">InStock: \r\n                                        <span class=\"stock-amt\"><strong>{{item.inStockQuantity}}</strong></span>\r\n                                    </span>\r\n\r\n                                    <a mdbBtn class=\"del-item-btn\" color=\"warning\" (click)=\"deleteItemByID(item.productID)\" mdbWavesEffect>Delete</a>\r\n\r\n\r\n                                    <a *ngIf=\"isUserLoggedIn\" mdbBtn color=\"success\" class=\"wish-list-btn\" mdbWavesEffect>Move to Wishlist</a>\r\n\r\n                                </div>\r\n                                <!-- Grid column -->\r\n                            </div>\r\n                            <!-- Grid row -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div style=\"overflow-y: auto\" mdbModal #basicModal=\"mdbModal\" class=\"modal fade bottom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-exlg\" role=\"document\">\r\n        <app-product-item *ngIf='showProduct' [basicModal]='basicModal' [allowBuy]=\"true\" [productItem]='productItem'>\r\n        </app-product-item>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}